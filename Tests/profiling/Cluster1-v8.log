v8-version,9,4,146,24,-node.14,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff760a80000,0x7ff7645d3000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ff90ccd0000,0x7ff90cec5000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ff90c310000,0x7ff90c3ce000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ff90a690000,0x7ff90a958000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ff90c1c0000,0x7ff90c22b000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ff902040000,0x7ff902224000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ff90c680000,0x7ff90c7aa000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ff90a3f0000,0x7ff90a4f0000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ff90c9b0000,0x7ff90c9b8000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ff9097c0000,0x7ff9097fb000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ff90c260000,0x7ff90c30c000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ff90a2b0000,0x7ff90a2de000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ff90b3e0000,0x7ff90b47e000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ff90c3d0000,0x7ff90c46b000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ff90c9d0000,0x7ff90cb71000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ff90a960000,0x7ff90a982000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ff90c980000,0x7ff90c9ab000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ff90ac10000,0x7ff90ad1b000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ff90ab70000,0x7ff90ac0d000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ff90a9e0000,0x7ff90ab36000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ff90ab40000,0x7ff90ab67000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ff900160000,0x7ff900187000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ff909ce0000,0x7ff909cec000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ff90c230000,0x7ff90c260000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ff909e90000,0x7ff909edb000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ff909e70000,0x7ff909e82000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ff907e30000,0x7ff907ece000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ff90ad20000,0x7ff90b075000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ff909ad0000,0x7ff909b3a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ff908310000,0x7ff908322000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ff90a550000,0x7ff90a5d3000,0
shared-library-end
tick,0x7ff90cd6cdf4,170923,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1bd537d0000,0
new,MemoryChunk,0x3b908240000,262144
new,MemoryChunk,0x22c9d400000,262144
new,MemoryChunk,0x348d9340000,262144
new,MemoryChunk,0x12152940000,262144
new,MemoryChunk,0x275c3240000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x308e280000,262144
new,MemoryChunk,0x1aced580000,262144
new,MemoryChunk,0x17a320c0000,262144
new,MemoryChunk,0x882f800000,262144
new,MemoryChunk,0xc16c3c0000,262144
new,MemoryChunk,0x31fadec0000,262144
new,MemoryChunk,0x162d6f80000,262144
new,MemoryChunk,0x1bd53800000,262144
new,MemoryChunk,0x1a8780000,262144
code-creation,Builtin,2,175512,0x7ff7615ea994,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,175527,0x7ff7615eaef4,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,175534,0x7ff7615eb0d4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,175541,0x7ff7615eb354,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,175548,0x7ff7615eb434,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,175555,0x7ff7615eb5b4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,175562,0x7ff7615eb654,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,175568,0x7ff7615eb694,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,175575,0x7ff7615eb814,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,175582,0x7ff7615eb9d4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,175648,0x7ff7615ebb94,104,CallBoundFunction
code-creation,Builtin,2,175658,0x7ff7615ebc14,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,175665,0x7ff7615ebc94,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,175672,0x7ff7615ebd14,120,Call_ReceiverIsAny
code-creation,Builtin,2,175678,0x7ff7615ebd94,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,175686,0x7ff7615ec194,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,175693,0x7ff7615ec594,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,175700,0x7ff7615ec9d4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,175707,0x7ff7615ece14,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,175714,0x7ff7615ed254,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,175721,0x7ff7615ed694,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,175728,0x7ff7615eda54,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,175735,0x7ff7615ede14,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,175741,0x7ff7615ee1d4,736,CallProxy
code-creation,Builtin,2,175747,0x7ff7615ee4d4,148,CallVarargs
code-creation,Builtin,2,175754,0x7ff7615ee574,944,CallWithSpread
code-creation,Builtin,2,175760,0x7ff7615ee934,1956,CallWithSpread_Baseline
code-creation,Builtin,2,175766,0x7ff7615ef0f4,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,175773,0x7ff7615ef894,864,CallWithArrayLike
code-creation,Builtin,2,175779,0x7ff7615efc14,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,175786,0x7ff7615f0334,156,CallForwardVarargs
code-creation,Builtin,2,175793,0x7ff7615f03d4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,175799,0x7ff7615f0474,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,175806,0x7ff7615f0514,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,175813,0x7ff7615f0614,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,175821,0x7ff7615f0754,28,ConstructFunction
code-creation,Builtin,2,175827,0x7ff7615f0774,104,ConstructBoundFunction
code-creation,Builtin,2,175834,0x7ff7615f07f4,28,ConstructedNonConstructable
code-creation,Builtin,2,175840,0x7ff7615f0814,100,Construct
code-creation,Builtin,2,175846,0x7ff7615f0894,148,ConstructVarargs
code-creation,Builtin,2,175852,0x7ff7615f0934,968,ConstructWithSpread
code-creation,Builtin,2,175859,0x7ff7615f0d14,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,175866,0x7ff7615f13f4,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,175873,0x7ff7615f1af4,924,ConstructWithArrayLike
code-creation,Builtin,2,175880,0x7ff7615f1e94,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,175887,0x7ff7615f2514,196,ConstructForwardVarargs
code-creation,Builtin,2,175895,0x7ff7615f25f4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,175951,0x7ff7615f26d4,804,Construct_Baseline
code-creation,Builtin,2,175962,0x7ff7615f2a14,820,Construct_WithFeedback
code-creation,Builtin,2,175969,0x7ff7615f2d54,476,JSConstructStubGeneric
code-creation,Builtin,2,175976,0x7ff7615f2f34,376,JSBuiltinsConstructStub
code-creation,Builtin,2,175983,0x7ff7615f30b4,676,FastNewObject
code-creation,Builtin,2,175989,0x7ff7615f3374,292,FastNewClosure
code-creation,Builtin,2,175996,0x7ff7615f34b4,720,ConstructProxy
code-creation,Builtin,2,176002,0x7ff7615f3794,360,JSEntry
code-creation,Builtin,2,176009,0x7ff7615f3914,360,JSConstructEntry
code-creation,Builtin,2,176015,0x7ff7615f3a94,360,JSRunMicrotasksEntry
code-creation,Builtin,2,176022,0x7ff7615f3c14,96,JSEntryTrampoline
code-creation,Builtin,2,176028,0x7ff7615f3c94,96,JSConstructEntryTrampoline
code-creation,Builtin,2,176035,0x7ff7615f3d14,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,176042,0x7ff7615f3e34,1116,StringCodePointAt
code-creation,Builtin,2,176048,0x7ff7615f4294,1552,StringFromCodePointAt
code-creation,Builtin,2,176055,0x7ff7615f48b4,544,StringEqual
code-creation,Builtin,2,176062,0x7ff7615f4af4,276,StringGreaterThan
code-creation,Builtin,2,176108,0x7ff7615f4c14,276,StringGreaterThanOrEqual
code-creation,Builtin,2,176117,0x7ff7615f4d34,276,StringLessThan
code-creation,Builtin,2,176124,0x7ff7615f4e54,276,StringLessThanOrEqual
code-creation,Builtin,2,176130,0x7ff7615f4f74,2492,StringSubstring
code-creation,Builtin,2,176137,0x7ff7615f5934,80,OrderedHashTableHealIndex
code-creation,Builtin,2,176144,0x7ff7615f5994,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,176150,0x7ff7615f5e34,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,176157,0x7ff7615f5e94,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,176164,0x7ff7615f5ef4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,176171,0x7ff7615f5f54,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,176178,0x7ff7615f5fb4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,176186,0x7ff7615f6014,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,176193,0x7ff7615f6074,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,176199,0x7ff7615f60d4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,176206,0x7ff7615f61b4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,176213,0x7ff7615f61f4,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,176220,0x7ff7615f6454,56,BaselineOnStackReplacement
code-creation,Builtin,2,176227,0x7ff7615f6494,84,BaselineLeaveFrame
code-creation,Builtin,2,176233,0x7ff7615f64f4,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,176240,0x7ff7615f65d4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,176247,0x7ff7615f66d4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,176254,0x7ff7615f67b4,1004,CompileLazy
code-creation,Builtin,2,176261,0x7ff7615f6bb4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,176267,0x7ff7615f6c14,252,InstantiateAsmJs
code-creation,Builtin,2,176274,0x7ff7615f6d14,32,NotifyDeoptimized
code-creation,Builtin,2,176280,0x7ff7615f6d54,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,176287,0x7ff7615f7074,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,176294,0x7ff7615f7394,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,176300,0x7ff7615f76b4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,176307,0x7ff7615f79d4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,176314,0x7ff7615f7a14,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,176321,0x7ff7615f7a54,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,176328,0x7ff7615f7a94,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,176335,0x7ff7615f7af4,288,CallApiCallback
code-creation,Builtin,2,176341,0x7ff7615f7c34,268,CallApiGetter
code-creation,Builtin,2,176348,0x7ff7615f7d54,12,HandleApiCall
code-creation,Builtin,2,176354,0x7ff7615f7d74,12,HandleApiCallAsFunction
code-creation,Builtin,2,176361,0x7ff7615f7d94,12,HandleApiCallAsConstructor
code-creation,Builtin,2,176367,0x7ff7615f7db4,64,AllocateInYoungGeneration
code-creation,Builtin,2,176374,0x7ff7615f7e14,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,176381,0x7ff7615f7e54,64,AllocateInOldGeneration
code-creation,Builtin,2,176388,0x7ff7615f7eb4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,176395,0x7ff7615f7ef4,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,176402,0x7ff7615f80b4,496,GrowFastDoubleElements
code-creation,Builtin,2,176408,0x7ff7615f82b4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,176415,0x7ff7615f8454,388,DebugBreakTrampoline
code-creation,Builtin,2,176422,0x7ff7615f85f4,180,ToNumber
code-creation,Builtin,2,176428,0x7ff7615f86b4,292,ToNumber_Baseline
code-creation,Builtin,2,176434,0x7ff7615f87f4,360,ToNumeric_Baseline
code-creation,Builtin,2,176441,0x7ff7615f8974,104,PlainPrimitiveToNumber
code-creation,Builtin,2,176447,0x7ff7615f89f4,212,ToNumberConvertBigInt
code-creation,Builtin,2,176454,0x7ff7615f8ad4,132,Typeof
code-creation,Builtin,2,176462,0x7ff7615f8b74,104,BigIntToI64
code-creation,Builtin,2,176468,0x7ff7615f8bf4,4,BigIntToI32Pair
code-creation,Builtin,2,176476,0x7ff7615f8c14,232,I64ToBigInt
code-creation,Builtin,2,176484,0x7ff7615f8d14,4,I32PairToBigInt
code-creation,Builtin,2,176490,0x7ff7615f8d34,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,176498,0x7ff7615f8db4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,176504,0x7ff7615f9e54,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,176511,0x7ff7615fdc54,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,176518,0x7ff7615fdd74,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,176524,0x7ff7615fddb4,12,LoadIC_StringLength
code-creation,Builtin,2,176531,0x7ff7615fddd4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,176537,0x7ff7615fddf4,3056,LoadIC_NoFeedback
code-creation,Builtin,2,176543,0x7ff7615fe9f4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,176550,0x7ff7615fea34,7332,StoreIC_NoFeedback
code-creation,Builtin,2,176556,0x7ff7616006f4,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,176563,0x7ff7616007b4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,176569,0x7ff761600814,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,176576,0x7ff761600914,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,176584,0x7ff761600a14,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,176591,0x7ff761600b14,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,176598,0x7ff761600c14,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,176605,0x7ff761604434,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,176612,0x7ff7616069d4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,176619,0x7ff761609e14,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,176627,0x7ff76160b5f4,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,176633,0x7ff76160d734,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,176641,0x7ff7616122f4,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,176649,0x7ff761614434,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,176656,0x7ff761616f54,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,176663,0x7ff761617274,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,176669,0x7ff761617334,72,HasIndexedInterceptorIC
code-creation,Builtin,2,176676,0x7ff761617394,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,176682,0x7ff761617414,224,DynamicCheckMaps
code-creation,Builtin,2,176689,0x7ff761617514,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,176696,0x7ff761617594,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,176703,0x7ff761617654,152,EnqueueMicrotask
code-creation,Builtin,2,176709,0x7ff7616176f4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,176716,0x7ff761617714,3476,RunMicrotasks
code-creation,Builtin,2,176723,0x7ff7616184b4,2636,HasProperty
code-creation,Builtin,2,176729,0x7ff761618f14,1156,DeleteProperty
code-creation,Builtin,2,176735,0x7ff7616193b4,1972,CopyDataProperties
code-creation,Builtin,2,176742,0x7ff761619b74,9184,SetDataProperties
code-creation,Builtin,2,176748,0x7ff76161bf74,28,Abort
code-creation,Builtin,2,176754,0x7ff76161bf94,28,AbortCSAAssert
code-creation,Builtin,2,176760,0x7ff76161bfb4,12,EmptyFunction
code-creation,Builtin,2,176767,0x7ff76161bfd4,12,Illegal
code-creation,Builtin,2,176773,0x7ff76161bff4,12,StrictPoisonPillThrower
code-creation,Builtin,2,176780,0x7ff76161c014,12,UnsupportedThrower
code-creation,Builtin,2,176786,0x7ff76161c034,64,ReturnReceiver
code-creation,Builtin,2,176792,0x7ff76161c094,28,ArrayConstructor
code-creation,Builtin,2,176799,0x7ff76161c0b4,404,ArrayConstructorImpl
code-creation,Builtin,2,176805,0x7ff76161c254,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,176813,0x7ff76161c334,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,176820,0x7ff76161c414,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,176828,0x7ff76161c4d4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,176865,0x7ff76161c594,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,176875,0x7ff76161c654,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,176882,0x7ff76161c714,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,176892,0x7ff76161c7d4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,176900,0x7ff76161c894,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,176907,0x7ff76161cab4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,176915,0x7ff76161ccb4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,176922,0x7ff76161ce74,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,176930,0x7ff76161d014,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,176938,0x7ff76161d1d4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,176946,0x7ff76161d374,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,176953,0x7ff76161d554,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,176961,0x7ff76161d6f4,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,176968,0x7ff76161d754,12,ArrayConcat
code-creation,Builtin,2,176974,0x7ff76161d774,12,ArrayPrototypeFill
code-creation,Builtin,2,176981,0x7ff76161d794,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,176987,0x7ff76161db54,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,176994,0x7ff76161dbf4,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,177001,0x7ff76161dcd4,548,ArrayIncludes
code-creation,Builtin,2,177007,0x7ff76161df14,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,177014,0x7ff76161e274,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,177020,0x7ff76161e2f4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,177027,0x7ff76161e374,552,ArrayIndexOf
code-creation,Builtin,2,177033,0x7ff76161e5b4,12,ArrayPop
code-creation,Builtin,2,177039,0x7ff76161e5d4,616,ArrayPrototypePop
code-creation,Builtin,2,177046,0x7ff76161e854,12,ArrayPush
code-creation,Builtin,2,177052,0x7ff76161e874,2424,ArrayPrototypePush
code-creation,Builtin,2,177058,0x7ff76161f1f4,12,ArrayShift
code-creation,Builtin,2,177064,0x7ff76161f214,12,ArrayUnshift
code-creation,Builtin,2,177070,0x7ff76161f234,956,CloneFastJSArray
code-creation,Builtin,2,177077,0x7ff76161f5f4,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,177083,0x7ff76161fe94,976,ExtractFastJSArray
code-creation,Builtin,2,177090,0x7ff761620274,260,ArrayPrototypeEntries
code-creation,Builtin,2,177096,0x7ff761620394,248,ArrayPrototypeKeys
code-creation,Builtin,2,177103,0x7ff761620494,260,ArrayPrototypeValues
code-creation,Builtin,2,177109,0x7ff7616205b4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,177116,0x7ff761621714,4168,FlattenIntoArray
code-creation,Builtin,2,177122,0x7ff761622774,4172,FlatMapIntoArray
code-creation,Builtin,2,177129,0x7ff7616237d4,372,ArrayPrototypeFlat
code-creation,Builtin,2,177135,0x7ff761623954,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,177141,0x7ff761623b14,12,ArrayBufferConstructor
code-creation,Builtin,2,177148,0x7ff761623b34,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,177155,0x7ff761623b54,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,177162,0x7ff761623b74,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,177168,0x7ff761623b94,804,AsyncFunctionEnter
code-creation,Builtin,2,177175,0x7ff761623ed4,132,AsyncFunctionReject
code-creation,Builtin,2,177181,0x7ff761623f74,128,AsyncFunctionResolve
code-creation,Builtin,2,177188,0x7ff761624014,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,177195,0x7ff761624034,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,177202,0x7ff761624b34,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,177210,0x7ff761625634,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,177217,0x7ff7616256f4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,177225,0x7ff7616257b4,12,BigIntConstructor
code-creation,Builtin,2,177231,0x7ff7616257d4,12,BigIntAsUintN
code-creation,Builtin,2,177237,0x7ff7616257f4,12,BigIntAsIntN
code-creation,Builtin,2,177244,0x7ff761625814,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,177250,0x7ff761625834,12,BigIntPrototypeToString
code-creation,Builtin,2,177257,0x7ff761625854,12,BigIntPrototypeValueOf
code-creation,Builtin,2,177264,0x7ff761625874,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,177270,0x7ff761625894,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,177277,0x7ff7616258b4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,177285,0x7ff7616258d4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,177292,0x7ff7616258f4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,177298,0x7ff761625914,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,177305,0x7ff761625934,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,177312,0x7ff761625954,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,177319,0x7ff761625974,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,177325,0x7ff761625994,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,177332,0x7ff7616259b4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,177339,0x7ff7616259d4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,177346,0x7ff7616259f4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,177353,0x7ff761625a14,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,177359,0x7ff761625a34,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,177373,0x7ff761625a54,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,177380,0x7ff761625a74,12,CallSitePrototypeIsEval
code-creation,Builtin,2,177386,0x7ff761625a94,12,CallSitePrototypeIsNative
code-creation,Builtin,2,177393,0x7ff761625ab4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,177400,0x7ff761625ad4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,177407,0x7ff761625af4,12,CallSitePrototypeToString
code-creation,Builtin,2,177414,0x7ff761625b14,12,ConsoleDebug
code-creation,Builtin,2,177421,0x7ff761625b34,12,ConsoleError
code-creation,Builtin,2,177428,0x7ff761625b54,12,ConsoleInfo
code-creation,Builtin,2,177434,0x7ff761625b74,12,ConsoleLog
code-creation,Builtin,2,177441,0x7ff761625b94,12,ConsoleWarn
code-creation,Builtin,2,177447,0x7ff761625bb4,12,ConsoleDir
code-creation,Builtin,2,177454,0x7ff761625bd4,12,ConsoleDirXml
code-creation,Builtin,2,177460,0x7ff761625bf4,12,ConsoleTable
code-creation,Builtin,2,177467,0x7ff761625c14,12,ConsoleTrace
code-creation,Builtin,2,177473,0x7ff761625c34,12,ConsoleGroup
code-creation,Builtin,2,177479,0x7ff761625c54,12,ConsoleGroupCollapsed
code-creation,Builtin,2,177486,0x7ff761625c74,12,ConsoleGroupEnd
code-creation,Builtin,2,177492,0x7ff761625c94,12,ConsoleClear
code-creation,Builtin,2,177498,0x7ff761625cb4,12,ConsoleCount
code-creation,Builtin,2,177504,0x7ff761625cd4,12,ConsoleCountReset
code-creation,Builtin,2,177511,0x7ff761625cf4,12,ConsoleAssert
code-creation,Builtin,2,177518,0x7ff761625d14,12,ConsoleProfile
code-creation,Builtin,2,177524,0x7ff761625d34,12,ConsoleProfileEnd
code-creation,Builtin,2,177530,0x7ff761625d54,12,ConsoleTime
code-creation,Builtin,2,177536,0x7ff761625d74,12,ConsoleTimeLog
code-creation,Builtin,2,177543,0x7ff761625d94,12,ConsoleTimeEnd
code-creation,Builtin,2,177549,0x7ff761625db4,12,ConsoleTimeStamp
code-creation,Builtin,2,177555,0x7ff761625dd4,12,ConsoleContext
code-creation,Builtin,2,177561,0x7ff761625df4,12,DataViewConstructor
code-creation,Builtin,2,177567,0x7ff761625e14,12,DateConstructor
code-creation,Builtin,2,177574,0x7ff761625e34,216,DatePrototypeGetDate
code-creation,Builtin,2,177580,0x7ff761625f14,216,DatePrototypeGetDay
code-creation,Builtin,2,177587,0x7ff761625ff4,216,DatePrototypeGetFullYear
code-creation,Builtin,2,177593,0x7ff7616260d4,216,DatePrototypeGetHours
code-creation,Builtin,2,177601,0x7ff7616261b4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,177609,0x7ff761626294,216,DatePrototypeGetMinutes
code-creation,Builtin,2,177615,0x7ff761626374,216,DatePrototypeGetMonth
code-creation,Builtin,2,177622,0x7ff761626454,216,DatePrototypeGetSeconds
code-creation,Builtin,2,177628,0x7ff761626534,124,DatePrototypeGetTime
code-creation,Builtin,2,177635,0x7ff7616265b4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,177642,0x7ff761626694,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,177648,0x7ff761626774,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,177655,0x7ff761626854,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,177662,0x7ff761626934,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,177668,0x7ff761626a14,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,177675,0x7ff761626af4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,177682,0x7ff761626bd4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,177689,0x7ff761626cb4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,177696,0x7ff761626d94,124,DatePrototypeValueOf
code-creation,Builtin,2,177703,0x7ff761626e14,352,DatePrototypeToPrimitive
code-creation,Builtin,2,177709,0x7ff761626f94,12,DatePrototypeGetYear
code-creation,Builtin,2,177716,0x7ff761626fb4,12,DatePrototypeSetYear
code-creation,Builtin,2,177722,0x7ff761626fd4,12,DateNow
code-creation,Builtin,2,177729,0x7ff761626ff4,12,DateParse
code-creation,Builtin,2,177735,0x7ff761627014,12,DatePrototypeSetDate
code-creation,Builtin,2,177742,0x7ff761627034,12,DatePrototypeSetFullYear
code-creation,Builtin,2,177748,0x7ff761627054,12,DatePrototypeSetHours
code-creation,Builtin,2,177755,0x7ff761627074,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,177761,0x7ff761627094,12,DatePrototypeSetMinutes
code-creation,Builtin,2,177768,0x7ff7616270b4,12,DatePrototypeSetMonth
code-creation,Builtin,2,177774,0x7ff7616270d4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,177781,0x7ff7616270f4,12,DatePrototypeSetTime
code-creation,Builtin,2,177787,0x7ff761627114,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,177794,0x7ff761627134,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,177800,0x7ff761627154,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,177807,0x7ff761627174,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,177814,0x7ff761627194,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,177820,0x7ff7616271b4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,177827,0x7ff7616271d4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,177834,0x7ff7616271f4,12,DatePrototypeToDateString
code-creation,Builtin,2,177841,0x7ff761627214,12,DatePrototypeToISOString
code-creation,Builtin,2,177848,0x7ff761627234,12,DatePrototypeToUTCString
code-creation,Builtin,2,177854,0x7ff761627254,12,DatePrototypeToString
code-creation,Builtin,2,177861,0x7ff761627274,12,DatePrototypeToTimeString
code-creation,Builtin,2,177867,0x7ff761627294,12,DatePrototypeToJson
code-creation,Builtin,2,177874,0x7ff7616272b4,12,DateUTC
code-creation,Builtin,2,177880,0x7ff7616272d4,12,ErrorConstructor
code-creation,Builtin,2,177888,0x7ff7616272f4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,177931,0x7ff761627314,12,ErrorPrototypeToString
code-creation,Builtin,2,177943,0x7ff761627334,12,FunctionConstructor
code-creation,Builtin,2,177950,0x7ff761627354,68,FunctionPrototypeApply
code-creation,Builtin,2,177956,0x7ff7616273b4,12,FunctionPrototypeBind
code-creation,Builtin,2,177963,0x7ff7616273d4,32,FunctionPrototypeCall
code-creation,Builtin,2,177969,0x7ff761627414,12,FunctionPrototypeToString
code-creation,Builtin,2,177976,0x7ff761627434,192,CreateIterResultObject
code-creation,Builtin,2,177983,0x7ff761627514,788,CreateGeneratorObject
code-creation,Builtin,2,177989,0x7ff761627834,12,GeneratorFunctionConstructor
code-creation,Builtin,2,177996,0x7ff761627854,412,GeneratorPrototypeNext
code-creation,Builtin,2,178003,0x7ff7616279f4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,178009,0x7ff761627bb4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,178018,0x7ff761627d74,12,AsyncFunctionConstructor
code-creation,Builtin,2,178026,0x7ff761627d94,372,SuspendGeneratorBaseline
code-creation,Builtin,2,178033,0x7ff761627f14,88,ResumeGeneratorBaseline
code-creation,Builtin,2,178039,0x7ff761627f74,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,178047,0x7ff761627fb4,12,GlobalDecodeURI
code-creation,Builtin,2,178053,0x7ff761627fd4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,178060,0x7ff761627ff4,12,GlobalEncodeURI
code-creation,Builtin,2,178066,0x7ff761628014,12,GlobalEncodeURIComponent
code-creation,Builtin,2,178073,0x7ff761628034,12,GlobalEscape
code-creation,Builtin,2,178079,0x7ff761628054,12,GlobalUnescape
code-creation,Builtin,2,178086,0x7ff761628074,12,GlobalEval
code-creation,Builtin,2,178092,0x7ff761628094,132,GlobalIsFinite
code-creation,Builtin,2,178098,0x7ff761628134,124,GlobalIsNaN
code-creation,Builtin,2,178104,0x7ff7616281b4,12,JsonParse
code-creation,Builtin,2,178110,0x7ff7616281d4,12,JsonStringify
code-creation,Builtin,2,178116,0x7ff7616281f4,4608,LoadIC
code-creation,Builtin,2,178123,0x7ff761629414,4296,LoadIC_Megamorphic
code-creation,Builtin,2,178129,0x7ff76162a4f4,4520,LoadIC_Noninlined
code-creation,Builtin,2,178136,0x7ff76162b6b4,44,LoadICTrampoline
code-creation,Builtin,2,178142,0x7ff76162b6f4,24,LoadICBaseline
code-creation,Builtin,2,178149,0x7ff76162b714,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,178156,0x7ff76162b754,7376,LoadSuperIC
code-creation,Builtin,2,178162,0x7ff76162d434,24,LoadSuperICBaseline
code-creation,Builtin,2,178169,0x7ff76162d454,8148,KeyedLoadIC
code-creation,Builtin,2,178175,0x7ff76162f434,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,178182,0x7ff761632774,44,KeyedLoadICTrampoline
code-creation,Builtin,2,178189,0x7ff7616327b4,24,KeyedLoadICBaseline
code-creation,Builtin,2,178195,0x7ff7616327d4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,178202,0x7ff761632814,5104,StoreGlobalIC
code-creation,Builtin,2,178208,0x7ff761633c14,44,StoreGlobalICTrampoline
code-creation,Builtin,2,178215,0x7ff761633c54,24,StoreGlobalICBaseline
code-creation,Builtin,2,178221,0x7ff761633c74,5340,StoreIC
code-creation,Builtin,2,178227,0x7ff761635154,44,StoreICTrampoline
code-creation,Builtin,2,178234,0x7ff761635194,24,StoreICBaseline
code-creation,Builtin,2,178240,0x7ff7616351b4,5780,KeyedStoreIC
code-creation,Builtin,2,178246,0x7ff761636854,44,KeyedStoreICTrampoline
code-creation,Builtin,2,178252,0x7ff761636894,24,KeyedStoreICBaseline
code-creation,Builtin,2,178260,0x7ff7616368b4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,178267,0x7ff761636a54,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,178274,0x7ff761636a74,140,LookupContextBaseline
code-creation,Builtin,2,178281,0x7ff761636b14,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,178288,0x7ff761636bb4,3244,LoadGlobalIC
code-creation,Builtin,2,178294,0x7ff761637874,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,178300,0x7ff761638514,44,LoadGlobalICTrampoline
code-creation,Builtin,2,178307,0x7ff761638554,24,LoadGlobalICBaseline
code-creation,Builtin,2,178313,0x7ff761638574,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,178320,0x7ff7616385b4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,178326,0x7ff7616385d4,140,LookupGlobalICBaseline
code-creation,Builtin,2,178333,0x7ff761638674,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,178340,0x7ff761638714,2064,CloneObjectIC
code-creation,Builtin,2,178346,0x7ff761638f34,24,CloneObjectICBaseline
code-creation,Builtin,2,178352,0x7ff761638f54,1988,CloneObjectIC_Slow
code-creation,Builtin,2,178359,0x7ff761639734,2756,KeyedHasIC
code-creation,Builtin,2,178365,0x7ff76163a214,24,KeyedHasICBaseline
code-creation,Builtin,2,178371,0x7ff76163a234,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,178377,0x7ff76163ac94,1436,IterableToList
code-creation,Builtin,2,178384,0x7ff76163b234,1240,IterableToFixedArray
code-creation,Builtin,2,178390,0x7ff76163b714,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,178429,0x7ff76163ba14,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,178438,0x7ff76163ba54,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,178445,0x7ff76163bad4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,178451,0x7ff76163beb4,1616,StringListFromIterable
code-creation,Builtin,2,178458,0x7ff76163c514,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,178465,0x7ff76163c9f4,4156,MapConstructor
code-creation,Builtin,2,178471,0x7ff76163da34,1996,MapPrototypeSet
code-creation,Builtin,2,178477,0x7ff76163e214,1524,MapPrototypeDelete
code-creation,Builtin,2,178484,0x7ff76163e814,204,MapPrototypeGet
code-creation,Builtin,2,178490,0x7ff76163e8f4,164,MapPrototypeHas
code-creation,Builtin,2,178496,0x7ff76163e9b4,12,MapPrototypeClear
code-creation,Builtin,2,178503,0x7ff76163e9d4,284,MapPrototypeEntries
code-creation,Builtin,2,178509,0x7ff76163eaf4,144,MapPrototypeGetSize
code-creation,Builtin,2,178515,0x7ff76163eb94,492,MapPrototypeForEach
code-creation,Builtin,2,178522,0x7ff76163ed94,284,MapPrototypeKeys
code-creation,Builtin,2,178528,0x7ff76163eeb4,284,MapPrototypeValues
code-creation,Builtin,2,178534,0x7ff76163efd4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,178541,0x7ff76163f3f4,1168,MapIteratorToList
code-creation,Builtin,2,178547,0x7ff76163f894,12,NumberPrototypeToExponential
code-creation,Builtin,2,178554,0x7ff76163f8b4,12,NumberPrototypeToFixed
code-creation,Builtin,2,178560,0x7ff76163f8d4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,178567,0x7ff76163f8f4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,178573,0x7ff76163f914,328,SameValue
code-creation,Builtin,2,178579,0x7ff76163fa74,204,SameValueNumbersOnly
code-creation,Builtin,2,178586,0x7ff76163fb54,792,Add_Baseline
code-creation,Builtin,2,178592,0x7ff76163fe74,828,Subtract_Baseline
code-creation,Builtin,2,178598,0x7ff7616401b4,808,Multiply_Baseline
code-creation,Builtin,2,178604,0x7ff7616404f4,832,Divide_Baseline
code-creation,Builtin,2,178611,0x7ff761640854,764,Modulus_Baseline
code-creation,Builtin,2,178617,0x7ff761640b54,808,Exponentiate_Baseline
code-creation,Builtin,2,178624,0x7ff761640e94,708,BitwiseAnd_Baseline
code-creation,Builtin,2,178630,0x7ff761641174,700,BitwiseOr_Baseline
code-creation,Builtin,2,178636,0x7ff761641434,708,BitwiseXor_Baseline
code-creation,Builtin,2,178643,0x7ff761641714,720,ShiftLeft_Baseline
code-creation,Builtin,2,178649,0x7ff7616419f4,720,ShiftRight_Baseline
code-creation,Builtin,2,178655,0x7ff761641cd4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,178662,0x7ff761642034,720,Add_WithFeedback
code-creation,Builtin,2,178668,0x7ff761642314,780,Subtract_WithFeedback
code-creation,Builtin,2,178674,0x7ff761642634,776,Multiply_WithFeedback
code-creation,Builtin,2,178681,0x7ff761642954,804,Divide_WithFeedback
code-creation,Builtin,2,178687,0x7ff761642c94,724,Modulus_WithFeedback
code-creation,Builtin,2,178693,0x7ff761642f74,764,Exponentiate_WithFeedback
code-creation,Builtin,2,178700,0x7ff761643274,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,178707,0x7ff761643534,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,178713,0x7ff7616437f4,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,178719,0x7ff761643ab4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,178726,0x7ff761643d74,692,ShiftRight_WithFeedback
code-creation,Builtin,2,178732,0x7ff761644034,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,178739,0x7ff761644374,1696,Equal_Baseline
code-creation,Builtin,2,178745,0x7ff761644a34,908,StrictEqual_Baseline
code-creation,Builtin,2,178751,0x7ff761644dd4,1264,LessThan_Baseline
code-creation,Builtin,2,178758,0x7ff7616452d4,1264,GreaterThan_Baseline
code-creation,Builtin,2,178764,0x7ff7616457d4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,178771,0x7ff761645cd4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,178777,0x7ff7616461d4,1620,Equal_WithFeedback
code-creation,Builtin,2,178784,0x7ff761646834,940,StrictEqual_WithFeedback
code-creation,Builtin,2,178790,0x7ff761646bf4,1240,LessThan_WithFeedback
code-creation,Builtin,2,178821,0x7ff7616470d4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,178829,0x7ff7616475b4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,178836,0x7ff761647a94,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,178843,0x7ff761647f74,332,BitwiseNot_Baseline
code-creation,Builtin,2,178849,0x7ff7616480d4,460,Decrement_Baseline
code-creation,Builtin,2,178855,0x7ff7616482b4,464,Increment_Baseline
code-creation,Builtin,2,178862,0x7ff761648494,488,Negate_Baseline
code-creation,Builtin,2,178868,0x7ff761648694,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,178875,0x7ff7616487d4,440,Decrement_WithFeedback
code-creation,Builtin,2,178882,0x7ff761648994,444,Increment_WithFeedback
code-creation,Builtin,2,178889,0x7ff761648b54,472,Negate_WithFeedback
code-creation,Builtin,2,178895,0x7ff761648d34,252,ObjectAssign
code-creation,Builtin,2,178902,0x7ff761648e34,864,ObjectCreate
code-creation,Builtin,2,178908,0x7ff7616491b4,12,ObjectDefineGetter
code-creation,Builtin,2,178914,0x7ff7616491d4,12,ObjectDefineProperties
code-creation,Builtin,2,178921,0x7ff7616491f4,12,ObjectDefineProperty
code-creation,Builtin,2,178927,0x7ff761649214,12,ObjectDefineSetter
code-creation,Builtin,2,178933,0x7ff761649234,1516,ObjectEntries
code-creation,Builtin,2,178940,0x7ff761649834,12,ObjectFreeze
code-creation,Builtin,2,178946,0x7ff761649854,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,178952,0x7ff76164ae54,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,178959,0x7ff76164ae74,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,178966,0x7ff76164b0d4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,178972,0x7ff76164b0f4,164,ObjectHasOwn
code-creation,Builtin,2,178978,0x7ff76164b1b4,388,ObjectIs
code-creation,Builtin,2,178984,0x7ff76164b354,12,ObjectIsFrozen
code-creation,Builtin,2,178991,0x7ff76164b374,12,ObjectIsSealed
code-creation,Builtin,2,178997,0x7ff76164b394,536,ObjectKeys
code-creation,Builtin,2,179003,0x7ff76164b5b4,12,ObjectLookupGetter
code-creation,Builtin,2,179009,0x7ff76164b5d4,12,ObjectLookupSetter
code-creation,Builtin,2,179015,0x7ff76164b5f4,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,179022,0x7ff76164bef4,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,179029,0x7ff76164bfd4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,179036,0x7ff76164bff4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,179042,0x7ff76164c014,12,ObjectPrototypeSetProto
code-creation,Builtin,2,179048,0x7ff76164c034,12,ObjectSeal
code-creation,Builtin,2,179055,0x7ff76164c054,1108,ObjectToString
code-creation,Builtin,2,179061,0x7ff76164c4b4,1284,ObjectValues
code-creation,Builtin,2,179067,0x7ff76164c9d4,280,OrdinaryHasInstance
code-creation,Builtin,2,179073,0x7ff76164caf4,344,InstanceOf
code-creation,Builtin,2,179080,0x7ff76164cc54,632,InstanceOf_WithFeedback
code-creation,Builtin,2,179086,0x7ff76164ced4,648,InstanceOf_Baseline
code-creation,Builtin,2,179093,0x7ff76164d174,268,ForInEnumerate
code-creation,Builtin,2,179099,0x7ff76164d294,148,ForInPrepare
code-creation,Builtin,2,179105,0x7ff76164d334,2584,ForInFilter
code-creation,Builtin,2,179111,0x7ff76164dd54,52,ReflectApply
code-creation,Builtin,2,179117,0x7ff76164dd94,60,ReflectConstruct
code-creation,Builtin,2,179124,0x7ff76164ddd4,12,ReflectDefineProperty
code-creation,Builtin,2,179130,0x7ff76164ddf4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,179137,0x7ff76164de14,12,ReflectOwnKeys
code-creation,Builtin,2,179145,0x7ff76164de34,12,ReflectSet
code-creation,Builtin,2,179151,0x7ff76164de54,12,RegExpCapture1Getter
code-creation,Builtin,2,179157,0x7ff76164de74,12,RegExpCapture2Getter
code-creation,Builtin,2,179164,0x7ff76164de94,12,RegExpCapture3Getter
code-creation,Builtin,2,179170,0x7ff76164deb4,12,RegExpCapture4Getter
code-creation,Builtin,2,179176,0x7ff76164ded4,12,RegExpCapture5Getter
code-creation,Builtin,2,179183,0x7ff76164def4,12,RegExpCapture6Getter
code-creation,Builtin,2,179189,0x7ff76164df14,12,RegExpCapture7Getter
code-creation,Builtin,2,179195,0x7ff76164df34,12,RegExpCapture8Getter
code-creation,Builtin,2,179203,0x7ff76164df54,12,RegExpCapture9Getter
code-creation,Builtin,2,179210,0x7ff76164df74,2212,RegExpConstructor
code-creation,Builtin,2,179216,0x7ff76164e834,12,RegExpInputGetter
code-creation,Builtin,2,179222,0x7ff76164e854,12,RegExpInputSetter
code-creation,Builtin,2,179229,0x7ff76164e874,12,RegExpLastMatchGetter
code-creation,Builtin,2,179235,0x7ff76164e894,12,RegExpLastParenGetter
code-creation,Builtin,2,179241,0x7ff76164e8b4,12,RegExpLeftContextGetter
code-creation,Builtin,2,179248,0x7ff76164e8d4,908,RegExpPrototypeCompile
code-creation,Builtin,2,179254,0x7ff76164ec74,12,RegExpPrototypeToString
code-creation,Builtin,2,179261,0x7ff76164ec94,12,RegExpRightContextGetter
code-creation,Builtin,2,179267,0x7ff76164ecb4,252,RegExpExecAtom
code-creation,Builtin,2,179274,0x7ff76164edb4,1040,RegExpExecInternal
code-creation,Builtin,2,179280,0x7ff76164f1d4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,179287,0x7ff76164f1f4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,179293,0x7ff76164f214,2684,SetConstructor
code-creation,Builtin,2,179299,0x7ff76164fc94,1284,SetPrototypeHas
code-creation,Builtin,2,179306,0x7ff7616501b4,1736,SetPrototypeAdd
code-creation,Builtin,2,179312,0x7ff761650894,1476,SetPrototypeDelete
code-creation,Builtin,2,179319,0x7ff761650e74,12,SetPrototypeClear
code-creation,Builtin,2,179325,0x7ff761650e94,284,SetPrototypeEntries
code-creation,Builtin,2,179331,0x7ff761650fb4,144,SetPrototypeGetSize
code-creation,Builtin,2,179338,0x7ff761651054,444,SetPrototypeForEach
code-creation,Builtin,2,179344,0x7ff761651214,284,SetPrototypeValues
code-creation,Builtin,2,179350,0x7ff761651334,988,SetIteratorPrototypeNext
code-creation,Builtin,2,179357,0x7ff761651714,1112,SetOrSetIteratorToList
code-creation,Builtin,2,179363,0x7ff761651b74,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,179370,0x7ff761651b94,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,179377,0x7ff761651bb4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,179384,0x7ff761651bd4,1280,AtomicsLoad
code-creation,Builtin,2,179390,0x7ff7616520f4,1008,AtomicsStore
code-creation,Builtin,2,179396,0x7ff7616524f4,1704,AtomicsExchange
code-creation,Builtin,2,179402,0x7ff761652bb4,2092,AtomicsCompareExchange
code-creation,Builtin,2,179409,0x7ff7616533f4,1804,AtomicsAdd
code-creation,Builtin,2,179415,0x7ff761653b14,1804,AtomicsSub
code-creation,Builtin,2,179421,0x7ff761654234,1804,AtomicsAnd
code-creation,Builtin,2,179428,0x7ff761654954,1804,AtomicsOr
code-creation,Builtin,2,179434,0x7ff761655074,1804,AtomicsXor
code-creation,Builtin,2,179440,0x7ff761655794,12,AtomicsNotify
code-creation,Builtin,2,179446,0x7ff7616557b4,12,AtomicsIsLockFree
code-creation,Builtin,2,179452,0x7ff7616557d4,12,AtomicsWait
code-creation,Builtin,2,179458,0x7ff7616557f4,12,AtomicsWaitAsync
code-creation,Builtin,2,179465,0x7ff761655814,12,StringFromCodePoint
code-creation,Builtin,2,179471,0x7ff761655834,1428,StringFromCharCode
code-creation,Builtin,2,179477,0x7ff761655dd4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,179484,0x7ff761655df4,4360,StringPrototypeMatchAll
code-creation,Builtin,2,179490,0x7ff761656f14,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,179497,0x7ff761656f34,1228,StringPrototypeReplace
code-creation,Builtin,2,179503,0x7ff761657414,2900,StringPrototypeSplit
code-creation,Builtin,2,179510,0x7ff761657f74,12,StringRaw
code-creation,Builtin,2,179516,0x7ff761657f94,12,SymbolConstructor
code-creation,Builtin,2,179522,0x7ff761657fb4,12,SymbolFor
code-creation,Builtin,2,179528,0x7ff761657fd4,12,SymbolKeyFor
code-creation,Builtin,2,179534,0x7ff761657ff4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,179541,0x7ff761658054,256,TypedArrayConstructor
code-creation,Builtin,2,179547,0x7ff761658174,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,179554,0x7ff761658194,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,179561,0x7ff761658514,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,179567,0x7ff761658694,584,TypedArrayPrototypeLength
code-creation,Builtin,2,179574,0x7ff7616588f4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,179581,0x7ff761658914,12,TypedArrayPrototypeFill
code-creation,Builtin,2,179588,0x7ff761658934,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,179595,0x7ff761658954,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,179601,0x7ff761658974,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,179608,0x7ff761658994,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,179615,0x7ff7616589b4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,179621,0x7ff761658af4,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,179628,0x7ff76165b4b4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,179634,0x7ff76165b7d4,148,WasmCompileLazy
code-creation,Builtin,2,179641,0x7ff76165b874,168,WasmDebugBreak
code-creation,Builtin,2,179647,0x7ff76165b934,16,WasmOnStackReplace
code-creation,Builtin,2,179653,0x7ff76165b954,140,WasmFloat32ToNumber
code-creation,Builtin,2,179660,0x7ff76165b9f4,152,WasmFloat64ToNumber
code-creation,Builtin,2,179666,0x7ff76165ba94,4,WasmI32AtomicWait32
code-creation,Builtin,2,179673,0x7ff76165bab4,4,WasmI64AtomicWait32
code-creation,Builtin,2,179679,0x7ff76165bad4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,179685,0x7ff76165baf4,4320,WeakMapConstructor
code-creation,Builtin,2,179692,0x7ff76165cbf4,196,WeakMapLookupHashIndex
code-creation,Builtin,2,179698,0x7ff76165ccd4,220,WeakMapGet
code-creation,Builtin,2,179704,0x7ff76165cdb4,176,WeakMapPrototypeHas
code-creation,Builtin,2,179711,0x7ff76165ce74,204,WeakMapPrototypeSet
code-creation,Builtin,2,179717,0x7ff76165cf54,144,WeakMapPrototypeDelete
code-creation,Builtin,2,179723,0x7ff76165cff4,2876,WeakSetConstructor
code-creation,Builtin,2,179730,0x7ff76165db34,176,WeakSetPrototypeHas
code-creation,Builtin,2,179736,0x7ff76165dbf4,204,WeakSetPrototypeAdd
code-creation,Builtin,2,179742,0x7ff76165dcd4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,179749,0x7ff76165dd74,372,WeakCollectionDelete
code-creation,Builtin,2,179755,0x7ff76165def4,764,WeakCollectionSet
code-creation,Builtin,2,179762,0x7ff76165e1f4,296,AsyncGeneratorResolve
code-creation,Builtin,2,179768,0x7ff76165e334,100,AsyncGeneratorReject
code-creation,Builtin,2,179774,0x7ff76165e3b4,2760,AsyncGeneratorYield
code-creation,Builtin,2,179781,0x7ff76165ee94,2872,AsyncGeneratorReturn
code-creation,Builtin,2,179787,0x7ff76165f9d4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,179794,0x7ff76165fb14,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,179801,0x7ff76165fb34,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,179807,0x7ff76165ff34,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,179814,0x7ff761660354,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,179821,0x7ff761660774,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,179827,0x7ff761661234,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,179834,0x7ff761661cf4,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,179840,0x7ff761661d74,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,179847,0x7ff761661e14,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,179854,0x7ff761661e94,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,179861,0x7ff761661f14,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,179868,0x7ff761661f94,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,179875,0x7ff761662034,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,179934,0x7ff761662674,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,179947,0x7ff761662d34,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,179956,0x7ff7616633f4,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,179962,0x7ff761663474,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,179970,0x7ff761663574,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,179978,0x7ff761663674,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,179986,0x7ff761663754,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,179995,0x7ff7616638f4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,180004,0x7ff761663a94,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,180012,0x7ff761663b94,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,180019,0x7ff761663c94,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,180027,0x7ff761663d94,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,180034,0x7ff761663f34,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,180042,0x7ff7616640d4,4,DirectCEntry
code-creation,Builtin,2,180050,0x7ff7616640f4,1096,StringAdd_CheckNone
code-creation,Builtin,2,180056,0x7ff761664554,2484,SubString
code-creation,Builtin,2,180062,0x7ff761664f14,16,StackCheck
code-creation,Builtin,2,180069,0x7ff761664f34,84,DoubleToI
code-creation,Builtin,2,180075,0x7ff761664f94,2236,GetProperty
code-creation,Builtin,2,180081,0x7ff761665854,2308,GetPropertyWithReceiver
code-creation,Builtin,2,180088,0x7ff761666174,16004,SetProperty
code-creation,Builtin,2,180094,0x7ff76166a014,13480,SetPropertyInLiteral
code-creation,Builtin,2,180101,0x7ff76166d4d4,8,MemCopyUint8Uint8
code-creation,Builtin,2,180107,0x7ff76166d4f4,8,MemMove
code-creation,Builtin,2,180113,0x7ff76166d514,12,IsTraceCategoryEnabled
code-creation,Builtin,2,180120,0x7ff76166d534,12,Trace
code-creation,Builtin,2,180126,0x7ff76166d554,12,FinalizationRegistryUnregister
code-creation,Builtin,2,180133,0x7ff76166d574,416,AsyncModuleEvaluate
code-creation,Builtin,2,180139,0x7ff76166d734,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,180146,0x7ff76166d754,12,CallAsyncModuleRejected
code-creation,Builtin,2,180153,0x7ff76166d774,260,AggregateErrorConstructor
code-creation,Builtin,2,180159,0x7ff76166d894,856,ArrayPrototypeAt
code-creation,Builtin,2,180165,0x7ff76166dbf4,656,ArrayPrototypeConcat
code-creation,Builtin,2,180172,0x7ff76166de94,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,180179,0x7ff76166f574,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,180186,0x7ff76166f654,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,180192,0x7ff76166f8d4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,180199,0x7ff7616705d4,1464,ArrayEvery
code-creation,Builtin,2,180205,0x7ff761670b94,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,180212,0x7ff761670cb4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,180219,0x7ff761671094,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,180226,0x7ff761671e94,4260,ArrayFilter
code-creation,Builtin,2,180232,0x7ff761672f54,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,180239,0x7ff761673034,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,180246,0x7ff761673074,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,180253,0x7ff7616731b4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,180260,0x7ff7616733d4,1460,ArrayPrototypeFind
code-creation,Builtin,2,180266,0x7ff761673994,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,180273,0x7ff761673a74,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,180280,0x7ff761673ab4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,180288,0x7ff761673bf4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,180295,0x7ff761673e14,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,180301,0x7ff7616743d4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,180308,0x7ff7616745b4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,180315,0x7ff761674c74,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,180321,0x7ff761674e54,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,180328,0x7ff761675514,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,180335,0x7ff7616755f4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,180345,0x7ff7616756d4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,180353,0x7ff761676334,1328,ArrayForEach
code-creation,Builtin,2,180359,0x7ff761676874,3572,ArrayFrom
code-creation,Builtin,2,180365,0x7ff761677674,148,ArrayIsArray
code-creation,Builtin,2,180372,0x7ff761677714,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,180379,0x7ff7616778b4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,180386,0x7ff7616778f4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,180393,0x7ff761677994,312,ConvertToLocaleString
code-creation,Builtin,2,180399,0x7ff761677ad4,752,JoinStackPush
code-creation,Builtin,2,180405,0x7ff761677dd4,272,JoinStackPop
code-creation,Builtin,2,180412,0x7ff761677ef4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,180418,0x7ff7616798f4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,180425,0x7ff76167adf4,236,ArrayPrototypeToString
code-creation,Builtin,2,180431,0x7ff76167aef4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,180438,0x7ff76167c634,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,180445,0x7ff76167d854,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,180452,0x7ff76167e754,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,180459,0x7ff76167e874,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,180465,0x7ff76167e974,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,180472,0x7ff76167eb94,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,180479,0x7ff76167f814,3912,ArrayMap
code-creation,Builtin,2,180485,0x7ff761680774,1000,ArrayOf
code-creation,Builtin,2,180491,0x7ff761680b74,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,180498,0x7ff761680d34,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,180506,0x7ff761680e14,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,180513,0x7ff761680ef4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,180520,0x7ff761681b94,2000,ArrayReduceRight
code-creation,Builtin,2,180526,0x7ff761682374,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,180533,0x7ff761682434,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,180540,0x7ff761682514,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,180547,0x7ff7616825f4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,180553,0x7ff7616832b4,1604,ArrayReduce
code-creation,Builtin,2,180560,0x7ff761683914,3216,ArrayPrototypeReverse
code-creation,Builtin,2,180566,0x7ff7616845b4,3592,ArrayPrototypeShift
code-creation,Builtin,2,180573,0x7ff7616853d4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,180579,0x7ff761686854,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,180586,0x7ff761686934,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,180593,0x7ff761686b94,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,180600,0x7ff761687894,1448,ArraySome
code-creation,Builtin,2,180606,0x7ff761687e54,14216,ArrayPrototypeSplice
code-creation,Builtin,2,180613,0x7ff76168b5f4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,180619,0x7ff76168c2d4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,180626,0x7ff76168c434,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,180633,0x7ff76168c594,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,180640,0x7ff76168c674,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,180647,0x7ff76168c7d4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,180654,0x7ff76168c8b4,96,ArrayBufferIsView
code-creation,Builtin,2,180660,0x7ff76168c934,396,ToInteger
code-creation,Builtin,2,180666,0x7ff76168cad4,3084,FastCreateDataProperty
code-creation,Builtin,2,180673,0x7ff76168d6f4,676,CheckNumberInRange
code-creation,Builtin,2,180679,0x7ff76168d9b4,584,CheckSameObject
code-creation,Builtin,2,180686,0x7ff76168dc14,904,BooleanConstructor
code-creation,Builtin,2,180692,0x7ff76168dfb4,164,BooleanPrototypeToString
code-creation,Builtin,2,180699,0x7ff76168e074,156,BooleanPrototypeValueOf
code-creation,Builtin,2,180706,0x7ff76168e114,1184,BigIntAddNoThrow
code-creation,Builtin,2,180713,0x7ff76168e5d4,1280,BigIntAdd
code-creation,Builtin,2,180719,0x7ff76168eaf4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,180726,0x7ff76168efb4,1280,BigIntSubtract
code-creation,Builtin,2,180732,0x7ff76168f4d4,284,BigIntUnaryMinus
code-creation,Builtin,2,180738,0x7ff76168f5f4,1360,ToString
code-creation,Builtin,2,180744,0x7ff76168fb54,156,StringPrototypeToString
code-creation,Builtin,2,180751,0x7ff76168fbf4,156,StringPrototypeValueOf
code-creation,Builtin,2,180757,0x7ff76168fc94,2480,StringToList
code-creation,Builtin,2,180763,0x7ff761690654,1012,StringPrototypeCharAt
code-creation,Builtin,2,180770,0x7ff761690a54,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,180776,0x7ff761690d14,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,180783,0x7ff761691234,400,StringPrototypeConcat
code-creation,Builtin,2,180790,0x7ff7616913d4,992,StringConstructor
code-creation,Builtin,2,180796,0x7ff7616917d4,1436,StringAddConvertLeft
code-creation,Builtin,2,180802,0x7ff761691d74,1464,StringAddConvertRight
code-creation,Builtin,2,180809,0x7ff761692334,816,StringCharAt
code-creation,Builtin,2,180815,0x7ff761692674,16,FastNewClosureBaseline
code-creation,Builtin,2,180822,0x7ff761692694,196,FastNewFunctionContextEval
code-creation,Builtin,2,180828,0x7ff761692774,196,FastNewFunctionContextFunction
code-creation,Builtin,2,180835,0x7ff761692854,248,CreateRegExpLiteral
code-creation,Builtin,2,180842,0x7ff761692954,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,180848,0x7ff761692d94,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,180855,0x7ff761692f94,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,180862,0x7ff761693674,384,ObjectConstructor
code-creation,Builtin,2,180868,0x7ff761693814,176,CreateEmptyLiteralObject
code-creation,Builtin,2,180875,0x7ff7616938d4,536,NumberConstructor
code-creation,Builtin,2,180883,0x7ff761693af4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,180890,0x7ff761693b54,64,StringToNumber
code-creation,Builtin,2,180896,0x7ff761693bb4,184,NonNumberToNumber
code-creation,Builtin,2,180904,0x7ff761693c74,240,NonNumberToNumeric
code-creation,Builtin,2,180911,0x7ff761693d74,36,ToNumeric
code-creation,Builtin,2,180917,0x7ff761693db4,1184,NumberToString
code-creation,Builtin,2,180924,0x7ff761694274,92,ToBoolean
code-creation,Builtin,2,180930,0x7ff7616942d4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,180936,0x7ff761694354,728,ToLength
code-creation,Builtin,2,180942,0x7ff761694634,1312,ToName
code-creation,Builtin,2,180948,0x7ff761694b74,756,ToObject
code-creation,Builtin,2,180955,0x7ff761694e74,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,180961,0x7ff761694f54,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,180968,0x7ff761695034,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,180975,0x7ff761695114,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,180981,0x7ff761695254,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,180988,0x7ff761695394,216,FastConsoleAssert
code-creation,Builtin,2,180994,0x7ff761695474,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,181001,0x7ff761695534,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,181008,0x7ff761695694,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,181014,0x7ff7616957f4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,181021,0x7ff761695a34,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,181027,0x7ff761695c74,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,181034,0x7ff761695f14,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,181041,0x7ff7616961b4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,181047,0x7ff7616964f4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,181054,0x7ff7616967b4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,181061,0x7ff761696b14,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,181067,0x7ff761696eb4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,181075,0x7ff761697294,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,181082,0x7ff761697694,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,181089,0x7ff761697a54,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,181096,0x7ff761697e14,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,181102,0x7ff761698234,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,181109,0x7ff761698654,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,181116,0x7ff761698a94,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,181122,0x7ff761698ed4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,181129,0x7ff7616992f4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,181136,0x7ff761699754,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,181142,0x7ff761699b14,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,181149,0x7ff761699ed4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,181156,0x7ff76169a214,1152,FinalizationRegistryRegister
code-creation,Builtin,2,181163,0x7ff76169a6b4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,181170,0x7ff76169a954,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,181176,0x7ff76169aab4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,181183,0x7ff76169ae54,88,IncBlockCounter
code-creation,Builtin,2,181189,0x7ff76169aeb4,228,GetTemplateObject
code-creation,Builtin,2,181195,0x7ff76169afb4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,181202,0x7ff76169afd4,92,ForInNext
code-creation,Builtin,2,181208,0x7ff76169b034,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,181215,0x7ff76169b0d4,116,GetIteratorWithFeedback
code-creation,Builtin,2,181221,0x7ff76169b154,100,GetIteratorBaseline
code-creation,Builtin,2,181228,0x7ff76169b1d4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,181235,0x7ff76169b2f4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,181241,0x7ff76169b734,288,MathAbs
code-creation,Builtin,2,181247,0x7ff76169b874,428,MathCeil
code-creation,Builtin,2,181253,0x7ff76169ba34,432,MathFloor
code-creation,Builtin,2,181259,0x7ff76169bbf4,488,MathRound
code-creation,Builtin,2,181266,0x7ff76169bdf4,428,MathTrunc
code-creation,Builtin,2,181272,0x7ff76169bfb4,368,MathPow
code-creation,Builtin,2,181278,0x7ff76169c134,396,MathMax
code-creation,Builtin,2,181284,0x7ff76169c2d4,404,MathMin
code-creation,Builtin,2,181290,0x7ff76169c474,320,MathAcos
code-creation,Builtin,2,181296,0x7ff76169c5d4,320,MathAcosh
code-creation,Builtin,2,181302,0x7ff76169c734,320,MathAsin
code-creation,Builtin,2,181308,0x7ff76169c894,320,MathAsinh
code-creation,Builtin,2,181314,0x7ff76169c9f4,320,MathAtan
code-creation,Builtin,2,181320,0x7ff76169cb54,416,MathAtan2
code-creation,Builtin,2,181326,0x7ff76169cd14,320,MathAtanh
code-creation,Builtin,2,181332,0x7ff76169ce74,320,MathCbrt
code-creation,Builtin,2,181338,0x7ff76169cfd4,168,MathClz32
code-creation,Builtin,2,181345,0x7ff76169d094,320,MathCos
code-creation,Builtin,2,181351,0x7ff76169d1f4,320,MathCosh
code-creation,Builtin,2,181357,0x7ff76169d354,320,MathExp
code-creation,Builtin,2,181363,0x7ff76169d4b4,320,MathExpm1
code-creation,Builtin,2,181369,0x7ff76169d614,272,MathFround
code-creation,Builtin,2,181375,0x7ff76169d734,304,MathImul
code-creation,Builtin,2,181381,0x7ff76169d874,320,MathLog
code-creation,Builtin,2,181387,0x7ff76169d9d4,320,MathLog1p
code-creation,Builtin,2,181393,0x7ff76169db34,320,MathLog10
code-creation,Builtin,2,181400,0x7ff76169dc94,320,MathLog2
code-creation,Builtin,2,181406,0x7ff76169ddf4,320,MathSin
code-creation,Builtin,2,181411,0x7ff76169df54,180,MathSign
code-creation,Builtin,2,181417,0x7ff76169e014,320,MathSinh
code-creation,Builtin,2,181424,0x7ff76169e174,268,MathSqrt
code-creation,Builtin,2,181430,0x7ff76169e294,320,MathTan
code-creation,Builtin,2,181436,0x7ff76169e3f4,320,MathTanh
code-creation,Builtin,2,181442,0x7ff76169e554,1060,MathHypot
code-creation,Builtin,2,181448,0x7ff76169e994,332,MathRandom
code-creation,Builtin,2,181454,0x7ff76169eaf4,2956,NumberPrototypeToString
code-creation,Builtin,2,181461,0x7ff76169f694,136,NumberIsFinite
code-creation,Builtin,2,181468,0x7ff76169f734,340,NumberIsInteger
code-creation,Builtin,2,181474,0x7ff76169f894,116,NumberIsNaN
code-creation,Builtin,2,181481,0x7ff76169f914,372,NumberIsSafeInteger
code-creation,Builtin,2,181487,0x7ff76169fa94,156,NumberPrototypeValueOf
code-creation,Builtin,2,181494,0x7ff76169fb34,196,NumberParseFloat
code-creation,Builtin,2,181500,0x7ff76169fc14,248,ParseInt
code-creation,Builtin,2,181506,0x7ff76169fd14,84,NumberParseInt
code-creation,Builtin,2,181512,0x7ff76169fd74,860,Add
code-creation,Builtin,2,181518,0x7ff7616a00d4,424,Subtract
code-creation,Builtin,2,181524,0x7ff7616a0294,608,Multiply
code-creation,Builtin,2,181531,0x7ff7616a0514,532,Divide
code-creation,Builtin,2,181537,0x7ff7616a0734,592,Modulus
code-creation,Builtin,2,181543,0x7ff7616a0994,524,Exponentiate
code-creation,Builtin,2,181549,0x7ff7616a0bb4,344,Negate
code-creation,Builtin,2,181555,0x7ff7616a0d14,112,BitwiseNot
code-creation,Builtin,2,181561,0x7ff7616a0d94,112,Decrement
code-creation,Builtin,2,181568,0x7ff7616a0e14,112,Increment
code-creation,Builtin,2,181574,0x7ff7616a0e94,392,ShiftLeft
code-creation,Builtin,2,181580,0x7ff7616a1034,392,ShiftRight
code-creation,Builtin,2,181586,0x7ff7616a11d4,508,ShiftRightLogical
code-creation,Builtin,2,181593,0x7ff7616a13d4,388,BitwiseAnd
code-creation,Builtin,2,181599,0x7ff7616a1574,388,BitwiseOr
code-creation,Builtin,2,181605,0x7ff7616a1714,388,BitwiseXor
code-creation,Builtin,2,181611,0x7ff7616a18b4,796,LessThan
code-creation,Builtin,2,181617,0x7ff7616a1bd4,796,LessThanOrEqual
code-creation,Builtin,2,181623,0x7ff7616a1ef4,796,GreaterThan
code-creation,Builtin,2,181629,0x7ff7616a2214,796,GreaterThanOrEqual
code-creation,Builtin,2,181636,0x7ff7616a2534,860,Equal
code-creation,Builtin,2,181642,0x7ff7616a2894,348,StrictEqual
code-creation,Builtin,2,181648,0x7ff7616a29f4,3132,ObjectFromEntries
code-creation,Builtin,2,181654,0x7ff7616a3634,756,CreateObjectWithoutProperties
code-creation,Builtin,2,181661,0x7ff7616a3934,144,ObjectIsExtensible
code-creation,Builtin,2,181667,0x7ff7616a39d4,148,ObjectPreventExtensions
code-creation,Builtin,2,181674,0x7ff7616a3a74,144,ObjectGetPrototypeOf
code-creation,Builtin,2,181680,0x7ff7616a3b14,300,ObjectSetPrototypeOf
code-creation,Builtin,2,181687,0x7ff7616a3c54,80,ObjectPrototypeToString
code-creation,Builtin,2,181693,0x7ff7616a3cb4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,181700,0x7ff7616a3d34,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,181707,0x7ff7616a3df4,868,FulfillPromise
code-creation,Builtin,2,181713,0x7ff7616a4174,988,RejectPromise
code-creation,Builtin,2,181720,0x7ff7616a4554,2416,NewPromiseCapability
code-creation,Builtin,2,181727,0x7ff7616a4ed4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,181734,0x7ff7616a4f94,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,181740,0x7ff7616a5034,1416,PerformPromiseThen
code-creation,Builtin,2,181747,0x7ff7616a55d4,648,PromiseReject
code-creation,Builtin,2,181753,0x7ff7616a5874,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,181760,0x7ff7616a5994,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,181767,0x7ff7616a5a14,4560,PromiseAll
code-creation,Builtin,2,181773,0x7ff7616a6bf4,4880,PromiseAllSettled
code-creation,Builtin,2,181779,0x7ff7616a7f14,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,181786,0x7ff7616a8374,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,181793,0x7ff7616a88f4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,181800,0x7ff7616a8e74,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,181807,0x7ff7616a9314,2368,PromiseAny
code-creation,Builtin,2,181813,0x7ff7616a9c74,2908,PromiseConstructor
code-creation,Builtin,2,181819,0x7ff7616aa7d4,296,PromisePrototypeCatch
code-creation,Builtin,2,181826,0x7ff7616aa914,88,PromiseValueThunkFinally
code-creation,Builtin,2,181832,0x7ff7616aa974,84,PromiseThrowerFinally
code-creation,Builtin,2,181838,0x7ff7616aa9d4,904,PromiseCatchFinally
code-creation,Builtin,2,181845,0x7ff7616aad74,904,PromiseThenFinally
code-creation,Builtin,2,181852,0x7ff7616ab114,1700,PromisePrototypeFinally
code-creation,Builtin,2,181859,0x7ff7616ab7d4,1336,PromiseRace
code-creation,Builtin,2,181865,0x7ff7616abd14,268,PromiseFulfillReactionJob
code-creation,Builtin,2,181873,0x7ff7616abe34,364,PromiseRejectReactionJob
code-creation,Builtin,2,181907,0x7ff7616abfb4,156,PromiseResolveTrampoline
code-creation,Builtin,2,181918,0x7ff7616ac054,656,PromiseResolve
code-creation,Builtin,2,181925,0x7ff7616ac2f4,712,ResolvePromise
code-creation,Builtin,2,181932,0x7ff7616ac5d4,2224,PromisePrototypeThen
code-creation,Builtin,2,181939,0x7ff7616ace94,1144,PromiseResolveThenableJob
code-creation,Builtin,2,181946,0x7ff7616ad314,448,ProxyConstructor
code-creation,Builtin,2,181952,0x7ff7616ad4f4,1760,ProxyDeleteProperty
code-creation,Builtin,2,181959,0x7ff7616adbf4,2112,ProxyGetProperty
code-creation,Builtin,2,181965,0x7ff7616ae454,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,181972,0x7ff7616ae894,1668,ProxyHasProperty
code-creation,Builtin,2,181979,0x7ff7616aef34,760,ProxyIsExtensible
code-creation,Builtin,2,181985,0x7ff7616af234,800,ProxyPreventExtensions
code-creation,Builtin,2,181992,0x7ff7616af574,1148,ProxyRevocable
code-creation,Builtin,2,181999,0x7ff7616af9f4,120,ProxyRevoke
code-creation,Builtin,2,182005,0x7ff7616afa74,2216,ProxySetProperty
code-creation,Builtin,2,182012,0x7ff7616b0334,1292,ProxySetPrototypeOf
code-creation,Builtin,2,182018,0x7ff7616b0854,208,ReflectIsExtensible
code-creation,Builtin,2,182025,0x7ff7616b0934,212,ReflectPreventExtensions
code-creation,Builtin,2,182032,0x7ff7616b0a14,188,ReflectGetPrototypeOf
code-creation,Builtin,2,182038,0x7ff7616b0ad4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,182045,0x7ff7616b0c14,284,ReflectGet
code-creation,Builtin,2,182051,0x7ff7616b0d34,160,ReflectDeleteProperty
code-creation,Builtin,2,182058,0x7ff7616b0df4,148,ReflectHas
code-creation,Builtin,2,182064,0x7ff7616b0e94,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,182071,0x7ff7616b22b4,5104,RegExpPrototypeExec
code-creation,Builtin,2,182077,0x7ff7616b36b4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,182084,0x7ff7616b3ff4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,182091,0x7ff7616b64d4,8840,RegExpMatchFast
code-creation,Builtin,2,182097,0x7ff7616b8774,3600,RegExpPrototypeMatch
code-creation,Builtin,2,182104,0x7ff7616b9594,6328,RegExpReplace
code-creation,Builtin,2,182110,0x7ff7616bae54,524,RegExpPrototypeReplace
code-creation,Builtin,2,182117,0x7ff7616bb074,1424,RegExpSearchFast
code-creation,Builtin,2,182123,0x7ff7616bb614,1640,RegExpPrototypeSearch
code-creation,Builtin,2,182130,0x7ff7616bbc94,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,182136,0x7ff7616bbd74,5872,RegExpSplit
code-creation,Builtin,2,182142,0x7ff7616bd474,476,RegExpPrototypeSplit
code-creation,Builtin,2,182149,0x7ff7616bd654,2252,RegExpPrototypeTest
code-creation,Builtin,2,182155,0x7ff7616bdf34,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,182162,0x7ff7616be494,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,182169,0x7ff7616be594,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,182175,0x7ff7616be694,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,182182,0x7ff7616be794,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,182189,0x7ff7616be894,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,182196,0x7ff7616be994,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,182203,0x7ff7616bea94,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,182209,0x7ff7616bebb4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,182216,0x7ff7616becd4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,182223,0x7ff7616bf5b4,1500,StringPrototypeAt
code-creation,Builtin,2,182229,0x7ff7616bfb94,3008,StringPrototypeEndsWith
code-creation,Builtin,2,182236,0x7ff7616c0774,480,CreateHTML
code-creation,Builtin,2,182242,0x7ff7616c0974,164,StringPrototypeAnchor
code-creation,Builtin,2,182249,0x7ff7616c0a34,128,StringPrototypeBig
code-creation,Builtin,2,182255,0x7ff7616c0ad4,128,StringPrototypeBlink
code-creation,Builtin,2,182264,0x7ff7616c0b74,128,StringPrototypeBold
code-creation,Builtin,2,182272,0x7ff7616c0c14,168,StringPrototypeFontcolor
code-creation,Builtin,2,182279,0x7ff7616c0cd4,168,StringPrototypeFontsize
code-creation,Builtin,2,182285,0x7ff7616c0d94,128,StringPrototypeFixed
code-creation,Builtin,2,182292,0x7ff7616c0e34,128,StringPrototypeItalics
code-creation,Builtin,2,182299,0x7ff7616c0ed4,168,StringPrototypeLink
code-creation,Builtin,2,182305,0x7ff7616c0f94,128,StringPrototypeSmall
code-creation,Builtin,2,182311,0x7ff7616c1034,128,StringPrototypeStrike
code-creation,Builtin,2,182318,0x7ff7616c10d4,128,StringPrototypeSub
code-creation,Builtin,2,182324,0x7ff7616c1174,128,StringPrototypeSup
code-creation,Builtin,2,182331,0x7ff7616c1214,1028,StringPrototypeIncludes
code-creation,Builtin,2,182337,0x7ff7616c1634,628,StringPrototypeIndexOf
code-creation,Builtin,2,182344,0x7ff7616c18b4,344,StringPrototypeIterator
code-creation,Builtin,2,182350,0x7ff7616c1a14,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,182357,0x7ff7616c2214,1304,StringPrototypeMatch
code-creation,Builtin,2,182363,0x7ff7616c2734,1304,StringPrototypeSearch
code-creation,Builtin,2,182370,0x7ff7616c2c54,824,StringPrototypePadStart
code-creation,Builtin,2,182376,0x7ff7616c2f94,824,StringPrototypePadEnd
code-creation,Builtin,2,182383,0x7ff7616c32d4,120,StringRepeat
code-creation,Builtin,2,182389,0x7ff7616c3354,400,StringPrototypeRepeat
code-creation,Builtin,2,182396,0x7ff7616c34f4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,182402,0x7ff7616c60b4,3388,StringPrototypeSlice
code-creation,Builtin,2,182409,0x7ff7616c6df4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,182415,0x7ff7616c79d4,3328,StringPrototypeSubstr
code-creation,Builtin,2,182422,0x7ff7616c86f4,3260,StringPrototypeSubstring
code-creation,Builtin,2,182429,0x7ff7616c93b4,6916,StringPrototypeTrim
code-creation,Builtin,2,182435,0x7ff7616caed4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,182442,0x7ff7616cc794,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,182448,0x7ff7616cde74,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,182455,0x7ff7616cdf34,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,182462,0x7ff7616cdfd4,172,SymbolPrototypeToString
code-creation,Builtin,2,182468,0x7ff7616ce094,156,SymbolPrototypeValueOf
code-creation,Builtin,2,182475,0x7ff7616ce134,832,TypedArrayPrototypeAt
code-creation,Builtin,2,182481,0x7ff7616ce494,10064,CreateTypedArray
code-creation,Builtin,2,182488,0x7ff7616d0bf4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,182494,0x7ff7616d0ff4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,182501,0x7ff7616d1174,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,182508,0x7ff7616d1f34,996,TypedArrayPrototypeFind
code-creation,Builtin,2,182514,0x7ff7616d2334,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,182521,0x7ff7616d2734,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,182528,0x7ff7616d28f4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,182535,0x7ff7616d2db4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,182542,0x7ff7616d2f74,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,182549,0x7ff7616d3454,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,182556,0x7ff7616d37d4,2352,TypedArrayFrom
code-creation,Builtin,2,182562,0x7ff7616d4114,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,182568,0x7ff7616d4294,1028,TypedArrayOf
code-creation,Builtin,2,182575,0x7ff7616d46b4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,182581,0x7ff7616d4a74,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,182588,0x7ff7616d4e34,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,182594,0x7ff7616d5814,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,182602,0x7ff7616d6414,992,TypedArrayPrototypeSome
code-creation,Builtin,2,182609,0x7ff7616d6814,1060,TypedArrayMergeSort
code-creation,Builtin,2,182616,0x7ff7616d6c54,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,182622,0x7ff7616d72b4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,182630,0x7ff7616d7d74,372,TypedArrayPrototypeValues
code-creation,Builtin,2,182637,0x7ff7616d7ef4,952,WeakRefConstructor
code-creation,Builtin,2,182644,0x7ff7616d82b4,184,WeakRefDeref
code-creation,Builtin,2,182650,0x7ff7616d8374,680,NewSloppyArgumentsElements
code-creation,Builtin,2,182657,0x7ff7616d8634,296,NewStrictArgumentsElements
code-creation,Builtin,2,182663,0x7ff7616d8774,320,NewRestArgumentsElements
code-creation,Builtin,2,182672,0x7ff7616d88d4,1388,FastNewSloppyArguments
code-creation,Builtin,2,182679,0x7ff7616d8e54,524,FastNewStrictArguments
code-creation,Builtin,2,182685,0x7ff7616d9074,556,FastNewRestArguments
code-creation,Builtin,2,182692,0x7ff7616d92b4,676,StringSlowFlatten
code-creation,Builtin,2,182698,0x7ff7616d9574,2068,StringIndexOf
code-creation,Builtin,2,182704,0x7ff7616d9d94,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,182711,0x7ff7616d9db4,20,TestHelperPlus1
code-creation,Builtin,2,182717,0x7ff7616d9dd4,20,TestHelperPlus2
code-creation,Builtin,2,182723,0x7ff7616d9df4,96,NewSmiBox
code-creation,Builtin,2,182730,0x7ff7616d9e74,24,ReturnTwoValues
code-creation,Builtin,2,182736,0x7ff7616d9e94,32,Load_FastSmiElements_0
code-creation,Builtin,2,182742,0x7ff7616d9ed4,32,Load_FastObjectElements_0
code-creation,Builtin,2,182749,0x7ff7616d9f14,144,Load_FastDoubleElements_0
code-creation,Builtin,2,182756,0x7ff7616d9fb4,32,Store_FastSmiElements_0
code-creation,Builtin,2,182762,0x7ff7616d9ff4,96,Store_FastObjectElements_0
code-creation,Builtin,2,182769,0x7ff7616da074,48,Store_FastDoubleElements_0
code-creation,Builtin,2,182775,0x7ff7616da0b4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,182782,0x7ff7616da0f4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,182789,0x7ff7616da134,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,182795,0x7ff7616da174,308,SortCompareDefault
code-creation,Builtin,2,182802,0x7ff7616da2b4,92,SortCompareUserFn
code-creation,Builtin,2,182808,0x7ff7616da314,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,182815,0x7ff7616da334,312,Copy
code-creation,Builtin,2,182821,0x7ff7616da474,5776,MergeAt
code-creation,Builtin,2,182827,0x7ff7616dbb14,792,GallopLeft
code-creation,Builtin,2,182833,0x7ff7616dbe34,832,GallopRight
code-creation,Builtin,2,182839,0x7ff7616dc194,3832,ArrayTimSort
code-creation,Builtin,2,182845,0x7ff7616dd094,2112,ArrayPrototypeSort
code-creation,Builtin,2,182852,0x7ff7616dd8f4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,182858,0x7ff7616dd974,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,182865,0x7ff7616dd9f4,76,WasmTaggedToFloat64
code-creation,Builtin,2,182874,0x7ff7616dda54,72,WasmMemoryGrow
code-creation,Builtin,2,182880,0x7ff7616ddab4,100,WasmTableInit
code-creation,Builtin,2,182886,0x7ff7616ddb34,100,WasmTableCopy
code-creation,Builtin,2,182893,0x7ff7616ddbb4,84,WasmTableFill
code-creation,Builtin,2,182899,0x7ff7616ddc14,72,WasmTableGrow
code-creation,Builtin,2,182905,0x7ff7616ddc74,144,WasmTableGet
code-creation,Builtin,2,182911,0x7ff7616ddd14,236,WasmTableSet
code-creation,Builtin,2,182918,0x7ff7616dde14,88,WasmRefFunc
code-creation,Builtin,2,182924,0x7ff7616dde74,144,WasmAllocateFixedArray
code-creation,Builtin,2,182930,0x7ff7616ddf14,44,WasmThrow
code-creation,Builtin,2,182936,0x7ff7616ddf54,52,WasmRethrow
code-creation,Builtin,2,182942,0x7ff7616ddf94,44,WasmTriggerTierUp
code-creation,Builtin,2,182949,0x7ff7616ddfd4,32,WasmStackGuard
code-creation,Builtin,2,182955,0x7ff7616de014,32,WasmStackOverflow
code-creation,Builtin,2,182961,0x7ff7616de054,40,WasmTraceMemory
code-creation,Builtin,2,182968,0x7ff7616de094,32,WasmTraceEnter
code-creation,Builtin,2,182974,0x7ff7616de0d4,40,WasmTraceExit
code-creation,Builtin,2,182980,0x7ff7616de114,332,WasmAllocateJSArray
code-creation,Builtin,2,182986,0x7ff7616de274,104,WasmAllocatePair
code-creation,Builtin,2,182993,0x7ff7616de2f4,64,WasmAllocateRtt
code-creation,Builtin,2,182999,0x7ff7616de354,72,WasmAllocateFreshRtt
code-creation,Builtin,2,183005,0x7ff7616de3b4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,183012,0x7ff7616de434,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,183020,0x7ff7616de4d4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,183027,0x7ff7616de594,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,183034,0x7ff7616de654,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,183041,0x7ff7616de6d4,60,WasmArrayCopy
code-creation,Builtin,2,183047,0x7ff7616de714,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,183053,0x7ff7616de814,52,WasmSubtypeCheck
code-creation,Builtin,2,183060,0x7ff7616de854,8,WasmInt32ToNumber
code-creation,Builtin,2,183066,0x7ff7616de874,116,WasmUint32ToNumber
code-creation,Builtin,2,183072,0x7ff7616de8f4,144,UintPtr53ToNumber
code-creation,Builtin,2,183079,0x7ff7616de994,96,WasmAtomicNotify
code-creation,Builtin,2,183085,0x7ff7616dea14,116,WasmI32AtomicWait64
code-creation,Builtin,2,183092,0x7ff7616dea94,116,WasmI64AtomicWait64
code-creation,Builtin,2,183098,0x7ff7616deb14,580,WasmGetOwnProperty
code-creation,Builtin,2,183104,0x7ff7616ded74,40,WasmTrap
code-creation,Builtin,2,183111,0x7ff7616dedb4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,183117,0x7ff7616dedd4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,183124,0x7ff7616dedf4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,183131,0x7ff7616dee14,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,183137,0x7ff7616dee34,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,183144,0x7ff7616dee54,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,183150,0x7ff7616dee74,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,183157,0x7ff7616dee94,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,183164,0x7ff7616deeb4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,183170,0x7ff7616deed4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,183177,0x7ff7616deef4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,183184,0x7ff7616def14,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,183190,0x7ff7616def34,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,183197,0x7ff7616def54,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,183204,0x7ff7616def74,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,183210,0x7ff7616def94,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,183217,0x7ff7616defb4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,183224,0x7ff7616df074,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,183231,0x7ff7616df094,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,183238,0x7ff7616df114,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,183245,0x7ff7616df194,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,183252,0x7ff7616df1b4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,183259,0x7ff7616df294,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,183266,0x7ff7616df394,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,183273,0x7ff7616df3b4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,183280,0x7ff7616df3d4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,183287,0x7ff7616df3f4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,183294,0x7ff7616df414,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,183301,0x7ff7616df4b4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,183307,0x7ff7616df4d4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,183314,0x7ff7616df514,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,183321,0x7ff7616df554,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,183328,0x7ff7616df594,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,183335,0x7ff7616e0014,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,183342,0x7ff7616e0034,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,183348,0x7ff7616e0074,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,183355,0x7ff7616e0094,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,183362,0x7ff7616e0154,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,183370,0x7ff7616e0214,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,183377,0x7ff7616e0294,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,183385,0x7ff7616e02d4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,183392,0x7ff7616e0374,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,183398,0x7ff7616e03f4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,183405,0x7ff7616e0414,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,183413,0x7ff7616e04b4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,183420,0x7ff7616e04d4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,183427,0x7ff7616e04f4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,183434,0x7ff7616e0774,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,183441,0x7ff7616e0854,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,183448,0x7ff7616e0894,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,183456,0x7ff7616e0974,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,183464,0x7ff7616e0a74,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,183471,0x7ff7616e0ab4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,183478,0x7ff7616e0b94,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,183485,0x7ff7616e0bb4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,183492,0x7ff7616e0bd4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,183499,0x7ff7616e0c94,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,183505,0x7ff7616e0cb4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,183512,0x7ff7616e0cd4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,183519,0x7ff7616e0d94,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,183526,0x7ff7616e0db4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,183533,0x7ff7616e0dd4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,183540,0x7ff7616e0e94,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,183547,0x7ff7616e0eb4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,183554,0x7ff7616e0ed4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,183561,0x7ff7616e0f94,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,183568,0x7ff7616e1034,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,183575,0x7ff7616e10f4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,183582,0x7ff7616e11b4,12,CollatorConstructor
code-creation,Builtin,2,183588,0x7ff7616e11d4,12,CollatorInternalCompare
code-creation,Builtin,2,183595,0x7ff7616e11f4,12,CollatorPrototypeCompare
code-creation,Builtin,2,183602,0x7ff7616e1214,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,183608,0x7ff7616e1234,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,183615,0x7ff7616e1254,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,183622,0x7ff7616e1274,12,DatePrototypeToLocaleString
code-creation,Builtin,2,183628,0x7ff7616e1294,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,183635,0x7ff7616e12b4,12,DateTimeFormatConstructor
code-creation,Builtin,2,183641,0x7ff7616e12d4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,183648,0x7ff7616e12f4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,183655,0x7ff7616e1314,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,183662,0x7ff7616e1334,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,183669,0x7ff7616e1354,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,183676,0x7ff7616e1374,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,183682,0x7ff7616e1394,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,183689,0x7ff7616e13b4,12,DisplayNamesConstructor
code-creation,Builtin,2,183696,0x7ff7616e13d4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,183704,0x7ff7616e13f4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,183711,0x7ff7616e1414,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,183717,0x7ff7616e1434,12,IntlGetCanonicalLocales
code-creation,Builtin,2,183724,0x7ff7616e1454,12,ListFormatConstructor
code-creation,Builtin,2,183730,0x7ff7616e1474,224,ListFormatPrototypeFormat
code-creation,Builtin,2,183737,0x7ff7616e1574,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,183744,0x7ff7616e1674,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,183750,0x7ff7616e1694,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,183757,0x7ff7616e16b4,12,LocaleConstructor
code-creation,Builtin,2,183763,0x7ff7616e16d4,12,LocalePrototypeBaseName
code-creation,Builtin,2,183770,0x7ff7616e16f4,12,LocalePrototypeCalendar
code-creation,Builtin,2,183776,0x7ff7616e1714,12,LocalePrototypeCalendars
code-creation,Builtin,2,183783,0x7ff7616e1734,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,183789,0x7ff7616e1754,12,LocalePrototypeCollation
code-creation,Builtin,2,183796,0x7ff7616e1774,12,LocalePrototypeCollations
code-creation,Builtin,2,183803,0x7ff7616e1794,12,LocalePrototypeHourCycle
code-creation,Builtin,2,183809,0x7ff7616e17b4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,183816,0x7ff7616e17d4,12,LocalePrototypeLanguage
code-creation,Builtin,2,183822,0x7ff7616e17f4,12,LocalePrototypeMaximize
code-creation,Builtin,2,183829,0x7ff7616e1814,12,LocalePrototypeMinimize
code-creation,Builtin,2,183835,0x7ff7616e1834,12,LocalePrototypeNumeric
code-creation,Builtin,2,183842,0x7ff7616e1854,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,183848,0x7ff7616e1874,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,183855,0x7ff7616e1894,12,LocalePrototypeRegion
code-creation,Builtin,2,183861,0x7ff7616e18b4,12,LocalePrototypeScript
code-creation,Builtin,2,183938,0x7ff7616e18d4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,183948,0x7ff7616e18f4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,183955,0x7ff7616e1914,12,LocalePrototypeToString
code-creation,Builtin,2,183962,0x7ff7616e1934,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,183968,0x7ff7616e1954,12,NumberFormatConstructor
code-creation,Builtin,2,183975,0x7ff7616e1974,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,183982,0x7ff7616e1994,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,183989,0x7ff7616e19b4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,183996,0x7ff7616e19d4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,184003,0x7ff7616e19f4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,184010,0x7ff7616e1a14,12,PluralRulesConstructor
code-creation,Builtin,2,184016,0x7ff7616e1a34,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,184023,0x7ff7616e1a54,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,184030,0x7ff7616e1a74,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,184036,0x7ff7616e1a94,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,184043,0x7ff7616e1ab4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,184050,0x7ff7616e1ad4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,184057,0x7ff7616e1af4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,184064,0x7ff7616e1b14,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,184071,0x7ff7616e1b34,12,SegmenterConstructor
code-creation,Builtin,2,184078,0x7ff7616e1b54,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,184084,0x7ff7616e1b74,12,SegmenterPrototypeSegment
code-creation,Builtin,2,184091,0x7ff7616e1b94,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,184098,0x7ff7616e1bb4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,184104,0x7ff7616e1bd4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,184111,0x7ff7616e1bf4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,184118,0x7ff7616e1c14,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,184126,0x7ff7616e1c34,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,184133,0x7ff7616e1c54,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,184140,0x7ff7616e1c74,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,184147,0x7ff7616e1d54,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,184154,0x7ff7616e1d74,636,StringToLowerCaseIntl
code-creation,Builtin,2,184161,0x7ff7616e1ff4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,184167,0x7ff7616e2014,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,184174,0x7ff7616e2034,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,184181,0x7ff7616e2054,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,184188,0x7ff7616e2074,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,184195,0x7ff7616e2094,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,184202,0x7ff7616e20b4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,184209,0x7ff7616e20d4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,184215,0x7ff7616e20f4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,184222,0x7ff7616e2114,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,184229,0x7ff7616e2134,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,184236,0x7ff7616e2154,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,184243,0x7ff7616e2174,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,184250,0x7ff7616e2194,24,Wide
code-creation,BytecodeHandler,0,184257,0x7ff7616e21b4,24,ExtraWide
code-creation,BytecodeHandler,0,184263,0x7ff7616e21d4,104,DebugBreakWide
code-creation,BytecodeHandler,0,184270,0x7ff7616e2254,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,184277,0x7ff7616e22d4,164,DebugBreak0
code-creation,BytecodeHandler,0,184283,0x7ff7616e2394,104,DebugBreak1
code-creation,BytecodeHandler,0,184290,0x7ff7616e2414,104,DebugBreak2
code-creation,BytecodeHandler,0,184296,0x7ff7616e2494,104,DebugBreak3
code-creation,BytecodeHandler,0,184303,0x7ff7616e2514,104,DebugBreak4
code-creation,BytecodeHandler,0,184310,0x7ff7616e2594,104,DebugBreak5
code-creation,BytecodeHandler,0,184316,0x7ff7616e2614,104,DebugBreak6
code-creation,BytecodeHandler,0,184323,0x7ff7616e2694,32,Ldar
code-creation,BytecodeHandler,0,184329,0x7ff7616e26d4,68,LdaZero
code-creation,BytecodeHandler,0,184335,0x7ff7616e2734,76,LdaSmi
code-creation,BytecodeHandler,0,184342,0x7ff7616e2794,68,LdaUndefined
code-creation,BytecodeHandler,0,184348,0x7ff7616e27f4,68,LdaNull
code-creation,BytecodeHandler,0,184355,0x7ff7616e2854,68,LdaTheHole
code-creation,BytecodeHandler,0,184361,0x7ff7616e28b4,20,LdaTrue
code-creation,BytecodeHandler,0,184367,0x7ff7616e28d4,20,LdaFalse
code-creation,BytecodeHandler,0,184374,0x7ff7616e28f4,76,LdaConstant
code-creation,BytecodeHandler,0,184380,0x7ff7616e2954,132,LdaContextSlot
code-creation,BytecodeHandler,0,184389,0x7ff7616e29f4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,184396,0x7ff7616e2a94,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,184403,0x7ff7616e2af4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,184410,0x7ff7616e2b54,32,Star
code-creation,BytecodeHandler,0,184416,0x7ff7616e2b94,40,Mov
code-creation,BytecodeHandler,0,184422,0x7ff7616e2bd4,40,PushContext
code-creation,BytecodeHandler,0,184429,0x7ff7616e2c14,36,PopContext
code-creation,BytecodeHandler,0,184435,0x7ff7616e2c54,48,TestReferenceEqual
code-creation,BytecodeHandler,0,184442,0x7ff7616e2c94,52,TestUndetectable
code-creation,BytecodeHandler,0,184449,0x7ff7616e2cd4,36,TestNull
code-creation,BytecodeHandler,0,184455,0x7ff7616e2d14,36,TestUndefined
code-creation,BytecodeHandler,0,184462,0x7ff7616e2d54,336,TestTypeOf
code-creation,BytecodeHandler,0,184468,0x7ff7616e2eb4,6036,LdaGlobal
code-creation,BytecodeHandler,0,184475,0x7ff7616e4654,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,184482,0x7ff7616e5814,168,StaGlobal
code-creation,BytecodeHandler,0,184488,0x7ff7616e58d4,160,StaContextSlot
code-creation,BytecodeHandler,0,184495,0x7ff7616e5994,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,184502,0x7ff7616e5a14,124,LdaLookupSlot
code-creation,BytecodeHandler,0,184510,0x7ff7616e5a94,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,184517,0x7ff7616e5b94,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,184524,0x7ff7616e6e54,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,184531,0x7ff7616e6ed4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,184538,0x7ff7616e6fd4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,184545,0x7ff7616e8274,220,StaLookupSlot
code-creation,BytecodeHandler,0,184552,0x7ff7616e8354,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,184559,0x7ff7616e97d4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,184566,0x7ff7616e9894,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,184572,0x7ff7616e9974,160,LdaModuleVariable
code-creation,BytecodeHandler,0,184579,0x7ff7616e9a34,292,StaModuleVariable
code-creation,BytecodeHandler,0,184586,0x7ff7616e9b74,172,StaNamedProperty
code-creation,BytecodeHandler,0,184593,0x7ff7616e9c34,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,184599,0x7ff7616e9cf4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,184606,0x7ff7616e9db4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,184613,0x7ff7616e9e74,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,184620,0x7ff7616e9f54,160,CollectTypeProfile
code-creation,BytecodeHandler,0,184627,0x7ff7616ea014,1028,Add
code-creation,BytecodeHandler,0,184633,0x7ff7616ea434,1064,Sub
code-creation,BytecodeHandler,0,184640,0x7ff7616ea874,1024,Mul
code-creation,BytecodeHandler,0,184646,0x7ff7616eac94,988,Div
code-creation,BytecodeHandler,0,184652,0x7ff7616eb074,912,Mod
code-creation,BytecodeHandler,0,184658,0x7ff7616eb414,964,Exp
code-creation,BytecodeHandler,0,184665,0x7ff7616eb7f4,876,BitwiseOr
code-creation,BytecodeHandler,0,184671,0x7ff7616ebb74,888,BitwiseXor
code-creation,BytecodeHandler,0,184678,0x7ff7616ebef4,888,BitwiseAnd
code-creation,BytecodeHandler,0,184684,0x7ff7616ec274,900,ShiftLeft
code-creation,BytecodeHandler,0,184691,0x7ff7616ec614,900,ShiftRight
code-creation,BytecodeHandler,0,184697,0x7ff7616ec9b4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,184704,0x7ff7616ecdb4,960,AddSmi
code-creation,BytecodeHandler,0,184710,0x7ff7616ed194,1000,SubSmi
code-creation,BytecodeHandler,0,184717,0x7ff7616ed594,916,MulSmi
code-creation,BytecodeHandler,0,184723,0x7ff7616ed934,920,DivSmi
code-creation,BytecodeHandler,0,184730,0x7ff7616edcd4,816,ModSmi
code-creation,BytecodeHandler,0,184736,0x7ff7616ee014,872,ExpSmi
code-creation,BytecodeHandler,0,184742,0x7ff7616ee394,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,184749,0x7ff7616ee594,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,184755,0x7ff7616ee794,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,184762,0x7ff7616ee994,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,184769,0x7ff7616eeb94,488,ShiftRightSmi
code-creation,BytecodeHandler,0,184775,0x7ff7616eed94,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,184782,0x7ff7616ef034,656,Inc
code-creation,BytecodeHandler,0,184788,0x7ff7616ef2d4,656,Dec
code-creation,BytecodeHandler,0,184795,0x7ff7616ef574,640,Negate
code-creation,BytecodeHandler,0,184801,0x7ff7616ef814,480,BitwiseNot
code-creation,BytecodeHandler,0,184807,0x7ff7616efa14,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,184814,0x7ff7616efa94,36,LogicalNot
code-creation,BytecodeHandler,0,184821,0x7ff7616efad4,208,TypeOf
code-creation,BytecodeHandler,0,184827,0x7ff7616efbb4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,184834,0x7ff7616efc34,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,184841,0x7ff7616efcb4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,184848,0x7ff7616efcf4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,184854,0x7ff7616f0174,1132,CallProperty
code-creation,BytecodeHandler,0,184861,0x7ff7616f05f4,1012,CallProperty0
code-creation,BytecodeHandler,0,184869,0x7ff7616f09f4,1028,CallProperty1
code-creation,BytecodeHandler,0,184876,0x7ff7616f0e14,1040,CallProperty2
code-creation,BytecodeHandler,0,184883,0x7ff7616f1234,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,184891,0x7ff7616f1634,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,184898,0x7ff7616f1a54,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,184905,0x7ff7616f1e54,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,184912,0x7ff7616f2274,1132,CallWithSpread
code-creation,BytecodeHandler,0,184918,0x7ff7616f26f4,124,CallRuntime
code-creation,BytecodeHandler,0,184925,0x7ff7616f2774,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,184932,0x7ff7616f2814,80,CallJSRuntime
code-creation,BytecodeHandler,0,184938,0x7ff7616f2874,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,184945,0x7ff7616f2d54,1020,Construct
code-creation,BytecodeHandler,0,184951,0x7ff7616f3154,536,ConstructWithSpread
code-creation,BytecodeHandler,0,184958,0x7ff7616f3374,1936,TestEqual
code-creation,BytecodeHandler,0,184965,0x7ff7616f3b14,1064,TestEqualStrict
code-creation,BytecodeHandler,0,184971,0x7ff7616f3f54,1624,TestLessThan
code-creation,BytecodeHandler,0,184978,0x7ff7616f45b4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,184985,0x7ff7616f4c14,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,184992,0x7ff7616f5274,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,184998,0x7ff7616f58d4,860,TestInstanceOf
code-creation,BytecodeHandler,0,185005,0x7ff7616f5c34,156,TestIn
code-creation,BytecodeHandler,0,185011,0x7ff7616f5cd4,112,ToName
code-creation,BytecodeHandler,0,185018,0x7ff7616f5d54,212,ToNumber
code-creation,BytecodeHandler,0,185024,0x7ff7616f5e34,232,ToNumeric
code-creation,BytecodeHandler,0,185031,0x7ff7616f5f34,112,ToObject
code-creation,BytecodeHandler,0,185037,0x7ff7616f5fb4,116,ToString
code-creation,BytecodeHandler,0,185044,0x7ff7616f6034,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,185051,0x7ff7616f61d4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,185057,0x7ff7616f6794,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,185064,0x7ff7616f67f4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,185071,0x7ff7616f6b14,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,185078,0x7ff7616f7374,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,185085,0x7ff7616f7474,168,CloneObject
code-creation,BytecodeHandler,0,185092,0x7ff7616f7534,212,GetTemplateObject
code-creation,BytecodeHandler,0,185098,0x7ff7616f7614,328,CreateClosure
code-creation,BytecodeHandler,0,185106,0x7ff7616f7774,120,CreateBlockContext
code-creation,BytecodeHandler,0,185113,0x7ff7616f77f4,132,CreateCatchContext
code-creation,BytecodeHandler,0,185120,0x7ff7616f7894,256,CreateFunctionContext
code-creation,BytecodeHandler,0,185127,0x7ff7616f79b4,256,CreateEvalContext
code-creation,BytecodeHandler,0,185134,0x7ff7616f7ad4,132,CreateWithContext
code-creation,BytecodeHandler,0,185141,0x7ff7616f7b74,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,185148,0x7ff7616f81b4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,185155,0x7ff7616f8414,632,CreateRestParameter
code-creation,BytecodeHandler,0,185161,0x7ff7616f8694,424,JumpLoop
code-creation,BytecodeHandler,0,185168,0x7ff7616f8854,44,Jump
code-creation,BytecodeHandler,0,185174,0x7ff7616f8894,56,JumpConstant
code-creation,BytecodeHandler,0,185181,0x7ff7616f88d4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,185188,0x7ff7616f8934,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,185195,0x7ff7616f8994,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,185201,0x7ff7616f89f4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,185208,0x7ff7616f8a54,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,185215,0x7ff7616f8ab4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,185222,0x7ff7616f8b14,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,185229,0x7ff7616f8b74,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,185236,0x7ff7616f8bd4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,185243,0x7ff7616f8c74,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,185251,0x7ff7616f8d14,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,185258,0x7ff7616f8db4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,185265,0x7ff7616f8e54,64,JumpIfTrue
code-creation,BytecodeHandler,0,185272,0x7ff7616f8eb4,64,JumpIfFalse
code-creation,BytecodeHandler,0,185278,0x7ff7616f8f14,64,JumpIfNull
code-creation,BytecodeHandler,0,185285,0x7ff7616f8f74,64,JumpIfNotNull
code-creation,BytecodeHandler,0,185291,0x7ff7616f8fd4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,185298,0x7ff7616f9034,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,185305,0x7ff7616f9094,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,185311,0x7ff7616f90f4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,185318,0x7ff7616f9154,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,185325,0x7ff7616f91d4,464,ForInEnumerate
code-creation,BytecodeHandler,0,185332,0x7ff7616f93b4,252,ForInPrepare
code-creation,BytecodeHandler,0,185338,0x7ff7616f94b4,60,ForInContinue
code-creation,BytecodeHandler,0,185345,0x7ff7616f94f4,256,ForInNext
code-creation,BytecodeHandler,0,185351,0x7ff7616f9614,48,ForInStep
code-creation,BytecodeHandler,0,185358,0x7ff7616f9654,36,SetPendingMessage
code-creation,BytecodeHandler,0,185365,0x7ff7616f9694,116,Throw
code-creation,BytecodeHandler,0,185371,0x7ff7616f9714,116,ReThrow
code-creation,BytecodeHandler,0,185378,0x7ff7616f9794,112,Return
code-creation,BytecodeHandler,0,185384,0x7ff7616f9814,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,185391,0x7ff7616f98f4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,185398,0x7ff7616f9994,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,185405,0x7ff7616f9a34,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,185412,0x7ff7616f9ad4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,185419,0x7ff7616f9b54,512,SuspendGenerator
code-creation,BytecodeHandler,0,185426,0x7ff7616f9d74,128,ResumeGenerator
code-creation,BytecodeHandler,0,185433,0x7ff7616f9e14,152,GetIterator
code-creation,BytecodeHandler,0,185439,0x7ff7616f9eb4,116,Debugger
code-creation,BytecodeHandler,0,185446,0x7ff7616f9f34,124,IncBlockCounter
code-creation,BytecodeHandler,0,185453,0x7ff7616f9fb4,56,Abort
code-creation,BytecodeHandler,0,185459,0x7ff7616f9ff4,32,Star0
code-creation,BytecodeHandler,0,185465,0x7ff7616fa034,60,Illegal
code-creation,BytecodeHandler,0,185473,0x7ff7616fa074,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,185480,0x7ff7616fa0f4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,185487,0x7ff7616fa174,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,185494,0x7ff7616fa1f4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,185501,0x7ff7616fa274,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,185507,0x7ff7616fa2f4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,185514,0x7ff7616fa374,32,Ldar.Wide
code-creation,BytecodeHandler,0,185521,0x7ff7616fa3b4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,185527,0x7ff7616fa3f4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,185534,0x7ff7616fa434,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,185541,0x7ff7616fa494,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,185548,0x7ff7616fa4f4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,185556,0x7ff7616fa534,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,185563,0x7ff7616fa574,32,Star.Wide
code-creation,BytecodeHandler,0,185569,0x7ff7616fa5b4,40,Mov.Wide
code-creation,BytecodeHandler,0,185576,0x7ff7616fa5f4,40,PushContext.Wide
code-creation,BytecodeHandler,0,185583,0x7ff7616fa634,36,PopContext.Wide
code-creation,BytecodeHandler,0,185589,0x7ff7616fa674,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,185596,0x7ff7616fa6b4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,185603,0x7ff7616fb8f4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,185613,0x7ff7616fcaf4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,185620,0x7ff7616fcbb4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,185627,0x7ff7616fcc74,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,185635,0x7ff7616fccf4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,185642,0x7ff7616fcd94,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,185649,0x7ff7616fce94,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,185656,0x7ff7616fe194,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,185663,0x7ff7616fe234,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,185671,0x7ff7616fe334,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,185678,0x7ff7616ff614,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,185685,0x7ff7616ff6f4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,185692,0x7ff761700b74,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,185700,0x7ff761700c34,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,185707,0x7ff761700cf4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,185714,0x7ff761700db4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,185721,0x7ff761700ef4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,185728,0x7ff761700fb4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,185735,0x7ff761701074,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,185742,0x7ff761701134,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,185748,0x7ff7617011f4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,185756,0x7ff7617012d4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,185762,0x7ff761701394,984,Add.Wide
code-creation,BytecodeHandler,0,185769,0x7ff761701774,1020,Sub.Wide
code-creation,BytecodeHandler,0,185775,0x7ff761701b74,972,Mul.Wide
code-creation,BytecodeHandler,0,185782,0x7ff761701f54,988,Div.Wide
code-creation,BytecodeHandler,0,185788,0x7ff761702334,916,Mod.Wide
code-creation,BytecodeHandler,0,185794,0x7ff7617026d4,988,Exp.Wide
code-creation,BytecodeHandler,0,185800,0x7ff761702ab4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,185807,0x7ff761702e54,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,185814,0x7ff7617031f4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,185820,0x7ff761703594,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,185827,0x7ff761703954,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,185833,0x7ff761703d14,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,185840,0x7ff761704134,916,AddSmi.Wide
code-creation,BytecodeHandler,0,185847,0x7ff7617044d4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,185853,0x7ff7617048b4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,185860,0x7ff761704c54,920,DivSmi.Wide
code-creation,BytecodeHandler,0,185907,0x7ff761704ff4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,185949,0x7ff761705334,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,185959,0x7ff7617056b4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,185968,0x7ff7617058b4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,185977,0x7ff761705ab4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,185985,0x7ff761705cb4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,185994,0x7ff761705eb4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,186003,0x7ff7617060b4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,186021,0x7ff761706354,616,Inc.Wide
code-creation,BytecodeHandler,0,186029,0x7ff7617065d4,616,Dec.Wide
code-creation,BytecodeHandler,0,186037,0x7ff761706854,648,Negate.Wide
code-creation,BytecodeHandler,0,186045,0x7ff761706af4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,186053,0x7ff761706cf4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,186062,0x7ff761706d74,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,186070,0x7ff761706df4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,186079,0x7ff761706e34,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,186088,0x7ff7617072b4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,186096,0x7ff761707734,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,186106,0x7ff761707b34,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,186115,0x7ff761707f54,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,186122,0x7ff761708374,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,186130,0x7ff761708774,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,186139,0x7ff761708b94,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,186147,0x7ff761708fb4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,186156,0x7ff7617093d4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,186164,0x7ff761709854,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,186173,0x7ff7617098f4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,186181,0x7ff7617099b4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,186190,0x7ff761709a14,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,186198,0x7ff761709ef4,968,Construct.Wide
code-creation,BytecodeHandler,0,186206,0x7ff76170a2d4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,186215,0x7ff76170a4b4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,186223,0x7ff76170ac74,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,186231,0x7ff76170b0b4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,186239,0x7ff76170b6b4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,186248,0x7ff76170bcb4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,186256,0x7ff76170c2b4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,186265,0x7ff76170c8b4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,186273,0x7ff76170cc34,160,TestIn.Wide
code-creation,BytecodeHandler,0,186281,0x7ff76170ccf4,116,ToName.Wide
code-creation,BytecodeHandler,0,186289,0x7ff76170cd74,216,ToNumber.Wide
code-creation,BytecodeHandler,0,186298,0x7ff76170ce54,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,186306,0x7ff76170cf54,116,ToObject.Wide
code-creation,BytecodeHandler,0,186314,0x7ff76170cfd4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,186322,0x7ff76170d174,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,186331,0x7ff76170d6f4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,186339,0x7ff76170da14,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,186348,0x7ff76170e214,172,CloneObject.Wide
code-creation,BytecodeHandler,0,186356,0x7ff76170e2d4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,186365,0x7ff76170e394,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,186373,0x7ff76170e4f4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,186381,0x7ff76170e574,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,186390,0x7ff76170e614,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,186400,0x7ff76170e734,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,186408,0x7ff76170e854,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,186417,0x7ff76170e8f4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,186425,0x7ff76170eab4,44,Jump.Wide
code-creation,BytecodeHandler,0,186433,0x7ff76170eaf4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,186441,0x7ff76170eb34,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,186450,0x7ff76170eb94,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,186458,0x7ff76170ebf4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,186467,0x7ff76170ec54,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,186476,0x7ff76170ecb4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,186484,0x7ff76170ed14,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,186493,0x7ff76170ed74,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,186501,0x7ff76170edd4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,186510,0x7ff76170ee34,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,186519,0x7ff76170eed4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,186527,0x7ff76170ef74,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,186537,0x7ff76170f014,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,186546,0x7ff76170f0b4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,186554,0x7ff76170f114,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,186563,0x7ff76170f174,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,186571,0x7ff76170f1d4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,186579,0x7ff76170f234,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,186588,0x7ff76170f294,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,186596,0x7ff76170f2f4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,186605,0x7ff76170f354,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,186613,0x7ff76170f3b4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,186622,0x7ff76170f434,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,186630,0x7ff76170f614,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,186638,0x7ff76170f714,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,186646,0x7ff76170f754,260,ForInNext.Wide
code-creation,BytecodeHandler,0,186654,0x7ff76170f874,48,ForInStep.Wide
code-creation,BytecodeHandler,0,186663,0x7ff76170f8b4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,186671,0x7ff76170f954,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,186680,0x7ff76170fa14,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,186688,0x7ff76170fa94,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,186697,0x7ff76170fcb4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,186705,0x7ff76170fd54,156,GetIterator.Wide
code-creation,BytecodeHandler,0,186713,0x7ff76170fdf4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,186722,0x7ff76170fe94,56,Abort.Wide
code-creation,BytecodeHandler,0,186730,0x7ff76170fed4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,186738,0x7ff76170ff54,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,186747,0x7ff76170ffd4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,186755,0x7ff761710054,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,186763,0x7ff7617100d4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,186772,0x7ff761710154,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,186780,0x7ff7617101d4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,186788,0x7ff761710214,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,186796,0x7ff761710234,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,186805,0x7ff761710274,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186813,0x7ff7617102d4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186822,0x7ff761710334,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186831,0x7ff761710374,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186840,0x7ff7617103b4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,186848,0x7ff7617103d4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,186856,0x7ff761710414,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,186870,0x7ff761710454,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,186878,0x7ff761710494,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,186887,0x7ff7617104d4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,186895,0x7ff761711714,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,186904,0x7ff761712914,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,186912,0x7ff7617129d4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186921,0x7ff761712a74,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186930,0x7ff761712af4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,186938,0x7ff761712b94,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,186947,0x7ff761712c94,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,186956,0x7ff761713f94,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,186965,0x7ff761714034,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,186976,0x7ff761714134,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,186986,0x7ff761715414,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,186995,0x7ff7617154f4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,187003,0x7ff761716954,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,187012,0x7ff761716a14,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,187021,0x7ff761716ab4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,187029,0x7ff761716b74,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,187038,0x7ff761716cb4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,187046,0x7ff761716d74,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,187055,0x7ff761716e34,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,187063,0x7ff761716ef4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,187072,0x7ff761716fb4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,187081,0x7ff761717094,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,187089,0x7ff761717154,980,Add.ExtraWide
code-creation,BytecodeHandler,0,187097,0x7ff761717534,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,187106,0x7ff761717934,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,187114,0x7ff761717d14,988,Div.ExtraWide
code-creation,BytecodeHandler,0,187122,0x7ff7617180f4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,187130,0x7ff761718494,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,187138,0x7ff761718874,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,187146,0x7ff761718c14,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,187154,0x7ff761718fb4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,187163,0x7ff761719354,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,187171,0x7ff761719714,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,187179,0x7ff761719ad4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,187188,0x7ff761719ef4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,187196,0x7ff76171a294,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,187205,0x7ff76171a674,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,187213,0x7ff76171aa14,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,187221,0x7ff76171adb4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,187229,0x7ff76171b0f4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,187237,0x7ff76171b474,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,187246,0x7ff76171b674,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,187254,0x7ff76171b874,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,187263,0x7ff76171ba74,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,187271,0x7ff76171bc74,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,187280,0x7ff76171be74,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,187288,0x7ff76171c114,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,187296,0x7ff76171c394,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,187304,0x7ff76171c614,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,187312,0x7ff76171c8b4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,187321,0x7ff76171cab4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,187329,0x7ff76171cb34,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,187338,0x7ff76171cbb4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,187347,0x7ff76171cbf4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,187355,0x7ff76171d074,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,187363,0x7ff76171d4f4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,187372,0x7ff76171d8f4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,187380,0x7ff76171dd14,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,187389,0x7ff76171e134,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,187398,0x7ff76171e534,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,187408,0x7ff76171e954,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,187417,0x7ff76171ed54,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,187426,0x7ff76171f174,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,187434,0x7ff76171f5f4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,187442,0x7ff76171f694,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,187451,0x7ff76171f754,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,187460,0x7ff76171f7b4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,187468,0x7ff76171fc94,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,187476,0x7ff761720074,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,187485,0x7ff761720254,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,187493,0x7ff761720a14,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,187502,0x7ff761720e54,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,187538,0x7ff761721454,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,187547,0x7ff761721a54,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,187556,0x7ff761722054,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,187565,0x7ff761722654,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,187575,0x7ff7617229d4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,187583,0x7ff761722a74,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,187592,0x7ff761722af4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,187600,0x7ff761722bd4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,187608,0x7ff761722cd4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,187617,0x7ff761722d54,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,187625,0x7ff761722ef4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,187634,0x7ff761723474,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,187643,0x7ff761723794,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,187651,0x7ff761723f94,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,187660,0x7ff761724054,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,187669,0x7ff761724114,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,187677,0x7ff761724274,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,187685,0x7ff7617242f4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,187694,0x7ff761724394,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,187703,0x7ff7617244b4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,187712,0x7ff7617245d4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,187720,0x7ff761724674,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,187728,0x7ff761724834,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,187737,0x7ff761724874,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,187745,0x7ff7617248b4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,187754,0x7ff761724914,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,187762,0x7ff761724974,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,187771,0x7ff7617249d4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,187780,0x7ff761724a34,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,187789,0x7ff761724a94,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,187798,0x7ff761724af4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,187806,0x7ff761724b54,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,187815,0x7ff761724bb4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,187824,0x7ff761724c54,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,187902,0x7ff761724cf4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,187916,0x7ff761724d94,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,187925,0x7ff761724e34,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,187933,0x7ff761724e94,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,187942,0x7ff761724ef4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,187950,0x7ff761724f54,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,187958,0x7ff761724fb4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,187967,0x7ff761725014,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,187976,0x7ff761725074,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,187984,0x7ff7617250d4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,187993,0x7ff761725134,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,188002,0x7ff7617251b4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,188010,0x7ff761725394,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,188019,0x7ff761725494,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,188027,0x7ff7617254d4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,188035,0x7ff7617255f4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,188044,0x7ff761725634,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,188053,0x7ff7617256d4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,188062,0x7ff761725794,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,188071,0x7ff761725814,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,188079,0x7ff761725a34,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,188088,0x7ff761725ab4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,188096,0x7ff761725b54,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,188105,0x7ff761725bd4,56,Abort.ExtraWide
tick,0x7ff760b8f84d,188116,0,0x0,6
new,MemoryChunk,0x2bd9a340000,262144
new,MemoryChunk,0x3f160500000,262144
new,MemoryChunk,0xa8c3f40000,262144
new,MemoryChunk,0xb136380000,262144
code-creation,Eval,10,193001,0xb1363bb55e,5, node:internal/main/run_main_module:1:1,0xb1363bb418,~
script-source,91,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0xb1363bb55e,91,0,649,C0O0C4O649,,
code-creation,Function,10,193073,0xb1363bb606,58, node:internal/main/run_main_module:1:1,0xb1363bb4d8,~
code-source-info,0xb1363bb606,91,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,193332,0xb1363bb846,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x308e28fca0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n  */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0xb1363bb846,9,10646,10999,C0O10656C2O10667C4O10663C9O10684C13O10705C14O10728C19O10741C24O10745C29O10745C35O10889C37O10899C47O10947C60O10905C65O10899C66O10969C71O10969C75O10996,,
code-creation,LazyCompile,10,194086,0xb1363bc556,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x308e28fbd0,~
code-source-info,0xb1363bc556,9,9826,10409,C0O9845C6O9860C12O9890C16O9898C17O9929C22O9938C23O9951C30O9997C37O10028C45O9997C63O10130C70O10130C75O10166C89O10201C103O10158C108O10241C109O10253C124O10285C126O10298C141O10321C152O10340C160O10372C165O10321C170O10396C174O10404,,
code-creation,Eval,10,194477,0xb1363bd49e,5, node:internal/bootstrap/pre_execution:1:1,0xb1363bd108,~
script-source,92,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\x0d\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\x0d\n  // deserialization).\x0d\n  const {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x0d\n  } = require('internal/process/per_thread').getFastAPIs(binding);\x0d\n\x0d\n  process.hrtime = hrtime;\x0d\n  process.hrtime.bigint = hrtimeBigInt;\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {}\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0xb1363bd49e,92,0,16490,C0O0C4O16490,,
code-creation,Function,10,195304,0xb1363bdf9e,426, node:internal/bootstrap/pre_execution:1:1,0xb1363bd418,~
code-source-info,0xb1363bdf9e,92,0,16490,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O16075C324O16097C330O16120C336O16143C342O16167C348O16185C354O16204C360O16235C366O16262C372O16286C378O16317C384O16350C390O16373C396O16401C402O16425C408O16446C414O16470C420O16090C425O16489,,
new,MemoryChunk,0x1ae334c0000,262144
code-creation,Eval,10,195563,0xb1363bf926,5, node:internal/options:1:1,0xb1363bf750,~
script-source,93,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0xb1363bf926,93,0,1892,C0O0C4O1892,,
code-creation,Function,10,195692,0xb1363bfcf6,154, node:internal/options:1:1,0xb1363bf8a0,~
code-source-info,0xb1363bfcf6,93,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
code-creation,LazyCompile,10,195815,0x1ae334c152e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x308e28f720,~
code-source-info,0x1ae334c152e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,196080,0x1ae334c1d5e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0xb1363bd4d0,~
code-source-info,0x1ae334c1d5e,92,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,196235,0x1ae334c2f86,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x17a320f2fe8,~
script-source,19,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x1ae334c2f86,19,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,197999,0x1ae334c57d6,432,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0xb1363bd520,~
code-source-info,0x1ae334c57d
code-creation,LazyCompile,10,198214,0x1ae334c5e6e,113,getFastAPIs node:internal/process/per_thread:57:21,0x17a320ff748,~
script-source,23,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nfunction getFastAPIs(binding) {\x0d\n  const {\x0d\n    hrtime: _hrtime\x0d\n  } = binding.getFastAPIs();\x0d\n\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  const hrValues = new Uint32Array(_hrtime.buffer);\x0d\n\x0d\n  function hrtime(time) {\x0d\n    _hrtime.hrtime();\x0d\n\x0d\n    if (time !== undefined) {\x0d\n      validateArray(time\x2C 'time');\x0d\n      if (time.length !== 2) {\x0d\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n      }\x0d\n\x0d\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n      const nsec = hrValues[2] - time[1];\x0d\n      const needsBorrow = nsec < 0;\x0d\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n    }\x0d\n\x0d\n    return [\x0d\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n      hrValues[2]\x2C\x0d\n    ];\x0d\n  }\x0d\n\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\x0d\n  function hrtimeBigInt() {\x0d\n    _hrtime.hrtimeBigInt();\x0d\n    return hrBigintValues[0];\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  getFastAPIs\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x0d\n};\x0d\n
code-source-info,0x1ae334c5e6e,23,1285,2511,C0O1285C24O1344C29O1344C34O1321C40O1564C50O1588C57O1564C62O1564C64O2321C74O2348C86O2321C91O2321C93O2462C100O2476C106O2489C112O2508,,
code-creation,LazyCompile,10,199151,0x1ae334c7676,832,resolve node:path:158:10,0x882f8296e8,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instancee\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x1ae334c
code-creation,LazyCompile,10,201812,0x1ae334cac8e,30,validateString node:internal/validators:117:24,0x17a320da8e0,~
script-source,17,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x1ae334cac8e,17,3514,3626,C0O3533C6O3569C22O3575C27O3569C29O3625,,
tick,0x7ff761b6eea0,202355,0,0x0,3,0x7ff7611bf520,0x1ae334c76a7,0x1ae334c58bb,0x1ae334c1d73,0xb1363bb615
code-creation,LazyCompile,10,202382,0x1ae334cb5f6,17,isPathSeparator node:path:52:25,0x882f829168,~
code-source-info,0x1ae334cb5f6,35,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,202441,0x1ae334cb6f6,35,isWindowsDeviceRoot node:path:60:29,0x882f8295e0,~
code-source-info,0x1ae334cb6f6,35,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,202515,0x1ae334cb816,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x162d6f93f60,~
script-source,90,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x1ae334cb816,90,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,202862,0x1ae334cbe7e,442,normalizeString node:path:66:25,0x882f829630,~
code-source-info,0x1ae334cbe7e
code-creation,LazyCompile,10,203048,0x1ae334cc3c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33,0xb1363bd570,~
code-source-info,0x1ae334cc3c6,92,4413,4648,C16O4466C21O4466C26O4493C28O4511C36O4541C43O4607C49O4626C56O4511C62O4647,,
code-creation,LazyCompile,10,203125,0x1ae334cc546,82,getOptionValue node:internal/options:39:24,0xb1363bfa48,~
code-source-info,0x1ae334cc546,93,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,203189,0x1ae334cc8f6,33,getCLIOptionsFromBinding node:internal/options:18:34,0xb1363bf958,~
code-source-info,0x1ae334cc8f6,93,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,203535,0x1ae334cccd6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33,0xb1363bd818,~
code-source-info,0x1ae334cccd6,92,6973,7204,C0O7016C6O7016C11O6989C16O7089C22O7089C27O7060C32O7132C35O7157C40O7132C45O7203,,
code-creation,LazyCompile,10,203611,0x1ae334cce6e,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x17a320ffd38,~
code-source-info,0x1ae334cce6e,23,11424,11731,C0O11449C4O11479C10O11515C16O11547C21O11591C26O11592C33O11536C39O11618C44O11639C49O11639C55O11659C61O11692C66O11713C71O11713C76O11730,,
code-creation,LazyCompile,10,203676,0x1ae334cd01e,42,setupPerfHooks node:internal/bootstrap/pre_execution:227:24,0xb1363bd868,~
code-source-info,0x1ae334cd01e,92,7231,7354,C0O7239C6O7239C11O7275C16O7276C20O7300C26O7300C31O7330C36O7331C41O7353,,
code-creation,LazyCompile,10,203748,0x1ae334cd19e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x31fadeca000,~
script-source,70,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x1ae334cd19e,70,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,204168,0x1ae334cd8ae,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x882f83d2e0,~
script-source,41,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x1ae334cd8ae,41,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,204280,0x1ae334cdb1e,62,setupInspectorHooks node:internal/bootstrap/pre_execution:232:29,0xb1363bd8b8,~
code-source-info,0x1ae334cdb1e,92,7386,7952,C0O7735C6O7739C11O7764C17O7833C23O7833C28O7801C33O7816C38O7880C44O7880C49O7908C54O7909C61O7951,,
code-creation,Eval,10,204426,0x1ae334cdece,5, node:internal/inspector_async_hook:1:1,0x1ae334cdd18,~
script-source,94,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x1ae334cdece,94,0,2048,C0O0C4O2048,,
code-creation,Function,10,204568,0x1ae334ce0ee,79, node:internal/inspector_async_hook:1:1,0x1ae334cde48,~
code-source-info,0x1ae334ce0ee,94,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,204693,0x1ae334ce5e6,69,setupWarningHandler node:internal/bootstrap/pre_execution:141:29,0xb1363bd5c0,~
code-source-info,0x1ae334ce5e6,92,4680,4885,C0O4718C6O4718C11O4701C16O4758C24O4762C33O4807C38O4811C45O4828C50O4844C53O4852C61O4852C68O4884,,
code-creation,LazyCompile,10,204824,0x1ae334ce746,20,addListener node:events:486:58,0x308e2b3f30,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catcheable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {}\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {}\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x1ae334ce746,13,14677,14751,C0O14699C14O14706C19O14748,,
code-creation,LazyCompile,10,206542,0x1ae334d09a6,387,_addListener node:events:418:22,0x308e2b3e90,~
code-source-info,0x1ae334d09a
code-creation,LazyCompile,10,206660,0x1ae334d0cde,15,checkListener node:events:127:23,0x308e2b37f0,~
code-source-info,0x1ae334d0cde,13,3796,3854,C0O3812C8O3812C14O3853,,
code-creation,LazyCompile,10,206715,0x1ae334d0dce,30, node:internal/validators:235:42,0x17a320dad78,~
code-source-info,0x1ae334d0dce,17,7441,7560,C0O7463C6O7501C22O7507C27O7501C29O7559,,
code-creation,LazyCompile,10,206862,0x1ae334d104e,380,emit node:events:340:44,0x308e2b3dd0,~
code-source-info,0x1ae334d104e
code-creation,LazyCompile,10,207022,0x1ae334d13f6,172,startListeningIfSignal node:internal/process/signal:22:32,0x162d6f92d20,~
script-source,89,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x1ae334d13f6,89,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,207171,0x1ae334d17b6,19,isSignal node:internal/process/signal:17:18,0x162d6f92b68,~
code-source-info,0x1ae334d17b6,89,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,207242,0x1ae334d1956,75,setupDebugEnv node:internal/bootstrap/pre_execution:193:23,0xb1363bd728,~
code-source-info,0x1ae334d1956,92,6195,6410,C0O6203C6O6203C11O6236C19O6264C24O6268C29O6237C34O6284C42O6288C48O6333C54O6333C59O6370C64O6383C69O6384C74O6409,,
code-creation,LazyCompile,10,207357,0x1ae334d1cee,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x882f83c668,~
script-source,40,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x1ae334d1cee,40,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,207615,0x1ae334d23de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40,0xb1363bd660,~
code-source-info,0x1ae334d23de,92,5738,5932,C0O5746C8O5751C14O5792C15O5799C16O5835C22O5835C27O5816C32O5887C38O5921C43O5921C48O5931,,
code-creation,LazyCompile,10,207694,0x1ae334d264e,62,initializeReport node:internal/bootstrap/pre_execution:182:26,0xb1363bd6b0,~
code-source-info,0x1ae334d264e,92,5961,6169,C0O5961C8O5988C16O5988C21O5977C27O6027C42O6048C47O6123C55O6027C61O6168,,
code-creation,Eval,10,207910,0x1ae334d2bce,5, node:internal/process/report:1:1,0x1ae334d29c8,~
script-source,95,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined && typeof file !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\x0d\n    } else if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x1ae334d2bce,95,0,2743,C0O0C4O2743,,
code-creation,Function,10,208102,0x1ae334d36e6,315, node:internal/process/report:1:1,0x1ae334d2b48,~
code-source-info,0x1ae334d36e6,95,0,2743,C0O0C51O70C54O70C59O96C64O26C70O51C76O199C79O199C84O116C90O136C96O155C102O178C108O243C111O243C115O243C117O282C123O327C128O332C136O786C290O2688C297O2710C303O2731C309O2703C314O2742,,
code-creation,LazyCompile,10,208321,0x1ae334d5426,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40,0xb1363bd778,~
code-source-info,0x1ae334d5426,92,6514,6614,C0O6551C6O6551C11O6530C16O6592C20O6613,,
code-creation,LazyCompile,10,208407,0x1ae334d556e,57,addSignalHandler node:internal/process/report:97:26,0x1ae334d2c00,~
code-source-info,0x1ae334d556e,95,2318,2471,C0O2329C5O2336C10O2336C16O2367C22O2403C27O2412C32O2412C38O2432C41O2440C49O2440C56O2470,,
code-creation,LazyCompile,10,208491,0x1ae334d5b2e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46,0xb1363bd7c8,~
code-source-info,0x1ae334d5b2e,92,6663,6937,C0O6663C8O6686C18O6686C23O6732C25O6750C26O6757C27O6763C35O6763C40O6793C45O6794C50O6855C58O6855C63O6833C69O6875C74O6883C79O6886C84O6883C91O6936,,
code-creation,LazyCompile,10,208662,0x1ae334d5dbe,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37,0xb1363bd998,~
code-source-info,0x1ae334d5dbe,92,10807,11353,C0O10815C3O10827C8O10831C14O10870C20O10870C25O10916C33O10939C38O10943C46O10916C52O10970C53O10980C57O10970C61O11064C64O11079C73O11140C76O11148C81O11152C90O11200C93O11215C102O11259C108O11259C113O11283C118O11284C124O11324C127O11339C132O11324C137O11352,,
code-creation,LazyCompile,10,208767,0x1ae334d5f4e,21,assert node:internal/assert:11:16,0x17a320d8098,~
script-source,16,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x1ae334d5f4e,16,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,209369,0x1ae334d6dfe,5, node:child_process:1:1,0x1ae334d6928,~
script-source,96,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath /* \x2C args\x2C options */) {\x0d\n  validateString(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n  let options = {};\x0d\n  let args = [];\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] != null) {\x0d\n    if (typeof arguments[pos] !== 'object') {\x0d\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\x0d\n    }\x0d\n\x0d\n    options = { ...arguments[pos++] };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\x0d\n  let args = [];\x0d\n  let callback;\x0d\n  let options;\x0d\n\x0d\n  // Parse the optional positional parameters.\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\x0d\n    options = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\x0d\n    callback = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x1ae334d6dfe,96,0,25580,C0O0C4O25580,,
code-creation,Function,10,210767,0x1ae334d785e,748, node:child_process:1:1,0x1ae334d6d78,~
code-source-info,0x1ae334d785e
code-creation,LazyCompile,10,211047,0x1ae334d9e36,82,debuglog node:internal/util/debuglog:71:18,0x882f83c9a0,~
code-source-info,0x1ae334d9e36,40,2302,3390,C0O2302C28O2432C32O2432C34O2878C35O2878C37O2901C41O2901C43O2994C48O3231C58O3252C63O3278C74O3231C79O3373C81O3387,,
code-creation,Eval,10,211887,0x1ae334dcdf6,5, node:internal/child_process:1:1,0x1ae334dc708,~
script-source,97,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    target.emit(event\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x1ae334dcdf6,97,0,31901,C0O0C4O31901,,
code-creation,Function,10,213719,0x1ae334de406,1253, node:internal/child_process:1:1,0x1ae334dcd70,~
code-source-info,0x1ae334de
code-creation,Function,10,213950,0x1ae334deb6e,35,<instance_members_initializer> node:internal/child_process:524:3,0x1ae334ddad0,~
code-source-info,0x1ae334deb6e,97,14177,14236,C3O14188C16O14205C26O14231C34O14236,,
code-creation,Eval,10,215133,0x1ae334e2d1e,5, node:net:1:1,0x1ae334e2540,~
script-source,98,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  let self = handle[owner_symbol];\x0d\n\x0d\n  if (self.constructor.name === 'ReusedHandle') {\x0d\n    self = self.handle;\x0d\n  }\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x1ae334e2d1e,98,0,49543,C0O0C4O49543,,
code-creation,Function,10,218005,0x1ae334e5bee,2513, node:net:1:1,0x1ae334e2c98,~
code-source-info,0x1ae334e5bee,98,0,49543,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33238C1831O33266C1843O33290C1852O33238C1862O33303C1868O33303C1878O37424C1881O37431C1892O37450C1900O38954C1903O38961C1916O38978C1924O43047C1930O43075C1951O43109C1963O43047C1973O43207C1976O43214C1989O43232C1997O44354C2000O44361C2013O44386C2021O45183C2024O45190C2037O45206C2045O46117C2048O46124C2061O46154C2069O46654C2072O46661C2084O46684C2097O46708C2105O47041C2111O47066C2132O47091C2144O47132C2156O47041C2166O47182C2172O47210C2189O47237C2201O47273C2213O47182C2223O47318C2226O47325C2239O47348C2247O47603C2250O47610C2263O47624C2271O47736C2274O47743C2287O47759C2295O47876C2297O47932C2298O47932C2300O47941C2311O47965C2312O47965C2314O47991C2323O48721C2328O49003C2338O49046C2348O49085C2358O49103C2368O49371C2378O49401C2388O49413C2398O49436C2408O49453C2418O49472C2428O49483C2438O49494C2448O49513C2503O49018C2512O49542,,
tick,0x7ff90ccff25f,218374,1,0x7ff760c4b3d0,3,0x7ff761590240,0xb1363bc59c,0xb1363bb88d,0x1ae334de5f1,0xb1363bc5bd,0xb1363bb88d,0x1ae334d7aa2,0xb1363bc5bd,0xb1363bb88d,0x1ae334d5e2a,0x1ae334c1dde,0xb1363bb615
code-creation,Eval,10,218696,0x1ae334eb3de,5, node:internal/net:1:1,0x1ae334eb218,~
script-source,99,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x1ae334eb3de,99,0,1818,C0O0C4O1818,,
code-creation,Function,10,218835,0x1ae334eb7ce,617, node:internal/net:1:1,0x1ae334eb358,~
code-source-info,0x1ae334eb7ce,99,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,219162,0x1ae334ed126,5, node:internal/dtrace:1:1,0x1ae334ecfe0,~
script-source,100,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x1ae334ed126,100,0,589,C0O0C4O589,,
code-creation,Function,10,219235,0x1ae334ed5fe,140, node:internal/dtrace:1:1,0x1ae334ed0a0,~
code-source-info,0x1ae334ed5fe,100,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,219495,0x1ae334ee586,34,protoGetter node:net:718:21,0x1ae334e3160,~
code-source-info,0x1ae334ee586,98,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,220397,0x1ae334f38ee,5, node:dgram:1:1,0x1ae334f3378,~
script-source,101,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n  // Check if the udp handle was connected and set the state accordingly\x0d\n  if (isConnected(self))\x0d\n    state.connectState = CONNECT_STATE_CONNECTED;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    // Check if the udp handle was connected and set the state accordingly\x0d\n    if (isConnected(this))\x0d\n      state.connectState = CONNECT_STATE_CONNECTED;\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\nfunction isConnected(self) {\x0d\n  try {\x0d\n    self.remoteAddress();\x0d\n    return true;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x1ae334f38ee,101,0,28763,C0O0C4O28763,,
code-creation,Function,10,222089,0x1ae334f5856,1507, node:dgram:1:1,0x1ae334f3868,~
code-source-info,0x1ae334f
code-creation,Eval,10,222594,0x1ae334f8d0e,5, node:internal/dgram:1:1,0x1ae334f8b08,~
script-source,102,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x1ae334f8d0e,102,0,1941,C0O0C4O1941,,
code-creation,Function,10,222739,0x1ae334f8fd6,196, node:internal/dgram:1:1,0x1ae334f8c88,~
code-source-info,0x1ae334f8fd6,102,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x1bd53840000,262144
code-creation,Function,11,222974,0x1bd53843060,548,internalBinding node:internal/bootstrap/loaders:164:45,0x308e28f720,^
code-source-info,0x1bd53843060,9,5278,5523,,,
code-creation,Function,11,223004,0x1bd53843300,216,isPathSeparator node:path:52:25,0x882f829168,^
code-source-info,0x1bd53843300,35,1794,1876,,,
code-creation,Function,11,223029,0x1bd53843440,572,getOptionValue node:internal/options:39:24,0xb1363bfa48,^
code-source-info,0x1bd53843440,93,940,1190,,,
code-creation,Function,11,223087,0x1bd538436e0,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x308e28fca0,^
code-source-info,0x1bd538436e0,9,10646,10999,,,
code-creation,Function,11,223119,0x1bd538439e0,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x308e28fbd0,^
code-source-info,0x1bd538439e0,9,9826,10409,,,
code-creation,LazyCompile,10,223283,0x1ae334fbb8e,152,deprecate node:internal/util:96:19,0x308e2aaac8,~
script-source,12,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x1ae334fbb8e,12,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Eval,10,224434,0x1ae334fe17e,5, node:internal/socket_list:1:1,0x1ae334fe028,~
script-source,103,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x1ae334fe17e,103,0,2813,C0O0C4O2813,,
code-creation,Function,10,224610,0x1ae334fe7be,126, node:internal/socket_list:1:1,0x1ae334fe0f8,~
code-source-info,0x1ae334fe7be,103,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
new,MemoryChunk,0x2d56b00000,262144
code-creation,LazyCompile,10,224860,0x1ae334ff336,14,customPromiseExecFunction node:child_process:231:35,0x1ae334d73e0,~
code-source-info,0x1ae334ff336,96,6835,7215,C0O6835C9O6850C13O7212,,
code-creation,LazyCompile,10,224944,0x2d56b030ee,129,_forkChild node:child_process:170:20,0x1ae334d6e80,~
code-source-info,0x2d56b030ee,96,5090,5572,C0O5090C8O5154C19O5163C22O5177C29O5154C35O5188C40O5188C45O5203C50O5203C54O5231C72O5231C77O5231C79O5279C84O5287C97O5287C103O5422C108O5430C121O5430C128O5571,,
code-creation,LazyCompile,10,229718,0x2d56b03a8e,374,setupChannel node:internal/child_process:569:22,0x1ae334dd0a8,~
code-source-info,0x2d56b03a8e
code-creation,LazyCompile,10,229868,0x2d56b0613e,56,Control node:internal/child_process:528:14,0x1ae334dd8d8,~
code-source-info,0x2d56b0613e,97,14254,14314,C3O14271C11O14271C40O14285C48O14299C55O14313,,
code-creation,LazyCompile,10,229915,0x2d56b0625e,21,EventEmitter node:events:84:22,0x308e2b2da0,~
code-source-info,0x2d56b0625e,13,2562,2612,C0O2574C3O2587C8O2592C13O2592C20O2611,,
code-creation,LazyCompile,10,229984,0x2d56b063a6,149,EventEmitter.init node:events:194:29,0x308e2b3aa0,~
code-source-info,0x2d56b063a6,13,5772,6380,C0O5795C6O5832C13O5844C16O5844C21O5870C25O5840C30O5887C32O5902C37O5902C41O5900C45O5927C46O5945C50O5986C60O5979C64O6021C71O6029C80O6057C85O6078C93O6057C98O6132C100O6137C105O6149C108O6162C113O6149C117O6147C123O6322C125O6327C131O6352C138O6362C140O6361C143O6337C148O6379,,
code-creation,Eval,10,230264,0x2d56b06c2e,5, node:internal/child_process/serialization:1:1,0x2d56b06948,~
script-source,104,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x2d56b06c2e,104,0,4335,C0O0C4O4335,,
code-creation,Function,10,230507,0x2d56b07496,369, node:internal/child_process/serialization:1:1,0x2d56b06ba8,~
code-source-info,0x2d56b07496,104,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,230693,0x2d56b07f76,23,initMessageChannel node:internal/child_process/serialization:100:21,0x2d56b06e90,~
code-source-info,0x2d56b07f76,104,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,230787,0x2d56b086ce,19,_getMaxListeners node:events:271:26,0x308e2b3c70,~
code-source-info,0x2d56b086ce,13,8039,8167,C0O8060C6O8094C9O8114C13O8134C14O8150C18O8164,,
code-creation,LazyCompile,10,230825,0x2d56b087c6,5,get node:events:133:16,0x308e2b3890,~
code-source-info,0x2d56b087c6,13,3955,3997,C0O3965C4O3992,,
code-creation,LazyCompile,10,230884,0x2d56b08a26,322,arrayClone node:events:747:20,0x308e2b4538,~
code-source-info,0x2d56b08a26,13,21902,22367,C0O22044C42O22067C50O22078C62O22086C71O22091C72O22105C80O22116C92O22124C104O22132C113O22137C114O22151C122O22162C134O22170C146O22178C158O22186C167O22191C168O22205C176O22216C188O22224C200O22232C212O22240C224O22248C233O22253C234O22267C242O22278C254O22286C266O22294C278O22302C290O22310C302O22318C311O22323C312O22332C317O22339C321O22364,,
code-creation,LazyCompile,10,230955,0x2d56b08cb6,30,onNewListener node:child_process:176:51,0x2d56b02fa8,~
code-source-info,0x2d56b08cb6,96,5327,5416,C0O5341C2O5350C9O5372C14O5390C19O5398C24O5398C29O5415,,
code-creation,LazyCompile,10,231082,0x2d56b09006,455,initializePolicy node:internal/bootstrap/pre_execution:365:26,0xb1363bda38,~
code-source-info,0x2d56b
code-creation,LazyCompile,10,231205,0x2d56b093d6,63,initializeClusterIPC node:internal/bootstrap/pre_execution:356:30,0xb1363bd9e8,~
code-source-info,0x2d56b093d6,92,11386,11634,C0O11394C3O11406C10O11410C18O11425C23O11429C29O11468C35O11468C40O11501C45O11501C49O11592C52O11607C62O11633,,
code-creation,LazyCompile,10,231264,0x2d56b09546,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:460:38,0xb1363bdb78,~
code-source-info,0x2d56b09546,92,15289,15442,C0O15335C6O15335C11O15305C16O15387C21O15416C26O15441,,
code-creation,Eval,10,231501,0x2d56b09e7e,5, node:internal/source_map/source_map_cache:1:1,0x2d56b09b18,~
script-source,105,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b09e7e,105,0,7905,C0O0C4O7905,,
code-creation,Function,10,231982,0x2d56b0a4f6,435, node:internal/source_map/source_map_cache:1:1,0x2d56b09df8,~
code-source-info,0x2d56b0a4f6,105,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,Eval,10,232245,0x2d56b0b536,5, node:internal/util/iterable_weak_map:1:1,0x2d56b0b2e8,~
script-source,106,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b0b536,106,0,2042,C0O0C4O2042,,
code-creation,Function,10,232383,0x2d56b0bc96,196, node:internal/util/iterable_weak_map:1:1,0x2d56b0b4b0,~
code-source-info,0x2d56b0bc96,106,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,232410,0x2d56b0be16,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x2d56b0b7c0,~
code-source-info,0x2d56b0be16,106,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,232691,0x2d56b0ca4e,5, node:internal/modules/cjs/helpers:1:1,0x2d56b0c798,~
script-source,107,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b0ca4e,107,0,6975,C0O0C4O6975,,
code-creation,Function,10,233065,0x2d56b0cfce,536, node:internal/modules/cjs/helpers:1:1,0x2d56b0c9c8,~
code-source-info,0x2d56b0cfce,107,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,233253,0x2d56b0dc0e,27,SafeSet node:internal/per_context/primordials:364:16,0x308e28a168,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x2d56b0dc0e,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
tick,0x7ff761b642ff,234230,0,0x0,3,0x7ff7611bf520,0x2d56b0d19f,0x1bd53843ce3,0x1bd53843965,0x2d56b0a62d,0x1bd53843ce3,0x1bd53843965,0x2d56b0954c,0x1ae334c1df0,0xb1363bb615
code-creation,LazyCompile,10,234265,0x2d56b0ea4e,27,SafeMap node:internal/per_context/primordials:351:16,0x308e289fe0,~
code-source-info,0x2d56b0ea4e,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,234332,0x2d56b0ebc6,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x2d56b0b5b8,~
code-source-info,0x2d56b0ebc6,106,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,234373,0x2d56b0ef4e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x308e28a0a0,~
code-source-info,0x2d56b0ef4e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,234419,0x2d56b0f056,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x308e28a2f0,~
code-source-info,0x2d56b0f056,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,234568,0x2d56b0f7f6,492,initializeDeprecations node:internal/bootstrap/pre_execution:250:32,0xb1363bd908,~
code-source-info,0x2d56b0f7f
code-creation,LazyCompile,10,234696,0x2d56b0fd4e,53,initializeWASI node:internal/bootstrap/pre_execution:414:24,0xb1363bda88,~
code-source-info,0x2d56b0fd4e,92,13535,13746,C0O13568C6O13568C11O13551C16O13635C21O13639C29O13639C35O13655C37O13687C43O13687C47O13680C52O13745,,
code-creation,LazyCompile,10,234757,0x2d56b0ff4e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:421:29,0xb1363bdad8,~
code-source-info,0x2d56b0ff4e,92,13778,14101,C0O13804C6O13804C11O13847C16O13852C20O13872C26O13911C31O13918C36O13918C40O14017C51O14039C56O14075C60O14032C65O14100,,
code-creation,Eval,10,235701,0x2d56b11e96,5, node:internal/modules/cjs/loader:1:1,0x2d56b115b0,~
script-source,108,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {}\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x2d56b11e96,108,0,41471,C0O0C4O41471,,
code-creation,Function,10,237901,0x2d56b13c36,2547, node:internal/modules/cjs/loader:1:1,0x2d56b11e10,~
code-source-info,0x2d56b13c
code-creation,Eval,10,238576,0x2d56b17bc6,5, node:internal/modules/package_json_reader:1:1,0x2d56b17a20,~
script-source,109,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x2d56b17bc6,109,0,1024,C0O0C4O1024,,
code-creation,Function,10,238668,0x2d56b17d16,113, node:internal/modules/package_json_reader:1:1,0x2d56b17b40,~
code-source-info,0x2d56b17d16,109,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,238879,0x2d56b1857e,5, node:internal/process/esm_loader:1:1,0x2d56b18388,~
script-source,110,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2d56b1857e,110,0,2982,C0O0C4O2982,,
code-creation,Function,10,239057,0x2d56b1881e,182, node:internal/process/esm_loader:1:1,0x2d56b184f8,~
code-source-info,0x2d56b1881e,110,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,239429,0x2d56b19886,5, node:internal/modules/esm/loader:1:1,0x2d56b19488,~
script-source,111,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }) => {\x0d\n          return this.import(specifier\x2C url);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  async getModuleJob(specifier\x2C parentURL) {\x0d\n    const { format\x2C url } = await this.resolve(specifier\x2C parentURL);\x0d\n    let job = this.moduleMap.get(url);\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') this.moduleMap.set(url\x2C job = job());\x0d\n\x0d\n    if (job !== undefined) return job;\x0d\n\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(url\x2C { format });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module\x0d\n   * @param {string} [parentURL] Path of the parent importing the module\x0d\n   * @returns {object | object[]} A list of module export(s)\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {Object} context Metadata about the module\x0d\n   * @returns {Object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const preload = this.#globalPreloaders[i]();\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\n      FunctionPrototypeCall(preloadInit\x2C globalThis\x2C (builtinName) => {\x0d\n        if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n          return require(builtinName);\x0d\n        }\x0d\n        throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   * be resolved\x0d\n   * @param {String} parentURL The URL path of the module's parent\x0d\n   * @returns {{ url: String }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n    if (typeof url !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x2d56b19886,111,0,12388,C0O0C4O12388,,
code-creation,Function,10,240196,0x2d56b19fce,530, node:internal/modules/esm/loader:1:1,0x2d56b19800,~
code-source-info,0x2d56b19fce,111,0,12388,C0O0C104O82C110O82C114O136C120O146C126O163C132O186C138O209C144O235C150O261C156O278C161O303C167O318C173O342C179O364C185O380C191O606C197O606C202O632C207O424C213O449C219O475C225O508C231O546C237O575C243O682C249O682C254O649C260O664C266O764C272O764C277O719C283O740C289O815C295O815C299O815C301O878C307O878C311O878C313O980C319O980C324O936C330O955C336O1046C342O1046C347O1030C353O1109C359O1109C364O1093C370O1186C376O1186C381O1167C510O12335C517O12304C522O12356C524O12374C529O12387,,
code-creation,Function,10,240264,0x2d56b1a3c6,139,<instance_members_initializer> node:internal/modules/esm/loader:59:3,0x2d56b19b88,~
code-source-info,0x2d56b1a3c6,111,1669,2500,C3O1689C17O1851C28O1858C45O2040C56O2047C73O2146C80O2146C94O2269C104O2361C111O2361C125O2489C138O2500,,
code-creation,Eval,10,240448,0x2d56b1b78e,5, node:internal/modules/esm/module_map:1:1,0x2d56b1b5c0,~
script-source,112,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst {\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.get(url);\x0d\n  }\x0d\n  set(url\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} in ModuleMap`);\x0d\n    return super.set(url\x2C job);\x0d\n  }\x0d\n  has(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.has(url);\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x2d56b1b78e,112,0,989,C0O0C4O989,,
code-creation,Function,10,240526,0x2d56b1bbae,149, node:internal/modules/esm/module_map:1:1,0x2d56b1b708,~
code-source-info,0x2d56b1bbae,112,0,989,C0O0C17O35C20O35C24O35C26O91C31O131C34O131C39O164C52O165C58O131C60O245C63O245C68O271C73O220C79O307C82O307C87O288C97O420C141O960C143O975C148O988,,
code-creation,Eval,10,240796,0x2d56b1c5d6,5, node:internal/modules/esm/module_job:1:1,0x2d56b1c2f0,~
script-source,113,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        const { format } = await this.loader.load(childFileURL);\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x2d56b1c5d6,113,0,7906,C0O0C4O7906,,
code-creation,Function,10,241194,0x2d56b1cac6,334, node:internal/modules/esm/module_job:1:1,0x2d56b1c550,~
code-source-info,0x2d56b1cac6,113,0,7906,C0O0C85O28C91O51C97O73C103O96C109O119C114O141C119O166C125O181C130O200C136O226C142O243C148O267C154O289C160O301C166O329C172O354C178O381C184O406C190O477C196O477C201O462C207O543C213O543C218O520C224O608C230O608C235O581C241O673C247O673C251O673C253O726C256O726C258O760C260O760C262O803C263O803C265O835C269O835C271O960C275O960C314O7858C321O7827C326O7877C328O7892C333O7905,,
code-creation,Eval,10,242276,0x2d56b1f81e,5, node:internal/modules/esm/resolve:1:1,0x2d56b1f128,~
script-source,114,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormat(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {}\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern)\x0d\n    return new URL(RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C\x0d\n                                                () => subpath));\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolved === undefined)\x0d\n        continue;\x0d\n      if (resolved === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolved;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolved === undefined)\x0d\n          continue;\x0d\n        return resolved;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                          bestMatchSubpath\x2C bestMatch\x2C base\x2C\x0d\n                                          pattern\x2C false\x2C conditions);\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    if (!pattern)\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved !== null)\x0d\n          return { resolved\x2C exact: true };\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                bestMatchSubpath\x2C bestMatch\x2C\x0d\n                                                base\x2C pattern\x2C true\x2C\x0d\n                                                conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // separators.\x0d\n  for (let i = 0; i < packageName.length; i++) {\x0d\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\x0d\n      validPackageName = false;\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    if (packageSubpath === '.')\x0d\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  let parsed;\x0d\n  try {\x0d\n    parsed = new URL(specifier);\x0d\n    if (parsed.protocol === 'data:') {\x0d\n      return {\x0d\n        url: specifier\x0d\n      };\x0d\n    }\x0d\n  } catch {}\x0d\n  if (parsed && parsed.protocol === 'node:')\x0d\n    return { url: specifier };\x0d\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n    return {\x0d\n      url: 'node:' + specifier\x0d\n    };\x0d\n  }\x0d\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\x0d\n    // This is gonna blow up\x2C we want the error\x0d\n    new URL(specifier\x2C parentURL);\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\x0d\n    const urlPath = fileURLToPath(url);\x0d\n    const real = realpathSync(urlPath\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const old = url;\x0d\n    url = pathToFileURL(\x0d\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\x0d\n    url.search = old.search;\x0d\n    url.hash = old.hash;\x0d\n  }\x0d\n\x0d\n  return { url: `${url}` };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0x2d56b1f81e,114,0,37562,C0O0C4O37562,,
code-creation,Function,10,244254,0x2d56b207be,1086, node:internal/modules/esm/resolve:1:1,0x2d56b1f798,~
code-source-info,0x2d56b207be
code-creation,Eval,10,244817,0x2d56b239a6,5, node:internal/modules/esm/get_format:1:1,0x2d56b23780,~
script-source,115,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null];\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:'(parsed\x2C url) {\x0d\n    const ext = extname(parsed.pathname);\x0d\n    let format;\x0d\n\x0d\n    if (ext === '.js') {\x0d\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\x0d\n    } else {\x0d\n      format = extensionFormatMap[ext];\x0d\n    }\x0d\n    if (!format) {\x0d\n      if (experimentalSpecifierResolution === 'node') {\x0d\n        process.emitWarning(\x0d\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n          'ExperimentalWarning');\x0d\n        format = legacyExtensionFormatMap[ext];\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return format || null;\x0d\n  }\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C url) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b239a6,115,0,2723,C0O0C4O2723,,
code-creation,Function,10,244992,0x2d56b23dd6,314, node:internal/modules/esm/get_format:1:1,0x2d56b23920,~
code-source-info,0x2d56b23dd6,115,0,2723,C0O0C53O26C58O43C63O60C69O94C75O154C78O154C83O142C89O199C92O199C97O180C102O263C105O263C109O263C111O354C114O354C118O354C120O442C123O442C127O442C129O517C132O517C137O498C143O590C146O590C151O567C157O572C163O655C166O655C171O681C176O624C182O719C186O719C188O846C192O846C194O990C198O1022C207O1086C213O1050C217O1099C221O1131C230O1195C236O1159C240O1233C242O1246C252O1271C260O1701C268O2361C276O1233C281O1233C283O2626C290O2648C296O2669C302O2692C308O2641C313O2722,,
code-creation,Eval,10,245206,0x2d56b24626,5, node:internal/modules/esm/load:1:1,0x2d56b244b0,~
script-source,116,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { translators } = require('internal/modules/esm/translators');\x0d\n\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (!translators.has(format)) format = defaultGetFormat(url);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b24626,116,0,675,C0O0C4O675,,
code-creation,Function,10,245271,0x2d56b2476e,80, node:internal/modules/esm/load:1:1,0x2d56b245a0,~
code-source-info,0x2d56b2476e,116,0,675,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O189C50O189C55O173C61O635C68O657C74O650C79O674,,
code-creation,Eval,10,245421,0x2d56b24cd6,5, node:internal/modules/esm/get_source:1:1,0x2d56b24b00,~
script-source,117,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x2d56b24cd6,117,0,1394,C0O0C4O1394,,
code-creation,Function,10,245518,0x2d56b24e46,169, node:internal/modules/esm/get_source:1:1,0x2d56b24c50,~
code-source-info,0x2d56b24e46,117,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,246345,0x2d56b2618e,5, node:internal/fs/promises:1:1,0x2d56b259f0,~
script-source,118,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = buffer.byteLength;\x0d\n    position = bufferOrOptions.position || null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b2618e,118,0,23714,C0O0C4O23714,,
code-creation,Function,10,247654,0x2d56b288c6,1659, node:internal/fs/promises:1:1,0x2d56b26108,~
code-source-info,0x2d56b288c
code-creation,Function,10,247890,0x2d56b29276,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x2d56b27768,~
code-source-info,0x2d56b29276,118,4390,5219,C0O4390C12O4398C26O5219,,
code-creation,Eval,10,248326,0x2d56b2bd16,5, node:internal/fs/rimraf:1:1,0x2d56b2b9b0,~
script-source,119,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2d56b2bd16,119,0,7392,C0O0C4O7392,,
code-creation,Function,10,248789,0x2d56b2c316,409, node:internal/fs/rimraf:1:1,0x2d56b2bc90,~
code-source-info,0x2d56b2c316,119,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,249068,0x2d56b2d1ae,188,from node:buffer:295:28,0x17a320e59e0,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2d56b2d1ae,18,8700,9683,C3O8739C9O8775C12O8782C17O8818C18O8824C28O8880C33O8884C39O8916C51O8923C56O8972C57O9002C63O9019C68O9019C73O9035C78O9075C95O9168C104O9175C109O9215C110O9240C113O9240C118O9264C120O9278C122O9287C123O9295C125O9312C127O9311C134O9374C136O9380C138O9379C145O9398C151O9417C155O9463C158O9470C163O9510C164O9537C182O9543C187O9537,,
tick,0x7ff761b7098b,251209,0,0x0,3,0x7ff7611bf520,0x2d56b2c489,0x1bd53843ce3,0x1bd53843965,0x2d56b28b8b,0x1bd53843ce3,0x1bd53843965,0x2d56b24eaa,0x1bd53843ce3,0x1bd53843965,0x2d56b24792,0x1bd53843ce3,0x1bd53843965,0x2d56b1a124,0x1bd53843ce3,0x1bd53843965,0x2d56b1886c,0x1bd53843ce3,0x1bd53843965,0x2d56b140e1,0x1bd53843ce3,0x1bd53843965,0x2d56b0ff54,0x1ae334c1e02,0xb1363bb615
code-creation,LazyCompile,10,251265,0x2d56b2fb86,110,fromString node:buffer:431:20,0x17a320e5dc8,~
code-source-info,0x2d56b2fb86,18,12887,13336,C0O12915C2O12923C8O12968C14O12975C19O13000C25O13007C30O13021C35O13028C40O13045C41O13051C46O13069C51O13080C56O13119C59O13125C64O13156C66O13186C73O13192C78O13186C79O13244C85O13251C90O13265C95O13272C100O13289C101O13298C104O13305C109O13333,,
code-creation,LazyCompile,10,251364,0x2d56b2fd3e,177,fromStringFast node:buffer:412:24,0x17a320e5d28,~
code-source-info,0x2d56b2fd3e,18,12324,12864,C0O12362C5O12362C11O12387C14O12409C18O12418C21O12398C26O12431C31O12467C36O12438C41O12480C42O12486C44O12500C49O12511C51O12509C54O12497C59O12529C62O12529C65O12554C72O12569C77O12580C85O12554C91O12623C110O12623C116O12655C118O12666C123O12752C130O12771C135O12782C143O12756C149O12811C156O12825C162O12822C168O12836C171O12836C174O12852C176O12861,,
code-creation,LazyCompile,10,251441,0x2d56b2ff2e,36,FastBuffer node:internal/buffer:958:14,0x17a320f2d30,~
code-source-info,0x2d56b2ff2e,19,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,251485,0x2d56b3002e,23,write node:buffer:592:12,0x17a320e6138,~
code-source-info,0x2d56b3002e,18,17116,17180,C0O17150C17O17150C22O17180,,
code-creation,LazyCompile,10,251533,0x2d56b3011e,42,alignPool node:buffer:158:19,0x17a320e5760,~
code-source-info,0x2d56b3011e,18,4155,4265,C0O4191C4O4206C9O4220C19O4231C25O4244C34O4254C41O4264,,
code-creation,LazyCompile,10,251671,0x2d56b304de,251,promisify node:internal/util:324:19,0x308e2ab240,~
code-source-info,0x2d56b304de,12,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,251870,0x2d56b3096e,65,EventEmitterMixin node:internal/event_target:827:27,0x882f837f38,~
script-source,38,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n  }\x0d\n\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b3096e,38,24249,24683,C0O24302C23O24493C30O24525C33O24538C38O24493C43O24553C47O24587C52O24628C57O24587C62O24655C64O24680,,
code-creation,Eval,10,253754,0x2d56b3336e,5, node:internal/modules/esm/translators:1:1,0x2d56b32eb8,~
script-source,120,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n    getOptionValue('--experimental-import-meta-resolve');\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url);\x0d\n}\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C { url }) {\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {}\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {}\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing Web Assembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2d56b3336e,120,0,11592,C0O0C4O11592,,
code-creation,Function,10,254350,0x2d56b33c0e,773, node:internal/modules/esm/translators:1:1,0x2d56b332e8,~
code-source-info,0x2d56b33c0e
code-creation,Eval,10,254655,0x2d56b35226,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2d56b35050,~
script-source,121,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2d56b35226,121,0,1828,C0O0C4O1828,,
code-creation,Function,10,254857,0x2d56b3544e,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2d56b351a0,~
code-source-info,0x2d56b3544e,121,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,255352,0x2d56b36356,5, node:internal/vm/module:1:1,0x2d56b35e10,~
script-source,122,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b36356,122,0,12768,C0O0C4O12768,,
code-creation,Function,10,256092,0x2d56b375b6,872, node:internal/vm/module:1:1,0x2d56b362d0,~
code-source-info,0x2d56b375b
code-creation,Function,10,256210,0x2d56b37af6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x2d56b36940,~
code-source-info,0x2d56b37af6,122,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,256444,0x2d56b38eee,16,ESMLoader node:internal/modules/esm/loader:52:1,0x2d56b198b8,~
code-source-info,0x2d56b38eee,111,1443,1443,C0O1443C15O1443,,
code-creation,LazyCompile,10,256507,0x2d56b39e86,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x2d56b1b810,~
code-source-info,0x2d56b39e86,112,444,461,C3O450C7O456C11O450C26O460,,
code-creation,LazyCompile,10,256566,0x2d56b3a0e6,13,desc.value node:internal/per_context/primordials:325:32,0x308e289f38,~
code-source-info,0x2d56b3a0e6,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,256606,0x2d56b3a1ee,13,SafeIterator node:internal/per_context/primordials:270:16,0x308e289988,~
code-source-info,0x2d56b3a1ee,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,256648,0x2d56b3a326,13,next node:internal/per_context/primordials:273:9,0x308e289a50,~
code-source-info,0x2d56b3a326,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,256842,0x2d56b3a99e,28,getEmbedderOptions node:internal/options:32:28,0xb1363bf9f8,~
code-source-info,0x2d56b3a99e,93,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,257012,0x2d56b3ac46,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0x2d56b13118,~
code-source-info,0x2d56b3ac
code-creation,Function,11,257191,0x1bd53843f40,3076,normalizeString node:path:66:25,0x882f829630,^
code-source-info,0x1bd53843f40,35,2226,4212,,,
code-creation,Function,11,257233,0x1bd53844bc0,1344,deprecate node:internal/util:96:19,0x308e2aaac8,^
code-source-info,0x1bd53844bc0,12,2503,3720,,,
code-creation,Function,11,257259,0x1bd53845160,432,getCLIOptionsFromBinding node:internal/options:18:34,0xb1363bf958,^
code-source-info,0x1bd53845160,93,514,620,,,
code-creation,Function,11,257279,0x1bd53845380,104,next node:internal/per_context/primordials:273:9,0x308e289a50,^
code-source-info,0x1bd53845380,6,8126,8173,,,
code-creation,Function,11,257303,0x1bd53845460,252,SafeMap node:internal/per_context/primordials:351:16,0x308e289fe0,^
code-source-info,0x1bd53845460,6,10550,10567,,,
code-creation,Eval,10,257496,0x2d56b3e01e,5, node:internal/modules/run_main:1:1,0x2d56b3de18,~
script-source,123,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href :\x0d\n      mainPath;\x0d\n    return esmLoader.import(main);\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  // Handle a Promise from running code that potentially does Top-Level Await.\x0d\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\x0d\n  // value if the main code never finishes running.\x0d\n  function handler() {\x0d\n    if (process.exitCode === undefined)\x0d\n      process.exitCode = 13;\x0d\n  }\x0d\n  process.on('exit'\x2C handler);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handler);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2d56b3e01e,123,0,2783,C0O0C4O2783,,
code-creation,Function,10,257660,0x2d56b3e316,149, node:internal/modules/run_main:1:1,0x2d56b3df98,~
code-source-info,0x2d56b3e316,123,0,2783,C0O0C60O28C66O90C72O90C77O139C83O147C89O159C95O219C101O219C106O200C112O262C118O262C122O262C124O2711C131O2733C137O2759C143O2726C148O2782,,
code-creation,LazyCompile,10,257859,0x2d56b3e8fe,163,initializeESMLoader node:internal/bootstrap/pre_execution:431:29,0xb1363bdb28,~
code-source-info,0x2d56b3e8fe,92,14133,15248,C0O14217C6O14217C13O14266C16O14262C21O14260C25O14286C30O14290C34O14310C40O14339C41O14346C42O14451C48O14451C53O14365C58O14406C63O14498C69O14498C74O14702C79O14660C83O14773C88O14734C92O14943C100O14947C106O15066C112O15066C117O15014C122O15022C127O15040C132O15113C138O15113C143O15133C145O15143C149O15158C151O15178C155O15203C157O15222C162O15247,,
code-creation,LazyCompile,10,257944,0x2d56b3eb16,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x2d56b12608,~
code-source-info,0x2d56b3eb16,108,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,257992,0x2d56b3ebfe,53,loadPreloadModules node:internal/bootstrap/pre_execution:474:28,0xb1363bdc18,~
code-source-info,0x2d56b3ebfe,92,15740,16071,C0O15829C8O15829C13O15861C15O15898C21O15905C26O15986C32O15986C37O15986C42O15951C47O16031C52O16070,,
code-creation,LazyCompile,10,258044,0x2d56b3edee,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:466:36,0xb1363bdbc8,~
code-source-info,0x2d56b3edee,92,15481,15709,C0O15489C8O15493C14O15539C17O15547C28O15547C34O15661C40O15661C45O15698C49O15708,,
code-creation,LazyCompile,10,258117,0x2d56b3ef16,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x2d56b3e1b8,~
code-source-info,0x2d56b3ef16,123,2393,2707,C7O2409C14O2413C22O2444C25O2444C30O2491C33O2491C38O2528C40O2553C45O2564C50O2553C56O2668C61O2675C73O2675C79O2706,,
code-creation,LazyCompile,10,258178,0x2d56b3f366,68,resolveMainPath node:internal/modules/run_main:11:25,0x2d56b3e050,~
code-source-info,0x2d56b3f366,123,306,733,C0O482C5O489C12O499C15O504C20O504C30O489C36O535C38O555C39O562C40O597C48O597C53O644C55O676C60O687C65O714C67O730,,
code-creation,LazyCompile,10,258328,0x2d56b3f566,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x2d56b12928,~
code-source-info,0x2d56b3f
code-creation,LazyCompile,10,258472,0x2d56b3f916,109,isAbsolute node:path:402:13,0x882f8297a8,~
code-source-info,0x2d56b3f916,35,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,258621,0x2d56b3fbd6,85,stat node:internal/modules/cjs/loader:151:14,0x2d56b11ec8,~
code-source-info,0x2d56b3fbd6,108,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,258764,0x2d56b3fde6,232,toNamespacedPath node:path:618:19,0x882f8298d0,~
code-source-info,0x2d56b3fde6,35,20087,21202,C0O20153C6O20190C12O20197C17O20211C19O20223C20O20252C25O20258C30O20258C36O20297C43O20304C48O20317C50O20329C51O20337C58O20341C66O20388C68O20384C73O20446C81O20450C89O20497C91O20493C96O20542C104O20542C110O20595C112O20608C114O20604C121O20639C123O20635C128O20739C133O20761C139O20761C148O20801C151O20834C156O20866C161O20866C167O20846C175O20920C181O20920C189O20967C191O20963C198O20988C204O20988C212O21035C214O21031C219O21138C224O21155C228O21170C229O21185C231O21197,,
code-creation,LazyCompile,10,259046,0x1ae334ff3ee,42,toRealPath node:internal/modules/cjs/loader:393:20,0x2d56b12198,~
code-source-info,0x1ae334ff3ee,108,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
new,MemoryChunk,0xeb66940000,262144
code-creation,LazyCompile,10,259457,0x1ae334ff7ee,1036,realpathSync node:fs:2408:22,0x31fadee9ce0,~
script-source,77,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void | never}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch { }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x1ae334ff7ee
code-creation,LazyCompile,10,264212,0xeb66947186,123,getOptions node:internal/fs/utils:314:20,0x31fadef2438,~
script-source,78,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0xeb66947186,78,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
tick,0x7ff7615a0425,265760,0,0x0,2,0x7ff7611bf520,0xeb669471e2,0x1ae334ff7fa,0x1ae334ff411,0x2d56b3f691,0x2d56b3f384,0x2d56b3ef2f,0xb1363bb639
code-creation,LazyCompile,10,265806,0xeb669490de,48,assertEncoding node:internal/fs/utils:151:24,0x31fadef1e40,~
code-source-info,0xeb669490de,78,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,265947,0xeb669491f6,20,toPathIfFileURL node:internal/url:1496:25,0x882f81c170,~
script-source,33,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0xeb669491f6,33,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
code-creation,LazyCompile,10,268874,0xeb6694c326,17,isURLInstance node:internal/url:1492:23,0x882f81c120,~
code-source-info,0xeb6694c326,33,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,268956,0xeb6694c486,81, node:internal/fs/utils:668:38,0x31fadef2e60,~
code-source-info,0xeb6694c486,78,18808,19088,C14O18842C22O18875C25O18875C31O18902C36O18933C49O18908C54O18902C55O19001C68O19001C74O19040C76O19070C78O19070C80O19087,,
code-creation,LazyCompile,10,269031,0xeb6694c696,110, node:internal/fs/utils:357:35,0x31fadef24d8,~
code-source-info,0xeb6694c696,78,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,269091,0xeb6694c80e,16,isUint8Array node:internal/util/types:13:22,0x17a320d7658,~
script-source,15,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xeb6694c80e,15,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,269297,0xeb6694ccb6,23,splitRoot node:fs:2358:33,0x31fadee9b98,~
code-source-info,0xeb6694ccb6,77,65046,65112,C0O65059C9O65086C12O65066C19O65103C22O65107,,
code-creation,LazyCompile,10,269525,0xeb6694ce9e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x31fadef2488,~
code-source-info,0xeb6694ce9e,78,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,269606,0xeb6694d016,53,nextPart node:fs:2384:31,0x31fadee9c90,~
code-source-info,0xeb6694d016,77,65803,66054,C0O65830C4O65826C9O65863C14O65863C20O65947C22O65958C24O65954C31O65988C33O65984C38O66017C40O66026C41O65840C47O65817C50O66039C52O66049,,
code-creation,LazyCompile,10,269798,0xeb6694d1ee,34,isFileType node:fs:205:20,0x31fadee7900,~
code-source-info,0xeb6694d1ee,77,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,LazyCompile,10,270172,0xeb6694d3ce,72,encodeRealpathResult node:fs:2371:30,0x31fadee9c40,~
code-source-info,0xeb6694d3ce,77,65392,65658,C0O65415C4O65440C10O65460C17O65469C22O65486C24O65500C25O65521C30O65528C35O65528C41O65557C48O65566C53O65587C55O65603C56O65628C61O65645C66O65628C71O65655,,
code-creation,LazyCompile,10,270271,0xeb6694d57e,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0x2d56b3e0a0,~
code-source-info,0xeb6694d57e,123,764,1339,C0O799C8O799C13O843C15O864C16O876C17O921C25O921C30O979C32O1011C37O1028C38O1040C39O1090C45O1106C51O1106C58O1154C59O1166C60O1170C66O1187C72O1187C79O1235C80O1248C81O1264C86O1264C91O1295C93O1313C98O1318C105O1323C108O1336,,
code-creation,LazyCompile,10,270362,0xeb6694d79e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x2d56b120a8,~
code-source-info,0xeb6694d79e,108,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,270470,0xeb6694dafe,234,readPackage node:internal/modules/cjs/loader:290:21,0x2d56b12058,~
code-source-info,0xeb6694dafe,108,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,270599,0xeb6694de06,199,read node:internal/modules/package_json_reader:16:14,0x2d56b17bf8,~
code-source-info,0xeb6694de06,109,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,Function,11,270806,0x1bd538455c0,6232,resolve node:path:158:10,0x882f8296e8,^
code-source-info,0x1bd538455c0,35,4875,9786,,,
code-creation,Function,11,270842,0x1bd53846e80,412,isWindowsDeviceRoot node:path:60:29,0x882f8295e0,^
code-source-info,0x1bd53846e80,35,1991,2136,,,
code-creation,Function,11,270866,0x1bd53847080,272,validateString node:internal/validators:117:24,0x17a320da8e0,^
code-source-info,0x1bd53847080,17,3514,3626,,,
code-creation,Function,11,270892,0x1bd53847200,544,nextPart node:fs:2384:31,0x31fadee9c90,^
code-source-info,0x1bd53847200,77,65803,66054,,,
code-creation,LazyCompile,10,271258,0xeb6694eff6,70,runMainESM node:internal/modules/run_main:43:20,0x2d56b3e0f0,~
code-source-info,0xeb6694eff6,123,1362,1687,C0O1362C12O1398C20O1398C25O1386C30O1467C38O1467C43O1449C49O1497C54O1515C59O1515C64O1497C69O1686,,
code-creation,LazyCompile,10,271344,0xeb6694f236,222,loadESM node:internal/process/esm_loader:85:41,0x2d56b186e0,~
code-source-info,0xeb6694f236,110,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,271437,0xeb6694f856,284,initializeLoader node:internal/process/esm_loader:50:32,0x2d56b185b0,~
code-source-info,0xeb6694f856,110,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,271561,0xeb6694fb96,170,handleMainPromise node:internal/modules/run_main:55:33,0x2d56b3e140,~
code-source-info,0xeb6694fb96,123,1723,2172,C10O1723C23O2050C26O2058C34O2058C43O2093C53O2100C90O2135C93O2143C101O2143C145O2171,,
code-creation,LazyCompile,10,271637,0xeb6694fd76,55, node:internal/modules/run_main:47:29,0xeb6694ef30,~
code-source-info,0xeb6694fd76,123,1523,1681,C0O1558C7O1563C15O1563C24O1593C30O1593C35O1616C44O1663C49O1669C54O1676,,
code-creation,LazyCompile,10,271739,0xeb6694ffce,283,pathToFileURL node:internal/url:1455:23,0x882f81c0b0,~
code-source-info,0xeb6694ffce
code-creation,LazyCompile,10,271850,0xeb6695029e,117,URL node:internal/url:620:14,0x882f81aec8,~
code-source-info,0xeb6695029e,33,17608,17965,C13O17676C17O17705C19O17724C23O17757C30O17772C40O17786C42O17785C46O17808C50O17813C57O17828C60O17824C65O17822C69O17847C85O17900C93O17900C110O17847C116O17964,,
code-creation,LazyCompile,10,271909,0xeb6695046e,51,URLContext node:internal/url:160:14,0x882f81a650,~
code-source-info,0xeb6695046e,33,3859,4081,C0O3869C1O3880C5O3890C7O3902C11O3914C13O3928C17O3939C19O3953C23O3964C24O3974C28O3987C29O3997C33O4010C35O4020C39O4031C40O4042C44O4055C45O4069C50O4080,,
code-creation,LazyCompile,10,272018,0xeb669506b6,190,onParseComplete node:internal/url:532:25,0x882f81abf8,~
code-source-info,0xeb669506b6,33,14726,15412,C0O14842C2O14847C4O14846C8O14860C10O14870C14O14882C16O14893C20O14908C22O14932C24O14930C29O14956C43O14921C47O14982C49O15006C51O15004C56O15030C70O14995C74O15056C76O15065C80O15076C82O15096C84O15094C89O15116C101O15124C103O15085C107O15138C109O15148C113O15160C115O15173C119O15188C121O15197C125O15208C127O15218C129O15217C134O15272C136O15277C141O15297C144O15293C149O15291C153O15321C155O15326C157O15325C163O15340C168O15349C172O15365C177O15387C179O15386C183O15365C189O15411,,
code-creation,LazyCompile,10,272215,0xeb66950b3e,889,URLSearchParams node:internal/url:182:14,0x882f81a6f0,~
code-source-info,0xeb66950b3e
code-creation,LazyCompile,10,272363,0xeb6695111e,35,initSearchParams node:internal/url:1016:26,0x882f81bc10,~
code-source-info,0xeb6695111e,33,28064,28185,C0O28081C4O28099C6O28103C11O28117C15O28128C16O28135C17O28144C19O28148C25O28164C29O28162C34O28184,,
code-creation,LazyCompile,10,272444,0xeb669512ce,199,encodePathChars node:internal/url:1440:25,0x882f81c060,~
code-source-info,0xeb669512ce,33,40808,41513,C0O40824C8O40828C15O40873C22O40917C31O40884C38O40999C46O41017C52O41017C59O41063C66O41107C75O41074C82O41134C90O41138C97O41184C104O41228C113O41195C120O41253C128O41257C135O41303C142O41347C151O41314C158O41379C166O41383C173O41429C180O41473C189O41440C196O41494C198O41510,,
code-creation,LazyCompile,10,272547,0xeb669514fe,70,set pathname node:internal/url:884:15,0x882f81b800,~
code-source-info,0xeb669514fe,33,24508,24717,C0O24557C5O24580C9O24589C11O24588C16O24611C17O24618C18O24624C29O24636C38O24659C40O24658C49O24700C54O24700C63O24624C69O24716,,
code-creation,LazyCompile,10,272596,0xeb6695164e,31, node:internal/url:636:21,0x882f81afa0,~
code-source-info,0xeb6695164e,33,18078,18155,C0O18088C4O18101C6O18100C10O18110C19O18118C21O18116C26O18144C30O18150,,
code-creation,LazyCompile,10,272740,0xeb6695177e,108,onParsePathComplete node:internal/url:591:29,0x882f81add8,~
code-source-info,0xeb6695177e,33,16744,17226,C0O16864C2O16869C4O16868C8O16882C10O16895C12O16893C17O16915C22O16929C24O16938C28O16951C35O16964C40O16961C46O17001C48O17010C52O17021C59O17035C61O17034C66O17031C70O17117C72O17130C74O17128C79O17150C84O17164C86O17173C90O17186C97O17199C102O17196C107O17225,,
code-creation,LazyCompile,10,272808,0xeb6695191e,18,get href node:internal/url:734:11,0x882f81b130,~
code-source-info,0xeb6695191e,33,20841,20881,C0O20851C4O20863C6O20862C12O20871C17O20876,,
code-creation,LazyCompile,10,272915,0xeb66951bee,393, node:internal/url:682:12,0x882f81b090,~
code-source-info,0xeb66951bee
code-creation,LazyCompile,10,273032,0xeb66951f9e,99, node:internal/validators:153:3,0x17a320daa90,~
code-source-info,0xeb66951f9e,17,4517,5088,C0O4576C4O4617C9O4653C14O4692C21O4728C26O4765C33O4801C38O4816C46O4864C50O4878C53O4878C67O4955C75O5022C91O5028C96O5022C98O5087,,
code-creation,LazyCompile,10,273146,0xeb66952286,300,import node:internal/modules/esm/loader:268:15,0x2d56b19a48,~
code-source-info,0xeb66952286,111,7366,7900,C10O7366C18O7412C25O7412C30O7443C32O7456C41O7470C50O7515C55O7541C64O7541C70O7579C81O7756C90O7594C98O7584C100O7584C116O7622C123O7645C128O7622C135O7670C146O7671C152O7705C162O7706C167O7615C178O7566C193O7784C204O7805C209O7801C215O7790C227O7784C253O7838C262O7891C275O7895,,
code-creation,LazyCompile,10,273266,0xeb6695265e,261,getModuleJob node:internal/modules/esm/loader:221:21,0x2d56b199f8,~
code-source-info,0xeb6695265e,111,5888,6860,C4O5888C30O5942C33O5953C38O5953C52O5942C75O5926C81O5934C86O5999C89O6004C94O6014C99O6014C105O6090C109O6121C112O6126C117O6136C122O6151C126O6136C132O6166C136O6189C148O6200C149O6231C154O6583C163O6626C169O6626C174O6673C199O6679C205O6807C208O6812C213O6822C218O6822C224O6844C236O6855,,
code-creation,LazyCompile,10,273382,0xeb66952a6e,348,resolve node:internal/modules/esm/loader:402:16,0x2d56b19b38,~
code-source-info,0xeb66952a6e,111,10961,12297,C10O10961C18O11014C22O11046C34O11117C37O11117C43O11149C63O11155C68O11149C69O11279C76O11330C78O11335C83O11345C87O11374C89O11379C93O11390C100O11397C111O11442C117O11452C121O11504C128O11541C134O11562C144O11487C157O11481C183O11622C189O11667C207O11673C212O11667C213O11802C218O11810C223O11837C234O11917C255O11923C260O11917C261O12066C267O12104C288O12110C293O12104C294O12249C301O12265C307O12280C323O12292,,
code-creation,LazyCompile,10,273693,0xeb6695306e,885,defaultResolve node:internal/modules/esm/resolve:981:24,0x2d56b20200,~
code-source-info,0xeb6695306e
code-creation,LazyCompile,10,273886,0xeb669558ce,15,get protocol node:internal/url:769:15,0x882f81b270,~
code-source-info,0xeb669558ce,33,21714,21757,C0O21724C4O21736C6O21735C10O21745C14O21752,,
code-creation,LazyCompile,10,273933,0xeb669559ce,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x308e28fa00,~
code-source-info,0xeb669559ce,9,7592,7691,C0O7616C5O7629C10O7633C15O7633C21O7647C23O7665C27O7686,,
code-creation,LazyCompile,10,274021,0xeb66955b26,64,getConditionsSet node:internal/modules/esm/resolve:164:26,0x2d56b1f940,~
code-source-info,0xeb66955b26,114,5332,5668,C0O5350C6O5397C8O5393C13O5424C18O5429C24O5464C40O5470C45O5464C46O5595C53O5602C58O5626C59O5635C63O5665,,
code-creation,LazyCompile,10,274090,0xeb66955c86,116,moduleResolve node:internal/modules/esm/resolve:917:23,0x2d56b20160,~
code-source-info,0xeb66955c86,114,31666,32231,C0O31807C2O31820C5O31824C11O31883C24O31894C32O31930C33O31943C39O31947C44O31963C56O31979C62O31966C72O32062C79O32073C88O32071C89O32115C101O32126C107O32186C110O32193C115O32228,,
code-creation,LazyCompile,10,274145,0xeb66955e0e,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:905:49,0x2d56b20110,~
code-source-info,0xeb66955e0e,114,31363,31502,C0O31380C2O31394C7O31402C8O31415C9O31419C10O31432C16O31436C21O31445C22O31457C23O31461C26O31468C30O31499,,
code-creation,LazyCompile,10,274197,0xeb66955f26,81,isRelativeSpecifier node:internal/modules/esm/resolve:895:29,0x2d56b200c0,~
code-source-info,0xeb66955f26,114,31060,31311,C0O31077C1O31090C7O31094C12O31124C19O31131C26O31149C32O31153C37O31162C38O31174C39O31180C41O31193C47O31197C52O31229C59O31236C66O31254C72O31258C77O31267C78O31279C79O31295C80O31308,,
code-creation,LazyCompile,10,274315,0xeb66956156,341,finalizeResolution node:internal/modules/esm/resolve:389:28,0x2d56b1fbc0,~
code-source-info,0xeb
code-creation,LazyCompile,10,274426,0xeb66956496,78,get pathname node:internal/url:875:15,0x882f81b790,~
code-source-info,0xeb66956496,33,24290,24490,C0O24312C4O24317C6O24316C10O24332C14O24341C16O24340C21O24374C27O24378C30O24382C31O24396C36O24401C42O24408C47O24422C49O24432C50O24438C57O24449C60O24472C68O24449C77O24485,,
code-creation,LazyCompile,10,274544,0xeb669566ee,106,fileURLToPath node:internal/url:1413:23,0x882f81c010,~
code-source-info,0xeb669566ee,33,39672,40005,C0O39684C6O39719C13O39726C22O39749C25O39754C31O39780C49O39786C54O39780C55O39857C62O39866C67O39884C77O39890C82O39884C83O39929C92O39948C101O39976C105O40002,,
code-creation,LazyCompile,10,274678,0xeb66956926,150,get origin node:internal/url:746:13,0x882f81b200,~
code-source-info,0xeb66956926,33,21116,21696,C0O21200C4O21205C6O21204C10O21232C59O21280C64O21285C70O21292C78O21329C83O21349C89O21353C95O21337C101O21359C105O21366C110O21464C116O21485C117O21597C122O21629C127O21641C132O21651C137O21604C142O21657C143O21670C149O21691,,
code-creation,LazyCompile,10,274796,0xeb66956c0e,261,getPathFromURLWin32 node:internal/url:1360:29,0x882f81bf70,~
code-source-info,0xeb66956c0e
code-creation,LazyCompile,10,274883,0xeb66956eb6,19,get hostname node:internal/url:841:15,0x882f81b5e0,~
code-source-info,0xeb66956eb6,33,23466,23513,C0O23476C4O23488C6O23487C10O23497C18O23508,,
code-creation,LazyCompile,10,274956,0xeb66956fde,30,tryStatSync node:internal/modules/esm/resolve:183:3,0x2d56b20250,~
code-source-info,0xeb66956fde,114,5882,5948,C0O5937C5O5901C10O5892C21O5941C24O5937C29O5948,,
code-creation,LazyCompile,10,275026,0xeb66957196,123,statSync node:fs:1528:18,0x31fadee8dd8,~
code-source-info,0xeb66957196,77,40402,40816,C7O40402C16O40465C21O40472C26O40511C33O40513C40O40538C45O40546C52O40551C55O40562C60O40562C66O40624C76O40546C82O40664C88O40679C96O40692C102O40721C103O40738C104O40747C109O40747C113O40779C118O40786C122O40813,,
code-creation,LazyCompile,10,275087,0xeb66957336,37, node:internal/fs/utils:680:42,0x31fadef2eb0,~
code-source-info,0xeb66957336,78,19135,19274,C14O19191C19O19191C24O19226C29O19226C34O19259C36O19271,,
code-creation,LazyCompile,10,275270,0xeb66957476,64,hasNoEntryError node:fs:1465:25,0x31fadee8ca8,~
code-source-info,0xeb66957476,77,38776,38978,C0O38795C6O38823C11O38839C16O38823C21O38852C27O38866C36O38870C39O38883C40O38902C46O38927C51O38933C58O38938C61O38951C62O38962C63O38975,,
code-creation,LazyCompile,10,275414,0xeb669575ae,576,getStatsFromBinding node:internal/fs/utils:530:29,0x31fadef2c80,~
code-source-info,0xeb669575ae
code-creation,LazyCompile,10,275562,0xeb669579de,16,isBigUint64Array node:internal/util/types:53:26,0x17a320d7ac0,~
code-source-info,0xeb669579de,15,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,275607,0xeb66957ace,19,msFromTimeSpec node:internal/fs/utils:446:24,0x31fadef29a8,~
code-source-info,0xeb66957ace,78,11451,11512,C0O11468C2O11481C4O11479C10O11500C12O11498C15O11491C18O11509,,
code-creation,LazyCompile,10,275750,0xeb66957d0e,116,Stats node:internal/fs/utils:495:15,0x31fadef2ba0,~
code-source-info,0xeb66957d0e,78,13243,13784,C0O13383C41O13383C46O13513C48O13526C52O13540C54O13553C58O13567C60O13580C64O13594C66O13611C70O13629C73O13642C77O13640C81O13666C84O13679C88O13677C92O13703C95O13716C99O13714C103O13740C106O13757C110O13755C115O13783,,
code-creation,LazyCompile,10,275833,0xeb66957ee6,62,StatsBase node:internal/fs/utils:400:19,0x31fadef2578,~
code-source-info,0xeb66957ee6,78,10312,10613,C0O10400C2O10409C6O10419C8O10429C12O10440C14O10451C18O10463C20O10472C24O10482C26O10491C30O10501C32O10511C36O10522C38O10535C42O10549C44O10558C48O10568C50O10578C54O10589C56O10601C61O10612,,
code-creation,LazyCompile,10,275926,0xeb669580de,29,dateFromMs node:internal/fs/utils:460:20,0x31fadef2a48,~
code-source-info,0xeb669580de,78,11977,12024,C0O11987C7O12003C10O12003C17O12014C23O11994C28O12021,,
code-creation,LazyCompile,10,275977,0xeb669581e6,16,StatsBase.isDirectory node:internal/fs/utils:414:43,0x31fadef25c8,~
code-source-info,0xeb669581e6,78,10659,10710,C0O10679C7O10698C10O10679C15O10707,,
code-creation,LazyCompile,10,276027,0xeb669582fe,54,Stats._checkModeProperty node:internal/fs/utils:517:46,0x31fadef2bf0,~
code-source-info,0xeb669582fe,78,14142,14370,C0O14158C8O14189C10O14185C17O14213C19O14209C26O14242C28O14238C33O14260C34O14273C35O14339C42O14346C44O14344C50O14354C53O14367,,
code-creation,LazyCompile,10,276078,0xeb66958436,16,StatsBase.isFile node:internal/fs/utils:418:38,0x31fadef2658,~
code-source-info,0xeb66958436,78,10752,10803,C0O10772C7O10791C10O10772C15O10800,,
code-creation,RegExp,3,276253,0x1bd53847480,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,276690,0x1bd53847b20,1936,toNamespacedPath node:path:618:19,0x882f8298d0,^
code-source-info,0x1bd53847b20,35,20087,21202,,,
code-creation,Function,11,276725,0x1bd53848320,280, node:internal/url:636:21,0x882f81afa0,^
code-source-info,0x1bd53848320,33,18078,18155,,,
code-creation,Function,11,276765,0x1bd538484a0,1916,getPathFromURLWin32 node:internal/url:1360:29,0x882f81bf70,^
code-source-info,0x1bd538484a0,33,37724,39122,,,
code-creation,LazyCompile,10,277069,0xeb66958bde,37,get search node:internal/url:893:13,0x882f81b870,~
code-source-info,0xeb66958bde,33,24733,24864,C0O24761C4O24766C6O24765C10O24751C15O24781C19O24809C24O24824C26O24834C27O24840C32O24851C36O24859,,
code-creation,LazyCompile,10,277151,0xeb66958d6e,181,set search node:internal/url:900:13,0x882f81b8e0,~
code-source-info,0xeb66958d6e,33,24880,25403,C0O24908C4O24913C6O24912C10O24928C17O24937C23O24963C25O24974C30O24991C31O25001C35O25016C44O25030C46O25029C51O25026C57O25072C58O25082C64O25086C69O25095C79O25104C86O25144C88O25154C92O25167C101O25180C106O25177C110O25208C114O25231C125O25245C134O25279C142O25279C154O25231C159O25353C168O25375C170O25374C174O25353C180O25402,,
code-creation,LazyCompile,10,277228,0xeb66958f66,41,toUSVString node:internal/util:59:21,0x308e2aa0a0,~
code-source-info,0xeb66958f66,12,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,277312,0xeb669590ae,37,get hash node:internal/url:923:11,0x882f81b9c0,~
code-source-info,0xeb669590ae,33,25495,25638,C0O25526C4O25531C6O25530C10O25513C15O25546C19O25580C24O25595C26O25605C27O25611C32O25622C36O25633,,
code-creation,LazyCompile,10,277381,0xeb66959226,144,set hash node:internal/url:930:11,0x882f81ba28,~
code-source-info,0xeb66959226,33,25652,26099,C0O25678C4O25683C6O25682C10O25733C15O25756C17O25776C18O25789C22O25804C31O25818C33O25817C38O25814C42O25849C43O25856C44O25869C45O25877C51O25881C56O25890C66O25897C73O25933C75O25946C79O25957C88O25970C93O25967C97O25999C108O26011C117O26044C125O26044C137O25999C143O26098,,
code-creation,LazyCompile,10,277449,0xeb669593d6,18,toString node:internal/url:730:11,0x882f81b0e0,~
code-source-info,0xeb669593d6,33,20787,20827,C0O20797C4O20809C6O20808C12O20817C17O20822,,
code-creation,LazyCompile,10,277505,0xeb669594ae,3, node:internal/per_context/primordials:276:21,0x308e289af8,~
code-source-info,0xeb669594ae,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,277572,0xeb66959586,34,get node:internal/modules/esm/module_map:16:6,0x2d56b1b860,~
code-source-info,0xeb66959586,112,514,587,C0O527C10O527C15O560C17O573C28O573C33O582,,
code-creation,LazyCompile,10,277680,0xeb66959806,150,ModuleJob node:internal/modules/esm/module_job:55:14,0x2d56b1c658,~
code-source-info,0xeb66959806,113,1350,3072,C0O1350C13O1407C18O1419C22O1434C27O1446C31O1461C36O1477C40O1498C44O1510C48O1648C55O1669C58O1698C67O1707C76O1712C89O1669C94O1667C98O1819C103O2748C106O2762C109O2760C113O2872C123O2899C132O2907C135O2872C140O3037C144O3055C149O3071,,
code-creation,LazyCompile,10,277785,0xeb6695a1c6,183,moduleProvider node:internal/modules/esm/loader:229:28,0xeb66952540,~
code-source-info,0xeb6695a1c6,111,6231,6555,C10O6231C18O6303C21O6314C26O6319C33O6326C39O6314C53O6303C76O6279C81O6292C86O6365C93O6377C98O6377C104O6404C106O6421C115O6427C120O6421C121O6480C143O6487C158O6548,,
code-creation,LazyCompile,10,277906,0xeb6695a6ee,410,load node:internal/modules/esm/loader:297:13,0x2d56b19a98,~
code-source-info,0xeb6695a6ee,111,8278,9586,C10O8278C60O8327C62O8332C67O8340C71O8367C73O8372C77O8381C84O8388C95O8431C101O8439C105O8464C114O8470C127O8464C153O8514C159O8555C177O8561C182O8555C183O8690C188O8705C193O8737C198O8782C210O8782C216O8891C228O8954C235O9004C255O8897C260O8891C261O9040C267O9081C288O9087C293O9081C294O9232C309O9307C312O9307C322O9343C325O9343C331O9376C350O9382C355O9376C356O9535C363O9551C369O9566C385O9581,,
code-creation,LazyCompile,10,278010,0xeb6695aae6,189,defaultLoad node:internal/modules/esm/load:7:27,0x2d56b24658,~
code-source-info,0xeb6695aae6,116,263,631,C10O263C18O294C23O307C28O336C33O353C38O353C45O366C50O375C55O403C57O420C64O449C69O476C73O501C78O528C83O560C90O567C94O543C107O537C135O588C142O602C148O615C164O628,,
code-creation,LazyCompile,10,278083,0xeb6695adde,58,defaultGetFormat node:internal/modules/esm/get_format:81:26,0x2d56b239d8,~
code-source-info,0xeb6695adde,115,2427,2622,C0O2462C7O2462C13O2481C20O2518C23O2543C28O2488C37O2560C40O2584C44O2576C48O2593C57O2619,,
code-creation,LazyCompile,10,278168,0xeb6695b2be,147,file: node:internal/modules/esm/get_format:56:10,0x2d56b23a78,~
code-source-info,0xeb6695b2be,115,1708,2356,C0O1741C5O1756C10O1741C15O1776C17O1791C19O1799C24O1819C29O1850C34O1828C41O1856C55O1915C62O1942C66O1961C70O1983C77O2019C82O2042C85O2050C96O2050C102O2178C109O2211C115O2243C122O2285C125O2285C135O2249C140O2243C141O2329C146O2351,,
code-creation,LazyCompile,10,278288,0xeb6695b51e,275,extname node:path:836:10,0x882f829a10,~
code-source-info,0xeb6695b51e
code-creation,LazyCompile,10,278401,0xeb6695b7ae,13,getPackageType node:internal/modules/esm/resolve:785:24,0x2d56b1ff80,~
code-source-info,0xeb6695b7ae,114,27341,27434,C0O27374C3O27374C8O27426C12O27431,,
code-creation,LazyCompile,10,278474,0xeb6695ba06,173,getPackageScopeConfig node:internal/modules/esm/resolve:247:31,0x2d56b1f9e0,~
code-source-info,0xeb6695ba06,114,7586,8685,C0O7623C13O7623C19O7722C24O7737C32O7741C39O7819C41O7853C46O7870C49O7870C54O7853C60O7979C66O7987C68O8008C69O8043C72O8064C85O8081C91O8290C96O8322C100O8299C105O8332C107O7663C110O8371C115O8371C120O8427C127O8445C132O8493C137O8515C142O8559C147O8584C154O8604C159O8621C164O8621C170O8661C172O8682,,
code-creation,LazyCompile,10,278696,0xeb6695be66,331,getPackageConfig node:internal/modules/esm/resolve:191:26,0x2d56b1f990,~
code-source-info,0xeb6695be66,114,6115,7478,C0O6161C5O6178C10O6178C16O6192C18O6227C20O6243C21O6267C26O6285C31O6285C37O6295C42O6307C44O6362C51O6382C56O6423C61O6447C66O6495C71O6522C78O6546C83O6563C88O6563C94O6594C96O6615C97O6630C102O6657C107O6671C115O6669C125O6716C137O6775C144O6786C163O6813C168O6827C174O6813C178O6811C185O6860C192O6722C197O6716C198O6892C203O6901C208O6907C213O6913C218O6946C223O6974C233O7027C235O7051C241O7081C243O7102C249O7132C251O7207C253O7216C260O7237C265O7253C268O7295C275O7313C281O7343C287O7354C293O7365C299O7376C305O7390C312O7408C317O7425C322O7425C328O7454C330O7475,,
code-creation,Function,11,278900,0x1bd53848c80,620,get pathname node:internal/url:875:15,0x882f81b790,^
code-source-info,0x1bd53848c80,33,24290,24490,,,
code-creation,Function,11,278932,0x1bd53848f60,340,URLContext node:internal/url:160:14,0x882f81a650,^
code-source-info,0x1bd53848f60,33,3859,4081,,,
code-creation,Function,11,278964,0x1bd53849120,1468,onParseComplete node:internal/url:532:25,0x882f81abf8,^
code-source-info,0x1bd53849120,33,14726,15412,,,
code-creation,Function,11,278992,0x1bd53849740,828,URL node:internal/url:620:14,0x882f81aec8,^
code-source-info,0x1bd53849740,33,17608,17965,,,
code-creation,Function,11,279012,0x1bd53849ae0,156,get protocol node:internal/url:769:15,0x882f81b270,^
code-source-info,0x1bd53849ae0,33,21714,21757,,,
code-creation,LazyCompile,10,279150,0xeb6695c9ae,338,defaultGetSource node:internal/modules/esm/get_source:25:32,0x2d56b24d08,~
code-source-info,0xeb6695c9ae,117,686,1346,C10O686C31O694C70O747C77O747C83O768C85O790C92O799C97O819C102O834C114O828C144O878C151O887C156O921C163O941C166O966C171O921C177O982C179O1003C186O1009C191O1003C192O1058C199O1069C206O1090C211O1106C218O1111C221O1111C228O1137C237O1106C246O1183C258O1189C263O1183C264O1243C271O1253C280O1272C285O1279C290O1288C295O1288C301O1329C313O1343,,
code-creation,LazyCompile,10,279316,0xeb6695cea6,196,readFile node:internal/fs/promises:786:24,0x2d56b26f80,~
code-source-info,0xeb6695cea6,118,22884,23230,C10O22884C18O22905C23O22926C28O22915C35O22975C44O22993C46O23013C48O23002C53O23030C56O23037C71O23067C72O23073C75O23094C80O23073C84O23119C98O23125C111O23119C137O23153C145O23188C151O23220C156O23160C171O23227,,
code-creation,LazyCompile,10,279381,0xeb6695eaae,29,checkAborted node:internal/fs/promises:319:22,0x2d56b262b0,~
code-source-info,0xeb6695eaae,118,7465,7531,C0O7479C7O7489C16O7505C21O7511C26O7505C28O7530,,
code-creation,LazyCompile,10,279440,0xeb6695ec56,182,open node:internal/fs/promises:449:20,0x2d56b26490,~
code-source-info,0xeb6695ec56,118,11748,12061,C10O11748C18O11773C23O11780C29O11827C34O11827C39O11852C55O11859C62O11898C69O11932C72O11940C79O11955C82O11966C87O11966C95O12043C104O11940C117O11926C142O11905C157O12058,,
code-creation,LazyCompile,10,279578,0xeb6695f1de,515,stringToFlags node:internal/fs/utils:555:23,0x31fadef2cd0,~
code-source-info,0xeb6695f1de
code-creation,LazyCompile,10,279781,0xeb6695f5ce,97,parseFileMode node:internal/validators:58:23,0x17a320da780,~
code-source-info,0xeb6695f5ce,17,1525,1832,C0O1549C11O1567C17O1605C24O1630C27O1610C34O1657C41O1702C52O1663C57O1657C58O1725C66O1733C73O1769C89O1769C94O1816C96O1829,,
code-creation,LazyCompile,10,279862,0xeb6695f79e,206, node:internal/validators:83:3,0x17a320da840,~
code-source-info,0xeb6695f79e,17,2318,2913,C36O2461C39O2466C45O2491C51O2533C67O2539C72O2533C73O2604C78O2609C84O2644C100O2650C105O2644C106O2715C116O2754C129O2767C142O2721C147O2715C148O2794C150O2804C157O2819C162O2835C172O2874C185O2887C198O2841C203O2835C205O2912,,
code-creation,LazyCompile,10,279922,0xeb6695f966,9,isInt32 node:internal/validators:35:17,0x17a320da378,~
code-source-info,0xeb6695f966,17,749,794,C0O762C2O786C5O775C8O791,,
code-creation,LazyCompile,10,280542,0xeb6695fc16,263,link node:internal/modules/esm/module_job:66:18,0xeb66959698,~
code-source-info,0xeb6695fc16,113,1819,2689,C4O1819C26O1840C36O1865C48O1854C73O1852C77O1887C89O1899C98O1917C100O1906C104O1887C108O2239C110O2239C112O2267C117O2272C122O2279C132O2279C138O2528C140O2565C151O2586C156O2582C162O2571C174O2565C199O2625C210O2647C218O2643C224O2632C238O2682,,
code-creation,LazyCompile,10,280623,0xeb6695fe9e,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:397:37,0x308e28a428,~
code-source-info,0xeb6695fe9e,6,11842,11930,C0O11874C13O11874C18O11930,,
tick,0x7ff760b8a939,280687,0,0x0,3,0x7ff7611bf520,0xeb6695988d,0xeb66952725,0x7ff761625733
code-creation,LazyCompile,10,280737,0xeb6696000e,110,set node:internal/modules/esm/module_map:20:6,0x2d56b1b8b0,~
code-source-info,0xeb6696000e,112,594,875,C0O612C10O612C15O645C19O664C21O653C26O674C37O731C55O737C60O731C61O800C73O817C84O800C88O843C90O856C104O856C109O870,,
code-creation,LazyCompile,10,280804,0xeb66960186,104,logger node:internal/util/debuglog:96:18,0x882f83cc08,~
code-source-info,0xeb66960186,40,2994,3226,C0O2994C3O3027C30O3052C35O3059C38O3067C39O3083C45O3100C49O3090C53O3105C54O3121C60O3138C66O3147C70O3128C75O3152C76O3169C80O3176C87O3189C92O3185C98O3176C103O3214,,
code-creation,LazyCompile,10,280875,0xeb66960306,155,debug node:internal/util/debuglog:76:15,0x882f83cb68,~
code-source-info,0xeb66960306,40,2432,2869,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C81O2695C86O2702C89O2710C90O2726C96O2743C100O2733C104O2748C105O2764C111O2781C117O2790C121O2771C126O2795C127O2812C131O2819C138O2832C143O2828C149O2819C154O2857,,
code-creation,LazyCompile,10,280936,0xeb669604d6,41,init node:internal/util/debuglog:72:16,0x882f83cb18,~
code-source-info,0xeb669604d6,40,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,280971,0xeb669605c6,2,testEnabled node:internal/util/debuglog:32:19,0x1ae334d1bc8,~
code-source-info,0xeb669605c6,40,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,281035,0xeb6696075e,116,debuglogImpl node:internal/util/debuglog:49:22,0x882f83c950,~
code-source-info,0xeb6696075e,40,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,281089,0xeb66960916,10, node:internal/modules/esm/module_map:7:63,0x2d56b1b7c0,~
code-source-info,0xeb66960916,112,181,208,C0O194C2O200C9O207,,
code-creation,LazyCompile,10,281118,0xeb669609c6,2,noop node:internal/util/debuglog:47:14,0x882f83c900,~
code-source-info,0xeb669609c6,40,1465,1473,C1O1472,,
code-creation,LazyCompile,10,281150,0xeb66960a7e,10, node:internal/modules/esm/loader:277:15,0xeb669520f0,~
code-source-info,0xeb66960a7e,111,7676,7694,C0O7689C5O7689C9O7694,,
code-creation,LazyCompile,10,281243,0xeb66960ed6,433,run node:internal/modules/esm/module_job:180:12,0x2d56b1c748,~
code-source-info,0xeb66960ed6,113,6618,7822,C10O6618C18O6639C23O6639C35O6628C58O6675C61O6706C66O6742C71O6749C76O6749C90O6731C128O6809C133O6814C143O6821C152O6856C158O6894C163O6856C169O6915C182O6925C186O6962C196O6994C204O6966C211O7029C224O7039C228O7129C235O7160C240O7167C248O7129C259O7199C267O7249C272O7256C277O7199C292O7277C297O7332C302O7360C307O7367C312O7333C318O7400C325O7405C330O7432C344O7581C358O7523C364O7604C370O7684C376O7442C380O7765C382O7765C383O7786C388O7808C408O7817,,
code-creation,LazyCompile,10,281327,0xeb66961206,24,instantiate node:internal/modules/esm/module_job:98:14,0x2d56b1c6a8,~
code-source-info,0xeb66961206,113,3089,3228,C0O3108C6O3170C11O3170C15O3163C19O3210C23O3223,,
code-creation,LazyCompile,10,281488,0xeb669618fe,924,_instantiate node:internal/modules/esm/module_job:105:21,0x2d56b1c6f8,~
code-source-info,0xeb669618fe
code-creation,LazyCompile,10,281659,0xeb66961f66,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0xeb66961650,~
code-source-info,0xeb66961f66,113,3335,3640,C10O3335C18O3365C23O3381C28O3381C35O3408C46O3415C47O3432C52O3444C57O3444C62O3506C74O3490C100O3521C111O3543C118O3571C123O3605C126O3571C134O3539C140O3528C154O3633,,
code-creation,LazyCompile,10,281763,0xeb6696214e,112,FileHandle node:internal/fs/promises:116:14,0x2d56b26fd0,~
code-source-info,0xeb6696214e,118,2962,3135,C3O2982C11O2982C40O2996C45O3001C50O3010C54O3029C59O3034C67O3041C69O3065C77O3039C81O3081C86O3086C91O3093C95O3103C100O3108C104O3123C111O3134,,
code-creation,LazyCompile,10,281821,0xeb669622ce,63,MixedEventEmitter node:internal/event_target:829:16,0x2d56b30768,~
code-source-info,0xeb669622ce,38,24331,24465,C0O24331C8O24350C15O24357C21O24393C25O24402C29O24393C41O24416C48O24438C54O24416C62O24464,,
code-creation,LazyCompile,10,282004,0xeb669625b6,601,readFileHandle node:internal/fs/promises:359:30,0x2d56b26350,~
code-source-info,0xeb669625b
code-creation,LazyCompile,10,282131,0xeb669629fe,8,get fd node:internal/fs/promises:129:9,0x2d56b27088,~
code-source-info,0xeb669629fe,118,3212,3244,C0O3222C2O3234C4O3233C7O3239,,
code-creation,LazyCompile,10,282192,0xeb66962b7e,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:409:43,0x308e28a4e0,~
code-source-info,0xeb66962b7e,6,12428,12708,C0O12428C13O12564C27O12564C32O12708,,
code-creation,LazyCompile,10,282238,0xeb66962d0e,46, node:internal/per_context/primordials:412:15,0xeb66962ad0,~
code-source-info,0xeb66962d0e,6,12576,12703,C0O12693C14O12591C20O12666C28O12673C34O12692C39O12693C45O12703,,
code-creation,LazyCompile,10,282278,0xeb66962e56,27,SafePromise node:internal/per_context/primordials:393:16,0x308e28a3d8,~
code-source-info,0xeb66962e56,6,11762,11793,C3O11775C7O11781C11O11775C26O11792,,
code-creation,LazyCompile,10,282317,0xeb66962f4e,22, node:internal/per_context/primordials:413:21,0xeb66962c58,~
code-source-info,0xeb66962f4e,6,12607,12656,C0O12617C16O12617C21O12656,,
code-creation,LazyCompile,10,282380,0xeb66963046,19,allocUnsafeSlow node:buffer:382:50,0x17a320e5bf8,~
code-source-info,0xeb66963046,18,11572,11640,C0O11584C5O11584C9O11605C14O11612C18O11637,,
code-creation,LazyCompile,10,282425,0xeb66963156,54, node:buffer:348:36,0x17a320e5ad0,~
code-source-info,0xeb66963156,18,10516,10676,C0O10531C8O10531C13O10564C14O10575C21O10591C23O10588C28O10611C33O10643C46O10617C51O10611C53O10675,,
code-creation,LazyCompile,10,282469,0xeb6696327e,30,validateNumber node:internal/validators:122:24,0x17a320da980,~
code-source-info,0xeb6696327e,17,3653,3765,C0O3672C6O3708C22O3714C27O3708C29O3764,,
code-creation,LazyCompile,10,282514,0xeb669633ae,71,createUnsafeBuffer node:internal/buffer:1059:28,0x17a320f2f48,~
code-source-info,0xeb669633ae,19,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,282665,0xeb6696369e,248,close node:internal/fs/promises:189:11,0x2d56b291c8,~
code-source-info,0xeb6696369e,118,4398,5219,C0O4411C7O4420C9O4419C15O4425C20O4442C27O4449C30O4466C31O4481C38O4490C40O4489C45O4515C52O4527C54O4526C57O4542C58O4557C65O4562C73O4568C77O4577C84O4586C86O4585C91O4593C96O4609C103O4614C108O4619C112O4632C119O4637C126O4654C136O4697C138O4696C142O4706C147O4706C157O4654C162O4652C168O4798C175O4803C182O4820C189O4862C199O4858C210O4820C215O4818C219O5162C222O5167C230O5167C235O5187C242O5199C244O5198C247O5214,,
code-creation,LazyCompile,10,282821,0xeb66963a06,17, node:internal/fs/promises:203:9,0xeb66963488,~
code-source-info,0xeb66963a06,118,4724,4766,C0O4732C7O4737C11O4752C16O4765,,
code-creation,LazyCompile,10,282941,0xeb66963c46,168,moduleStrategy node:internal/modules/esm/translators:134:56,0x2d56b33738,~
code-source-info,0xeb66963c46,120,3888,4260,C6O3888C14O3915C25O3915C30O3960C33O3969C39O3991C44O3991C49O4028C59O4064C64O4028C68O4090C87O4090C93O4139C98O4150C103O4162C108O4166C115O4181C121O4208C125O4162C131O4243C143O4257,,
code-creation,LazyCompile,10,283019,0xeb669649f6,83,assertBufferSource node:internal/modules/esm/translators:79:28,0x2d56b33440,~
code-source-info,0xeb669649f6,120,2301,2708,C0O2336C10O2388C11O2395C12O2452C15O2452C19O2412C24O2431C29O2472C35O2499C41O2530C42O2537C43O2546C50O2599C77O2552C82O2546,,
code-creation,LazyCompile,10,283069,0xeb66964b4e,31,lazyTypes node:internal/modules/esm/translators:24:19,0x2d56b333a0,~
code-source-info,0xeb66964b4e,120,460,557,C0O468C6O489C10O503C11O507C17O523C24O521C30O554,,
code-creation,LazyCompile,10,283120,0xeb66964c66,72,stringify node:internal/modules/esm/translators:95:19,0x2d56b33490,~
code-source-info,0xeb66964c66,120,2730,2935,C0O2742C6O2772C8O2784C9O2788C20O2788C25O2843C33O2876C36O2872C45O2892C50O2851C56O2904C61O2919C66O2919C71O2932,,
code-creation,LazyCompile,10,283238,0xeb66964e56,206,TextDecoder node:internal/encoding:379:16,0x17a320fb2d8,~
script-source,21,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': { enumerable: true }\x2C\x0d\n    'encodeInto': { enumerable: true }\x2C\x0d\n    'encoding': { enumerable: true }\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: { enumerable: true }\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0xeb66964e56,21,10677,11487,C15O10677C21O10721C25O10754C35O10769C43O10754C48O10905C53O10905C58O10944C60O10976C69O10982C74O10976C75O11045C77O11055C81O11105C94O11113C103O11166C116O11178C125O11243C130O11243C136O11276C138O11311C147O11317C152O11311C153O11368C157O11373C161O11383C165O11398C169O11403C174O11412C178O11429C182O11434C187O11442C191O11458C195O11463C200O11474C205O11486,,
code-creation,LazyCompile,10,284331,0xeb669662d6,55,getEncodingFromLabel node:internal/encoding:313:30,0x17a320fb010,~
code-source-info,0xeb669662d6,21,8957,9111,C0O8982C5O8992C10O8992C16O9007C18O9030C20O9041C21O9045C26O9062C34O9092C39O9092C44O9066C49O9062C54O9108,,
code-creation,LazyCompile,10,284446,0xeb669665e6,227,decode node:internal/encoding:408:11,0x17a320fb3f8,~
code-source-info,0xeb669665e6,21,11503,12349,C8O11512C25O11542C30O11542C34O11572C41O11576C47O11612C52O11620C56O11632C61O11633C69O11660C76O11665C82O11702C102O11708C107O11702C108O11882C118O11897C126O11882C131O12033C133O12043C137O12091C153O12104C159O12148C168O12161C170O12160C180O12148C186O12193C190O12233C197O12282C207O12239C212O12233C213O12325C221O12325C226O12342,,
code-creation,LazyCompile,10,284522,0xeb6696680e,37,validateDecoder node:internal/encoding:64:25,0x17a320faf70,~
code-source-info,0xeb6696680e,21,1332,1436,C0O1343C7O1366C9O1365C14O1376C19O1391C29O1397C34O1391C36O1435,,
code-creation,LazyCompile,10,284612,0xeb66966986,162,toString node:buffer:782:46,0x17a320e7a10,~
code-source-info,0xeb66966986,18,24045,24637,C0O24045C2O24087C8O24094C13O24120C20O24138C25O24120C31O24146C32O24174C37O24187C38O24197C43O24208C48O24227C50O24237C55O24250C57O24260C58O24274C65O24291C71O24320C76O24332C83O24356C90O24371C92O24379C97O24394C99O24404C100O24410C104O24455C109O24455C115O24477C116O24495C119O24495C124O24524C126O24552C133O24558C138O24552C139O24610C156O24610C161O24634,,
code-creation,LazyCompile,10,284797,0xeb66966c46,499,getEncodingOps node:buffer:678:24,0x17a320e7868,~
code-source-info,0xeb66966c
code-creation,LazyCompile,10,284955,0xeb6696702e,12,slice node:buffer:602:12,0x17a320e6518,~
code-source-info,0xeb6696702e,18,17572,17618,C0O17597C5O17597C11O17618,,
code-creation,LazyCompile,10,285059,0xeb669672e6,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x2d56b09fa0,~
code-source-info,0xeb669672e6,105,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,285140,0xeb66967d46,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x2d56b09f00,~
code-source-info,0xeb66967d46,105,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,285201,0xeb66967ebe,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x2d56b09f50,~
code-source-info,0xeb66967ebe,105,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,285260,0xeb66968036,30,validateBoolean node:internal/validators:138:25,0x17a320daa40,~
code-source-info,0xeb66968036,17,4179,4293,C0O4198C6O4235C22O4241C27O4235C29O4292,,
code-creation,LazyCompile,10,285311,0xeb6696812e,10, node:internal/modules/esm/translators:44:63,0x2d56b336e8,~
code-source-info,0xeb6696812e,120,1101,1128,C0O1114C2O1120C9O1127,,
code-creation,Script,10,285378,0xeb669684a6,64, file:///D:/Cursobackend/Clase32/utils/childProcess.js:1:1,0xeb66968270,~
script-source,124,file:///D:/Cursobackend/Clase32/utils/childProcess.js,import randomNumber from "./genRandomNumber.js";\x0d\n\x0d\nprocess.on("message"\x2C (cant) => {\x0d\n\x09const numbers = randomNumber(cant);\x0d\n\x09process.send({ res: numbers });\x0d\n});
code-source-info,0xeb669684a6,124,0,162,C10O0C15O0C35O0C39O52C43O60C56O60C63O162,,
code-creation,LazyCompile,10,285511,0xeb66968796,137, node:internal/modules/esm/module_job:75:41,0xeb6695fb00,~
code-source-info,0xeb66968796,113,2284,2516,C10O2284C18O2335C23O2340C28O2347C38O2347C45O2386C54O2405C57O2386C62O2455C72O2455C98O2493C112O2507,,
code-creation,LazyCompile,10,285578,0xeb66968906,13,onParseError node:internal/url:551:22,0x882f81ac48,~
code-source-info,0xeb66968906,33,15437,15493,C0O15457C7O15463C12O15457,,
code-creation,LazyCompile,10,285757,0xeb66968bc6,187,NodeError node:internal/errors:342:28,0x308e2a4fc0,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nconst kNoOverride = Symbol('kNoOverride');\x0d\nlet userStackTraceLimit;\x0d\nconst nodeInternalPrefix = '__node_internal_';\x0d\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  const firstFrame = trace[0]?.getFunctionName();\x0d\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\x0d\n    for (let l = trace.length - 1; l >= 0; l--) {\x0d\n      const fn = trace[l]?.getFunctionName();\x0d\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\x0d\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\x0d\n    // it is updated at every new exception in `captureLargerStackTrace`.\x0d\n    if (trace.length > userStackTraceLimit)\x0d\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\x0d\n  }\x0d\n\x0d\n  const globalOverride =\x0d\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\x0d\n  if (globalOverride !== kNoOverride) return globalOverride;\x0d\n\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n};\x0d\n\x0d\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  return kNoOverride;\x0d\n};\x0d\n\x0d\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\x0d\n  if (innerError && outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new AggregateError(new SafeArrayIterator([\x0d\n      outerError\x2C\x0d\n      innerError\x2C\x0d\n    ])\x2C outerError.message);\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n});\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\nlet assert;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  if (!internalUtil) {\x0d\n    internalUtil = require('internal/util');\x0d\n  }\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (buffer === undefined)\x0d\n    buffer = require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    super();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    captureLargerStackTrace(this);\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  return function NodeError(...args) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    const error = new Base();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const message = getMessage(key\x2C args\x2C error);\x0d\n    ObjectDefineProperties(error\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      toString: {\x0d\n        value() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    captureLargerStackTrace(error);\x0d\n    error.code = key;\x0d\n    return error;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: any[]) => any} T\x0d\n * @type {(fn: T) => T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  // We rename the functions that will be hidden to cut off the stacktrace\x0d\n  // at the outermost one\x0d\n  const hidden = nodeInternalPrefix + fn.name;\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { value: hidden });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n  if (def === SystemError) {\x0d\n    def = makeSystemErrorWithCode(sym);\x0d\n  } else {\x0d\n    def = makeNodeErrorWithCode(def\x2C sym);\x0d\n  }\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    otherClasses.forEach((clazz) => {\x0d\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n    });\x0d\n  }\x0d\n  codes[sym] = def;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (assert === undefined) assert = require('internal/assert');\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength =\x0d\n    (StringPrototypeMatch(msg\x2C /%[dfijoOs]/g) || []).length;\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  if (!uvBinding) {\x0d\n    uvBinding = internalBinding('uv');\x0d\n  }\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  if (!uvBinding.errmap) {\x0d\n    uvBinding.errmap = uvBinding.getErrorMap();\x0d\n  }\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\nconst captureLargerStackTrace = hideStackFrames(\x0d\n  function captureLargerStackTrace(err) {\x0d\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\x0d\n    if (stackTraceLimitIsWritable) {\x0d\n      userStackTraceLimit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = Infinity;\x0d\n    }\x0d\n    ErrorCaptureStackTrace(err);\x0d\n    // Reset the limit\x0d\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\x0d\n\x0d\n    return err;\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n *\x0d\n * @param {Object} ctx\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvException = hideStackFrames(function uvException(ctx) {\x0d\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n  let path;\x0d\n  let dest;\x0d\n  if (ctx.path) {\x0d\n    path = ctx.path.toString();\x0d\n    message += ` '${path}'`;\x0d\n  }\x0d\n  if (ctx.dest) {\x0d\n    dest = ctx.dest.toString();\x0d\n    message += ` -> '${dest}'`;\x0d\n  }\x0d\n\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // Pass the message to the constructor instead of setting it on the object\x0d\n  // to make sure it is the same as the one created in C++\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n\x0d\n  for (const prop of ObjectKeys(ctx)) {\x0d\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n      continue;\x0d\n    }\x0d\n    err[prop] = ctx[prop];\x0d\n  }\x0d\n\x0d\n  err.code = code;\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  if (dest) {\x0d\n    err.dest = dest;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(err);\x0d\n});\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvExceptionWithHostPort = hideStackFrames(\x0d\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${message}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.code = code;\x0d\n    ex.errno = err;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} [original]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst errnoException = hideStackFrames(\x0d\n  function errnoException(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(message);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst exceptionWithHostPort = hideStackFrames(\x0d\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${syscall} ${code}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n * @param {string} syscall\x0d\n * @param {string} [hostname]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\x0d\n  let errno;\x0d\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n  // c-ares error code.\x0d\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n  // make them available in a property that's not error.errno (since they\x0d\n  // can be in conflict with libuv error codes). Also make sure\x0d\n  // util.getSystemErrorName() can understand them when an being informed that\x0d\n  // the number is a c-ares error code.\x0d\n  if (typeof code === 'number') {\x0d\n    errno = code;\x0d\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n    // long enough that it's not practical to remove it.\x0d\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n      code = 'ENOTFOUND'; // Fabricated error name.\x0d\n    } else {\x0d\n      code = lazyInternalUtil().getSystemErrorName(code);\x0d\n    }\x0d\n  }\x0d\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n  ex.errno = errno;\x0d\n  ex.code = code;\x0d\n  ex.syscall = syscall;\x0d\n  if (hostname) {\x0d\n    ex.hostname = hostname;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(ex);\x0d\n});\x0d\n\x0d\nfunction connResetException(msg) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(msg);\x0d\n  ex.code = 'ECONNRESET';\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n *\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (process.platform === 'win32') {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x0d\n      }\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors &&\x0d\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\x0d\n                   require('internal/tty').hasColors()) ||\x0d\n                   defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Ensures the printed error line is from user code.\x0d\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  if (!_kArrowMessagePrivateSymbol) {\x0d\n    ({\x0d\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\x0d\n      setHiddenValue: _setHiddenValue\x2C\x0d\n    } = internalBinding('util'));\x0d\n  }\x0d\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor() {\x0d\n    super('The operation was aborted');\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\nmodule.exports = {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes\x2C\x0d\n  dnsException\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  getMessage\x2C\x0d\n  hideStackFrames\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  setArrowMessage\x2C\x0d\n  connResetException\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n  SystemError\x2C\x0d\n  AbortError\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  E\x2C\x0d\n  kNoOverride\x2C\x0d\n  prepareStackTrace\x2C\x0d\n  maybeOverridePrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  kIsNodeError\x2C\x0d\n  captureLargerStackTrace\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeTest(classRegExp\x2C value)) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      if (types.length > 2) {\x0d\n        const last = ArrayPrototypePop(types);\x0d\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (types.length === 2) {\x0d\n        msg += `one of type ${types[0]} or ${types[1]}`;\x0d\n      } else {\x0d\n        msg += `of type ${types[0]}`;\x0d\n      }\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      if (instances.length > 2) {\x0d\n        const last = ArrayPrototypePop(instances);\x0d\n        msg +=\x0d\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else {\x0d\n        msg += `an instance of ${instances[0]}`;\x0d\n        if (instances.length === 2) {\x0d\n          msg += ` or ${instances[1]}`;\x0d\n        }\x0d\n      }\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 2) {\x0d\n        const last = ArrayPrototypePop(other);\x0d\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (other.length === 2) {\x0d\n        msg += `one of ${other[0]} or ${other[1]}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (actual == null) {\x0d\n      msg += `. Received ${actual}`;\x0d\n    } else if (typeof actual === 'function' && actual.name) {\x0d\n      msg += `. Received function ${actual.name}`;\x0d\n    } else if (typeof actual === 'object') {\x0d\n      if (actual.constructor && actual.constructor.name) {\x0d\n        msg += `. Received an instance of ${actual.constructor.name}`;\x0d\n      } else {\x0d\n        const inspected = lazyInternalUtilInspect()\x0d\n          .inspect(actual\x2C { depth: -1 });\x0d\n        msg += `. Received ${inspected}`;\x0d\n      }\x0d\n    } else {\x0d\n      let inspected = lazyInternalUtilInspect()\x0d\n        .inspect(actual\x2C { colors: false });\x0d\n      if (inspected.length > 25)\x0d\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`;\x0d\n      msg += `. Received type ${typeof actual} (${inspected})`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CALLBACK'\x2C\x0d\n  'Callback must be a function. Received %O'\x2C TypeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${value}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${type}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input) {\x0d\n  this.input = input;\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x0d\n    );\x0d\n    switch (len) {\x0d\n      case 1:\x0d\n        msg += `${args[0]} argument`;\x0d\n        break;\x0d\n      case 2:\x0d\n        msg += `${args[0]} and ${args[1]} arguments`;\x0d\n        break;\x0d\n      default:\x0d\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\x0d\n        msg += `\x2C and ${args[len - 1]} arguments`;\x0d\n        break;\x0d\n    }\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\x0d\n  return `Cannot find ${type} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C\x0d\n  'Unknown file extension "%s" for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s'\x2C RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\x0d\n'resolving ES modules imported from %s'\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url) => {\x0d\n  let msg = 'Only file and data URLs are supported by the default ESM loader';\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINKING_ERRORED'\x2C\x0d\n  'Linking has already failed for the provided module'\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0xeb66968bc6,11,9886,10827,C0O9886C3O9917C10O9923C15O9945C20O9949C25O9983C33O10005C37O10029C40O10029C46O10101C51O10105C56O10139C65O10161C69O10191C83O10191C89O10226C96O10249C105O10266C109O10281C121O10414C128O10432C142O10550C147O10561C162O10226C167O10749C174O10749C178O10786C180O10797C184O10809C186O10822,,
code-creation,LazyCompile,10,288934,0xeb6696c0e6,64,isErrorStackTraceLimitWritable node:internal/errors:198:40,0x308e2a4c70,~
code-source-info,0xeb6696c0e6,11,5715,5981,C0O5736C7O5767C13O5736C19O5797C21O5828C28O5854C31O5835C35O5861C36O5872C44O5879C51O5939C57O5960C62O5964C63O5978,,
code-creation,LazyCompile,10,289042,0xeb6696c37e,287,getMessage node:internal/errors:410:20,0x308e2a5278,~
code-source-info,0xeb6696c37e,11,11900,12762,C0O11935C5O11944C10O11944C16O11959C22O11985C28O11994C35O11992C41O12027C47O12065C52O12084C57O12099C61O12091C70O12156C81O12200C99O12263C113O12220C117O12065C122O12287C136O12294C141O12324C142O12363C147O12385C152O12364C162O12412C167O12423C172O12460C176O12451C185O12482C196O12526C216O12583C226O12546C230O12423C235O12620C241O12627C246O12639C248O12650C249O12656C254O12656C259O12693C267O12713C271O12738C281O12700C286O12759,,
code-creation,LazyCompile,10,289126,0xeb6696c61e,9, node:internal/errors:1316:30,0x308e2a5e28,~
code-source-info,0xeb6696c61e,11,47525,47675,C0O47538C2O47549C6O47651C8O47672,,
code-creation,LazyCompile,10,289197,0xeb6696c75e,68,captureLargerStackTrace node:internal/errors:458:35,0x308e2a5368,~
code-source-info,0xeb6696c75e,11,13231,13612,C0O13278C3O13278C7O13317C9O13357C14O13385C21O13377C27O13409C32O13433C35O13431C39O13455C44O13455C48O13513C52O13544C59O13568C61O13566C65O13596C67O13607,,
code-creation,RegExp,3,289390,0x1bd53849be0,972,%2F|%5C
code-creation,RegExp,3,289904,0x1bd5384a020,612,(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])
code-creation,Function,11,290026,0x1bd5384a300,2004,extname node:path:836:10,0x882f829a10,^
code-source-info,0x1bd5384a300,35,26916,29044,,,
code-creation,Function,11,290054,0x1bd5384ab40,188,isURLInstance node:internal/url:1492:23,0x882f81c120,^
code-source-info,0x1bd5384ab40,33,42829,42928,,,
code-creation,Function,11,290075,0x1bd5384ac60,168,get href node:internal/url:734:11,0x882f81b130,^
code-source-info,0x1bd5384ac60,33,20841,20881,,,
code-creation,Function,11,290100,0x1bd5384ad80,252,SafePromise node:internal/per_context/primordials:393:16,0x308e28a3d8,^
code-source-info,0x1bd5384ad80,6,11762,11793,,,
code-creation,Function,11,290134,0x1bd5384aee0,876, node:internal/validators:153:3,0x17a320daa90,^
code-source-info,0x1bd5384aee0,17,4517,5088,,,
code-creation,Function,11,290159,0x1bd5384b2c0,320,isFileType node:fs:205:20,0x31fadee7900,^
code-source-info,0x1bd5384b2c0,77,5489,5737,,,
code-creation,Function,11,290181,0x1bd5384b460,336,initSearchParams node:internal/url:1016:26,0x882f81bc10,^
code-source-info,0x1bd5384b460,33,28064,28185,,,
code-creation,Script,10,290811,0xeb6696d5b6,66, file:///D:/Cursobackend/Clase32/utils/genRandomNumber.js:1:1,0xeb6696d3c8,~
script-source,125,file:///D:/Cursobackend/Clase32/utils/genRandomNumber.js,const randomNumber = (quantity) => {\x0d\n\x09parseInt(quantity);\x0d\n\x09const numbers = {};\x0d\n\x0d\n\x09for (let i = 0; i < quantity; i++) {\x0d\n\x09\x09let num = Math.floor(Math.random() * (1000 - 0 + 1));\x0d\n\x0d\n\x09\x09if (numbers[num]) {\x0d\n\x09\x09\x09numbers[num]++;\x0d\n            console.log(numbers);\x0d\n\x09\x09} else {\x0d\n\x09\x09\x09numbers[num] = 1;\x0d\n\x09\x09}\x0d\n\x09}\x0d\n\x0d\n\x09return numbers;\x0d\n};\x0d\n\x0d\nexport default randomNumber;
code-source-info,0xeb6696d5b6,125,0,357,C10O0C28O0C48O0C55O21C60O344C65O357,,
code-creation,Function,11,290932,0x1bd5384b620,40, node:internal/per_context/primordials:276:21,0x308e289af8,^
code-source-info,0x1bd5384b620,6,8195,8226,,,
code-creation,Function,11,290981,0x1bd5384b6c0,2568, node:internal/url:682:12,0x882f81b090,^
code-source-info,0x1bd5384b6c0,33,19424,20719,,,
code-creation,Function,11,291005,0x1bd5384c140,196,get hostname node:internal/url:841:15,0x882f81b5e0,^
code-source-info,0x1bd5384c140,33,23466,23513,,,
code-creation,Function,11,291025,0x1bd5384c280,108,SafeIterator node:internal/per_context/primordials:270:16,0x308e289988,^
code-source-info,0x1bd5384c280,6,8054,8116,,,
code-creation,LazyCompile,10,291120,0xeb6696dc9e,5,get node:internal/bootstrap/pre_execution:314:8,0x2d56b0f350,~
code-source-info,0xeb6696dc9e,92,10398,10433,C0O10410C4O10426,,
code-creation,LazyCompile,10,291176,0xeb6696dd66,44,refCounted node:internal/child_process:537:13,0x1ae334dd928,~
code-source-info,0xeb6696dd66,97,14644,14746,C0O14654C3O14664C9O14665C15O14671C22O14686C27O14714C29O14719C33O14728C38O14728C43O14745,,
code-creation,LazyCompile,10,291239,0xeb6696de86,15, node:internal/modules/esm/loader:278:15,0xeb66952140,~
code-source-info,0xeb6696de86,111,7711,7748,C0O7714C5O7734C10O7734C14O7748,,
code-creation,LazyCompile,10,291352,0xeb6696dff6,307,removeListener node:events:557:28,0x308e2b41d0,~
code-source-info,0xeb6696dff
code-creation,LazyCompile,10,291466,0xeb6696e2de,64,stopListeningIfSignal node:internal/process/signal:43:31,0x162d6f92de8,~
code-source-info,0xeb6696e2de,89,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,291516,0xeb6696e426,30,onRemoveListener node:child_process:179:57,0x2d56b02ff8,~
code-source-info,0xeb6696e426,96,5476,5567,C0O5490C2O5499C9O5521C14O5539C19O5547C24O5547C29O5566,,
tick,0x7ff90cd6fb64,296661,0,0x0,8
tick,0x7ff90cd6fb64,311733,0,0x0,8
tick,0x7ff90cd6fb64,328051,0,0x0,8
tick,0x7ff90cd6fb64,343576,0,0x0,8
tick,0x7ff90cd6fb64,359691,0,0x0,8
tick,0x7ff90cd6fb64,375407,0,0x0,8
tick,0x7ff90cd6fb64,391703,0,0x0,8
tick,0x7ff90cd6fb64,407166,0,0x0,8
tick,0x7ff90cd6fb64,422147,0,0x0,8
tick,0x7ff90cd6fb64,437131,0,0x0,8
tick,0x7ff90cd6fb64,453041,0,0x0,8
tick,0x7ff90cd6fb64,469037,0,0x0,8
tick,0x7ff90cd6fb64,484976,0,0x0,8
tick,0x7ff90cd6fb64,501082,0,0x0,8
tick,0x7ff90cd6fb64,516924,0,0x0,8
tick,0x7ff90cd6fb64,532862,0,0x0,8
tick,0x7ff90cd6fb64,548876,0,0x0,8
tick,0x7ff90cd6fb64,564755,0,0x0,8
tick,0x7ff90cd6fb64,579706,0,0x0,8
tick,0x7ff90cd6fb64,595707,0,0x0,8
tick,0x7ff90cd6fb64,611611,0,0x0,8
tick,0x7ff90cd6fb64,627602,0,0x0,8
tick,0x7ff90cd6fb64,642600,0,0x0,8
tick,0x7ff90cd6fb64,658531,0,0x0,8
tick,0x7ff90cd6fb64,674535,0,0x0,8
tick,0x7ff90cd6fb64,690363,0,0x0,8
tick,0x7ff90cd6fb64,705891,0,0x0,8
tick,0x7ff90cd6fb64,721679,0,0x0,8
tick,0x7ff90cd6fb64,737180,0,0x0,8
tick,0x7ff90cd6fb64,752699,0,0x0,8
tick,0x7ff90cd6fb64,768654,0,0x0,8
tick,0x7ff90cd6fb64,784570,0,0x0,8
tick,0x7ff90cd6fb64,800654,0,0x0,8
tick,0x7ff90cd6fb64,816616,0,0x0,8
tick,0x7ff90cd6fb64,832573,0,0x0,8
tick,0x7ff90cd6fb64,847445,0,0x0,8
tick,0x7ff90cd6fb64,863390,0,0x0,8
tick,0x7ff90cd6fb64,879235,0,0x0,8
tick,0x7ff90cd6fb64,895280,0,0x0,8
tick,0x7ff90cd6fb64,911237,0,0x0,8
tick,0x7ff90cd6fb64,927107,0,0x0,8
tick,0x7ff90cd6fb64,943081,0,0x0,8
tick,0x7ff90cd6fb64,959099,0,0x0,8
tick,0x7ff90cd6fb64,975062,0,0x0,8
tick,0x7ff90cd6fb64,991036,0,0x0,8
tick,0x7ff90cd6fb64,1006928,0,0x0,8
tick,0x7ff90cd6fb64,1022906,0,0x0,8
tick,0x7ff90cd6fb64,1047117,0,0x0,8
tick,0x7ff90cd6fb64,1053909,0,0x0,8
tick,0x7ff90cd6fb64,1069987,0,0x0,8
tick,0x7ff90cd6fb64,1085720,0,0x0,8
tick,0x7ff90cd6fb64,1101678,0,0x0,8
tick,0x7ff90cd6fb64,1117549,0,0x0,8
tick,0x7ff90cd6fb64,1133889,0,0x0,8
tick,0x7ff90cd6fb64,1148536,0,0x0,8
tick,0x7ff90cd6fb64,1163514,0,0x0,8
tick,0x7ff90cd6fb64,1179371,0,0x0,8
tick,0x7ff90cd6fb64,1195465,0,0x0,8
tick,0x7ff90cd6fb64,1210351,0,0x0,8
tick,0x7ff90cd6fb64,1226311,0,0x0,8
tick,0x7ff90cd6fb64,1242256,0,0x0,8
tick,0x7ff90cd6fb64,1258307,0,0x0,8
tick,0x7ff90cd6fb64,1274182,0,0x0,8
tick,0x7ff90cd6fb64,1290125,0,0x0,8
tick,0x7ff90cd6fb64,1306283,0,0x0,8
tick,0x7ff90cd6fb64,1321190,0,0x0,8
tick,0x7ff90cd6fb64,1336101,0,0x0,8
tick,0x7ff90cd6fb64,1352008,0,0x0,8
tick,0x7ff90cd6fb64,1366923,0,0x0,8
tick,0x7ff90cd6fb64,1383051,0,0x0,8
tick,0x7ff90cd6fb64,1398172,0,0x0,8
tick,0x7ff90cd6fb64,1413818,0,0x0,8
tick,0x7ff90cd6fb64,1429792,0,0x0,8
tick,0x7ff90cd6fb64,1445873,0,0x0,8
tick,0x7ff90cd6fb64,1461737,0,0x0,8
tick,0x7ff90cd6fb64,1478107,0,0x0,8
tick,0x7ff90cd6fb64,1493698,0,0x0,8
tick,0x7ff90cd6fb64,1509519,0,0x0,8
tick,0x7ff90cd6fb64,1525494,0,0x0,8
tick,0x7ff90cd6fb64,1541510,0,0x0,8
tick,0x7ff90cd6fb64,1557358,0,0x0,8
tick,0x7ff90cd6fb64,1573460,0,0x0,8
tick,0x7ff90cd6fb64,1588453,0,0x0,8
tick,0x7ff90cd6fb64,1604450,0,0x0,8
tick,0x7ff90cd6fb64,1620299,0,0x0,8
tick,0x7ff90cd6fb64,1636271,0,0x0,8
tick,0x7ff90cd6fb64,1652123,0,0x0,8
tick,0x7ff90cd6fb64,1668195,0,0x0,8
tick,0x7ff90cd6fb64,1689690,0,0x0,8
tick,0x7ff90cd6fb64,1698011,0,0x0,8
tick,0x7ff90cd6fb64,1713108,0,0x0,8
tick,0x7ff90cd6fb64,1729304,0,0x0,8
tick,0x7ff90cd6fb64,1745039,0,0x0,8
tick,0x7ff90cd6fb64,1761003,0,0x0,8
tick,0x7ff90cd6fb64,1776883,0,0x0,8
tick,0x7ff90cd6fb64,1791866,0,0x0,8
tick,0x7ff90cd6fb64,1807380,0,0x0,8
tick,0x7ff90cd6fb64,1823349,0,0x0,8
tick,0x7ff90cd6fb64,1838350,0,0x0,8
tick,0x7ff90cd6fb64,1853301,0,0x0,8
tick,0x7ff90cd6fb64,1869245,0,0x0,8
tick,0x7ff90cd6fb64,1885280,0,0x0,8
tick,0x7ff90cd6fb64,1901118,0,0x0,8
tick,0x7ff90cd6fb64,1917308,0,0x0,8
tick,0x7ff90cd6fb64,1932038,0,0x0,8
tick,0x7ff90cd6fb64,1948043,0,0x0,8
tick,0x7ff90cd6fb64,1962962,0,0x0,8
tick,0x7ff90cd6fb64,1978973,0,0x0,8
tick,0x7ff90cd6fb64,1994906,0,0x0,8
tick,0x7ff90cd6fb64,2010608,0,0x0,8
tick,0x7ff90cd6fb64,2026582,0,0x0,8
tick,0x7ff90cd6fb64,2042545,0,0x0,8
tick,0x7ff90cd6fb64,2058445,0,0x0,8
tick,0x7ff90cd6fb64,2074415,0,0x0,8
tick,0x7ff90cd6fb64,2089408,0,0x0,8
tick,0x7ff90cd6fb64,2105654,0,0x0,8
tick,0x7ff90cd6fb64,2121344,0,0x0,8
tick,0x7ff90cd6fb64,2136295,0,0x0,8
tick,0x7ff90cd6fb64,2151224,0,0x0,8
tick,0x7ff90cd6fb64,2167247,0,0x0,8
tick,0x7ff90cd6fb64,2182218,0,0x0,8
tick,0x7ff90cd6fb64,2198353,0,0x0,8
tick,0x7ff90cd6fb64,2214059,0,0x0,8
tick,0x7ff90cd6fb64,2230336,0,0x0,8
tick,0x7ff90cd6fb64,2246070,0,0x0,8
tick,0x7ff90cd6fb64,2261923,0,0x0,8
tick,0x7ff90cd6fb64,2277877,0,0x0,8
tick,0x7ff90cd6fb64,2294072,0,0x0,8
tick,0x7ff90cd6fb64,2309843,0,0x0,8
tick,0x7ff90cd6fb64,2334153,0,0x0,8
tick,0x7ff90cd6fb64,2342050,0,0x0,8
tick,0x7ff90cd6fb64,2355905,0,0x0,8
tick,0x7ff90cd6fb64,2370666,0,0x0,8
tick,0x7ff90cd6fb64,2386698,0,0x0,8
tick,0x7ff90cd6fb64,2402777,0,0x0,8
tick,0x7ff90cd6fb64,2417533,0,0x0,8
tick,0x7ff90cd6fb64,2433512,0,0x0,8
tick,0x7ff90cd6fb64,2449435,0,0x0,8
tick,0x7ff90cd6fb64,2464419,0,0x0,8
tick,0x7ff90cd6fb64,2480400,0,0x0,8
tick,0x7ff90cd6fb64,2496390,0,0x0,8
tick,0x7ff90cd6fb64,2512270,0,0x0,8
tick,0x7ff90cd6fb64,2528260,0,0x0,8
tick,0x7ff90cd6fb64,2544186,0,0x0,8
tick,0x7ff90cd6fb64,2560282,0,0x0,8
tick,0x7ff90cd6fb64,2576219,0,0x0,8
tick,0x7ff90cd6fb64,2592180,0,0x0,8
tick,0x7ff90cd6fb64,2608162,0,0x0,8
tick,0x7ff90cd6fb64,2623134,0,0x0,8
tick,0x7ff90cd6fb64,2638044,0,0x0,8
tick,0x7ff90cd6fb64,2654084,0,0x0,8
tick,0x7ff90cd6fb64,2669037,0,0x0,8
tick,0x7ff90cd6fb64,2684856,0,0x0,8
tick,0x7ff90cd6fb64,2700077,0,0x0,8
tick,0x7ff90cd6fb64,2715906,0,0x0,8
tick,0x7ff90cd6fb64,2732014,0,0x0,8
tick,0x7ff90cd6fb64,2747736,0,0x0,8
tick,0x7ff90cd6fb64,2763964,0,0x0,8
tick,0x7ff90cd6fb64,2779751,0,0x0,8
tick,0x7ff90cd6fb64,2795737,0,0x0,8
tick,0x7ff90cd6fb64,2811583,0,0x0,8
tick,0x7ff90cd6fb64,2827489,0,0x0,8
tick,0x7ff90cd6fb64,2843532,0,0x0,8
tick,0x7ff90cd6fb64,2859454,0,0x0,8
tick,0x7ff90cd6fb64,2875287,0,0x0,8
tick,0x7ff90cd6fb64,2891361,0,0x0,8
tick,0x7ff90cd6fb64,2906269,0,0x0,8
tick,0x7ff90cd6fb64,2921263,0,0x0,8
tick,0x7ff90cd6fb64,2937192,0,0x0,8
tick,0x7ff90cd6fb64,2953093,0,0x0,8
tick,0x7ff90cd6fb64,2969237,0,0x0,8
tick,0x7ff90cd6fb64,2985047,0,0x0,8
tick,0x7ff90cd6fb64,3001088,0,0x0,8
tick,0x7ff90cd6fb64,3016997,0,0x0,8
tick,0x7ff90cd6fb64,3032978,0,0x0,8
tick,0x7ff90cd6fb64,3048871,0,0x0,8
tick,0x7ff90cd6fb64,3064783,0,0x0,8
tick,0x7ff90cd6fb64,3080864,0,0x0,8
tick,0x7ff90cd6fb64,3096768,0,0x0,8
tick,0x7ff90cd6fb64,3112778,0,0x0,8
tick,0x7ff90cd6fb64,3128752,0,0x0,8
tick,0x7ff90cd6fb64,3144681,0,0x0,8
tick,0x7ff90cd6fb64,3160693,0,0x0,8
tick,0x7ff90cd6fb64,3175533,0,0x0,8
tick,0x7ff90cd6fb64,3191533,0,0x0,8
tick,0x7ff90cd6fb64,3207509,0,0x0,8
tick,0x7ff90cd6fb64,3222962,0,0x0,8
tick,0x7ff90cd6fb64,3239122,0,0x0,8
tick,0x7ff90cd6fb64,3254887,0,0x0,8
tick,0x7ff90cd6fb64,3271027,0,0x0,8
tick,0x7ff90cd6fb64,3286807,0,0x0,8
tick,0x7ff90cd6fb64,3303062,0,0x0,8
tick,0x7ff90cd6fb64,3318890,0,0x0,8
tick,0x7ff90cd6fb64,3333706,0,0x0,8
tick,0x7ff90cd6fb64,3349663,0,0x0,8
tick,0x7ff90cd6fb64,3365099,0,0x0,8
tick,0x7ff90cd6fb64,3380495,0,0x0,8
tick,0x7ff90cd6fb64,3396545,0,0x0,8
tick,0x7ff90cd6fb64,3412410,0,0x0,8
tick,0x7ff90cd6fb64,3427044,0,0x0,8
tick,0x7ff90cd6fb64,3443019,0,0x0,8
tick,0x7ff90cd6fb64,3458990,0,0x0,8
tick,0x7ff90cd6fb64,3474915,0,0x0,8
tick,0x7ff90cd6fb64,3490860,0,0x0,8
tick,0x7ff90cd6fb64,3506930,0,0x0,8
tick,0x7ff90cd6fb64,3522776,0,0x0,8
tick,0x7ff90cd6fb64,3538764,0,0x0,8
tick,0x7ff90cd6fb64,3553696,0,0x0,8
tick,0x7ff90cd6fb64,3569668,0,0x0,8
tick,0x7ff90cd6fb64,3585646,0,0x0,8
tick,0x7ff90cd6fb64,3601592,0,0x0,8
tick,0x7ff90cd6fb64,3617712,0,0x0,8
tick,0x7ff90cd6fb64,3633703,0,0x0,8
tick,0x7ff90cd6fb64,3649643,0,0x0,8
tick,0x7ff90cd6fb64,3665474,0,0x0,8
tick,0x7ff90cd6fb64,3681607,0,0x0,8
tick,0x7ff90cd6fb64,3697506,0,0x0,8
tick,0x7ff90cd6fb64,3713372,0,0x0,8
tick,0x7ff90cd6fb64,3728543,0,0x0,8
tick,0x7ff90cd6fb64,3743570,0,0x0,8
tick,0x7ff90cd6fb64,3758462,0,0x0,8
tick,0x7ff90cd6fb64,3774350,0,0x0,8
tick,0x7ff90cd6fb64,3790383,0,0x0,8
tick,0x7ff90cd6fb64,3805454,0,0x0,8
tick,0x7ff90cd6fb64,3820391,0,0x0,8
tick,0x7ff90cd6fb64,3836227,0,0x0,8
tick,0x7ff90cd6fb64,3851300,0,0x0,8
tick,0x7ff90cd6fb64,3867256,0,0x0,8
tick,0x7ff90cd6fb64,3883187,0,0x0,8
tick,0x7ff90cd6fb64,3899142,0,0x0,8
tick,0x7ff90cd6fb64,3915109,0,0x0,8
tick,0x7ff90cd6fb64,3930115,0,0x0,8
tick,0x7ff90cd6fb64,3945971,0,0x0,8
tick,0x7ff90cd6fb64,3961914,0,0x0,8
tick,0x7ff90cd6fb64,3976962,0,0x0,8
tick,0x7ff90cd6fb64,3992883,0,0x0,8
tick,0x7ff90cd6fb64,4008887,0,0x0,8
tick,0x7ff90cd6fb64,4024849,0,0x0,8
tick,0x7ff90cd6fb64,4040845,0,0x0,8
tick,0x7ff90cd6fb64,4056720,0,0x0,8
tick,0x7ff90cd6fb64,4072564,0,0x0,8
tick,0x7ff90cd6fb64,4088669,0,0x0,8
tick,0x7ff90cd6fb64,4104675,0,0x0,8
tick,0x7ff90cd6fb64,4120631,0,0x0,8
tick,0x7ff90cd6fb64,4136532,0,0x0,8
tick,0x7ff90cd6fb64,4152551,0,0x0,8
tick,0x7ff90cd6fb64,4168455,0,0x0,8
tick,0x7ff90cd6fb64,4184649,0,0x0,8
tick,0x7ff90cd6fb64,4200333,0,0x0,8
tick,0x7ff90cd6fb64,4216305,0,0x0,8
tick,0x7ff90cd6fb64,4232292,0,0x0,8
tick,0x7ff90cd6fb64,4248341,0,0x0,8
tick,0x7ff90cd6fb64,4264377,0,0x0,8
tick,0x7ff90cd6fb64,4280088,0,0x0,8
tick,0x7ff90cd6fb64,4295210,0,0x0,8
tick,0x7ff90cd6fb64,4311153,0,0x0,8
tick,0x7ff90cd6fb64,4327172,0,0x0,8
tick,0x7ff90cd6fb64,4343150,0,0x0,8
tick,0x7ff90cd6fb64,4359311,0,0x0,8
tick,0x7ff90cd6fb64,4374908,0,0x0,8
tick,0x7ff90cd6fb64,4389861,0,0x0,8
tick,0x7ff90cd6fb64,4405877,0,0x0,8
tick,0x7ff90cd6fb64,4420761,0,0x0,8
tick,0x7ff90cd6fb64,4436098,0,0x0,8
tick,0x7ff90cd6fb64,4450619,0,0x0,8
tick,0x7ff90cd6fb64,4466891,0,0x0,8
tick,0x7ff90cd6fb64,4481651,0,0x0,8
tick,0x7ff90cd6fb64,4496583,0,0x0,8
tick,0x7ff90cd6fb64,4512497,0,0x0,8
tick,0x7ff90cd6fb64,4528481,0,0x0,8
tick,0x7ff90cd6fb64,4544425,0,0x0,8
tick,0x7ff90cd6fb64,4560411,0,0x0,8
tick,0x7ff90cd6fb64,4576282,0,0x0,8
tick,0x7ff90cd6fb64,4592345,0,0x0,8
tick,0x7ff90cd6fb64,4607362,0,0x0,8
tick,0x7ff90cd6fb64,4623248,0,0x0,8
tick,0x7ff90cd6fb64,4639136,0,0x0,8
tick,0x7ff90cd6fb64,4655136,0,0x0,8
tick,0x7ff90cd6fb64,4671069,0,0x0,8
tick,0x7ff90cd6fb64,4687176,0,0x0,8
tick,0x7ff90cd6fb64,4703012,0,0x0,8
tick,0x7ff90cd6fb64,4719079,0,0x0,8
tick,0x7ff90cd6fb64,4735047,0,0x0,8
tick,0x7ff90cd6fb64,4751234,0,0x0,8
tick,0x7ff90cd6fb64,4765938,0,0x0,8
tick,0x7ff90cd6fb64,4781793,0,0x0,8
tick,0x7ff90cd6fb64,4797770,0,0x0,8
tick,0x7ff90cd6fb64,4813663,0,0x0,8
tick,0x7ff90cd6fb64,4829758,0,0x0,8
tick,0x7ff90cd6fb64,4845678,0,0x0,8
tick,0x7ff90cd6fb64,4860753,0,0x0,8
tick,0x7ff90cd6fb64,4876642,0,0x0,8
tick,0x7ff90cd6fb64,4892536,0,0x0,8
tick,0x7ff90cd6fb64,4908490,0,0x0,8
tick,0x7ff90cd6fb64,4923426,0,0x0,8
tick,0x7ff90cd6fb64,4938981,0,0x0,8
tick,0x7ff90cd6fb64,4954838,0,0x0,8
tick,0x7ff90cd6fb64,4970736,0,0x0,8
tick,0x7ff90cd6fb64,4986812,0,0x0,8
tick,0x7ff90cd6fb64,5002723,0,0x0,8
tick,0x7ff90cd6fb64,5018603,0,0x0,8
tick,0x7ff90cd6fb64,5034209,0,0x0,8
tick,0x7ff90cd6fb64,5050219,0,0x0,8
tick,0x7ff90cd6fb64,5066154,0,0x0,8
tick,0x7ff90cd6fb64,5082049,0,0x0,8
tick,0x7ff90cd6fb64,5097976,0,0x0,8
tick,0x7ff90cd6fb64,5114074,0,0x0,8
tick,0x7ff90cd6fb64,5129970,0,0x0,8
tick,0x7ff90cd6fb64,5145945,0,0x0,8
tick,0x7ff90cd6fb64,5162075,0,0x0,8
tick,0x7ff90cd6fb64,5177861,0,0x0,8
tick,0x7ff90cd6fb64,5193849,0,0x0,8
tick,0x7ff90cd6fb64,5209810,0,0x0,8
tick,0x7ff90cd6fb64,5225881,0,0x0,8
tick,0x7ff90cd6fb64,5241887,0,0x0,8
tick,0x7ff90cd6fb64,5257932,0,0x0,8
tick,0x7ff90cd6fb64,5272733,0,0x0,8
tick,0x7ff90cd6fb64,5287658,0,0x0,8
tick,0x7ff90cd6fb64,5303718,0,0x0,8
tick,0x7ff90cd6fb64,5319652,0,0x0,8
tick,0x7ff90cd6fb64,5335494,0,0x0,8
tick,0x7ff90cd6fb64,5351477,0,0x0,8
tick,0x7ff90cd6fb64,5367513,0,0x0,8
tick,0x7ff90cd6fb64,5383260,0,0x0,8
tick,0x7ff90cd6fb64,5399304,0,0x0,8
tick,0x7ff90cd6fb64,5415161,0,0x0,8
tick,0x7ff90cd6fb64,5430313,0,0x0,8
tick,0x7ff90cd6fb64,5446348,0,0x0,8
tick,0x7ff90cd6fb64,5462215,0,0x0,8
tick,0x7ff90cd6fb64,5478251,0,0x0,8
tick,0x7ff90cd6fb64,5494184,0,0x0,8
tick,0x7ff90cd6fb64,5510165,0,0x0,8
tick,0x7ff90cd6fb64,5526069,0,0x0,8
tick,0x7ff90cd6fb64,5541992,0,0x0,8
tick,0x7ff90cd6fb64,5557095,0,0x0,8
tick,0x7ff90cd6fb64,5571862,0,0x0,8
tick,0x7ff90cd6fb64,5586842,0,0x0,8
tick,0x7ff90cd6fb64,5602904,0,0x0,8
tick,0x7ff90cd6fb64,5618806,0,0x0,8
tick,0x7ff90cd6fb64,5634861,0,0x0,8
tick,0x7ff90cd6fb64,5650871,0,0x0,8
tick,0x7ff90cd6fb64,5666717,0,0x0,8
tick,0x7ff90cd6fb64,5682676,0,0x0,8
tick,0x7ff90cd6fb64,5698699,0,0x0,8
tick,0x7ff90cd6fb64,5714624,0,0x0,8
tick,0x7ff90cd6fb64,5730563,0,0x0,8
tick,0x7ff90cd6fb64,5746534,0,0x0,8
tick,0x7ff90cd6fb64,5762452,0,0x0,8
tick,0x7ff90cd6fb64,5778445,0,0x0,8
tick,0x7ff90cd6fb64,5794439,0,0x0,8
tick,0x7ff90cd6fb64,5810532,0,0x0,8
tick,0x7ff90cd6fb64,5826366,0,0x0,8
tick,0x7ff90cd6fb64,5842450,0,0x0,8
tick,0x7ff90cd6fb64,5857254,0,0x0,8
tick,0x7ff90cd6fb64,5873165,0,0x0,8
tick,0x7ff90cd6fb64,5888152,0,0x0,8
tick,0x7ff90cd6fb64,5903027,0,0x0,8
tick,0x7ff90cd6fb64,5919091,0,0x0,8
tick,0x7ff90cd6fb64,5935061,0,0x0,8
tick,0x7ff90cd6fb64,5950869,0,0x0,8
tick,0x7ff90cd6fb64,5965942,0,0x0,8
tick,0x7ff90cd6fb64,5981989,0,0x0,8
tick,0x7ff90cd6fb64,5997928,0,0x0,8
tick,0x7ff90cd6fb64,6013784,0,0x0,8
tick,0x7ff90cd6fb64,6029789,0,0x0,8
tick,0x7ff90cd6fb64,6045722,0,0x0,8
tick,0x7ff90cd6fb64,6061697,0,0x0,8
tick,0x7ff90cd6fb64,6077653,0,0x0,8
tick,0x7ff90cd6fb64,6093633,0,0x0,8
tick,0x7ff90cd6fb64,6108648,0,0x0,8
tick,0x7ff90cd6fb64,6124619,0,0x0,8
tick,0x7ff90cd6fb64,6140457,0,0x0,8
tick,0x7ff90cd6fb64,6156448,0,0x0,8
tick,0x7ff90cd6fb64,6172394,0,0x0,8
tick,0x7ff90cd6fb64,6188392,0,0x0,8
tick,0x7ff90cd6fb64,6203562,0,0x0,8
tick,0x7ff90cd6fb64,6219616,0,0x0,8
tick,0x7ff90cd6fb64,6235474,0,0x0,8
tick,0x7ff90cd6fb64,6251350,0,0x0,8
tick,0x7ff90cd6fb64,6267371,0,0x0,8
tick,0x7ff90cd6fb64,6283319,0,0x0,8
tick,0x7ff90cd6fb64,6298980,0,0x0,8
tick,0x7ff90cd6fb64,6315043,0,0x0,8
tick,0x7ff90cd6fb64,6330944,0,0x0,8
tick,0x7ff90cd6fb64,6346841,0,0x0,8
tick,0x7ff90cd6fb64,6362803,0,0x0,8
tick,0x7ff90cd6fb64,6377773,0,0x0,8
tick,0x7ff90cd6fb64,6393683,0,0x0,8
tick,0x7ff90cd6fb64,6408672,0,0x0,8
tick,0x7ff90cd6fb64,6424722,0,0x0,8
tick,0x7ff90cd6fb64,6440684,0,0x0,8
tick,0x7ff90cd6fb64,6455633,0,0x0,8
tick,0x7ff90cd6fb64,6470583,0,0x0,8
tick,0x7ff90cd6fb64,6486533,0,0x0,8
tick,0x7ff90cd6fb64,6502527,0,0x0,8
tick,0x7ff90cd6fb64,6517489,0,0x0,8
tick,0x7ff90cd6fb64,6533473,0,0x0,8
tick,0x7ff90cd6fb64,6549406,0,0x0,8
tick,0x7ff90cd6fb64,6564337,0,0x0,8
tick,0x7ff90cd6fb64,6580309,0,0x0,8
tick,0x7ff90cd6fb64,6596304,0,0x0,8
tick,0x7ff90cd6fb64,6612179,0,0x0,8
tick,0x7ff90cd6fb64,6628235,0,0x0,8
tick,0x7ff90cd6fb64,6644087,0,0x0,8
tick,0x7ff90cd6fb64,6659119,0,0x0,8
tick,0x7ff90cd6fb64,6673998,0,0x0,8
tick,0x7ff90cd6fb64,6689933,0,0x0,8
tick,0x7ff90cd6fb64,6704834,0,0x0,8
tick,0x7ff90cd6fb64,6720791,0,0x0,8
tick,0x7ff90cd6fb64,6736777,0,0x0,8
tick,0x7ff90cd6fb64,6752341,0,0x0,8
tick,0x7ff90cd6fb64,6767299,0,0x0,8
tick,0x7ff90cd6fb64,6782393,0,0x0,8
tick,0x7ff90cd6fb64,6798266,0,0x0,8
tick,0x7ff90cd6fb64,6814238,0,0x0,8
tick,0x7ff90cd6fb64,6830208,0,0x0,8
tick,0x7ff90cd6fb64,6846141,0,0x0,8
tick,0x7ff90cd6fb64,6862112,0,0x0,8
tick,0x7ff90cd6fb64,6878030,0,0x0,8
tick,0x7ff90cd6fb64,6894001,0,0x0,8
tick,0x7ff90cd6fb64,6909975,0,0x0,8
tick,0x7ff90cd6fb64,6925955,0,0x0,8
tick,0x7ff90cd6fb64,6941190,0,0x0,8
tick,0x7ff90cd6fb64,6955761,0,0x0,8
tick,0x7ff90cd6fb64,6971926,0,0x0,8
tick,0x7ff90cd6fb64,6987641,0,0x0,8
tick,0x7ff90cd6fb64,7003681,0,0x0,8
tick,0x7ff90cd6fb64,7019566,0,0x0,8
tick,0x7ff90cd6fb64,7035558,0,0x0,8
tick,0x7ff90cd6fb64,7050956,0,0x0,8
tick,0x7ff90cd6fb64,7066880,0,0x0,8
tick,0x7ff90cd6fb64,7082814,0,0x0,8
tick,0x7ff90cd6fb64,7098778,0,0x0,8
tick,0x7ff90cd6fb64,7114799,0,0x0,8
tick,0x7ff90cd6fb64,7130731,0,0x0,8
tick,0x7ff90cd6fb64,7146681,0,0x0,8
tick,0x7ff90cd6fb64,7162743,0,0x0,8
tick,0x7ff90cd6fb64,7178701,0,0x0,8
tick,0x7ff90cd6fb64,7194708,0,0x0,8
tick,0x7ff90cd6fb64,7210627,0,0x0,8
tick,0x7ff90cd6fb64,7226571,0,0x0,8
tick,0x7ff90cd6fb64,7241475,0,0x0,8
tick,0x7ff90cd6fb64,7257340,0,0x0,8
tick,0x7ff90cd6fb64,7272382,0,0x0,8
tick,0x7ff90cd6fb64,7288476,0,0x0,8
tick,0x7ff90cd6fb64,7304288,0,0x0,8
tick,0x7ff90cd6fb64,7320263,0,0x0,8
tick,0x7ff90cd6fb64,7336161,0,0x0,8
tick,0x7ff90cd6fb64,7352119,0,0x0,8
tick,0x7ff90cd6fb64,7368046,0,0x0,8
tick,0x7ff90cd6fb64,7384151,0,0x0,8
tick,0x7ff90cd6fb64,7400100,0,0x0,8
tick,0x7ff90cd6fb64,7415974,0,0x0,8
tick,0x7ff90cd6fb64,7432003,0,0x0,8
tick,0x7ff90cd6fb64,7446866,0,0x0,8
tick,0x7ff90cd6fb64,7462906,0,0x0,8
tick,0x7ff90cd6fb64,7478789,0,0x0,8
tick,0x7ff90cd6fb64,7494777,0,0x0,8
tick,0x7ff90cd6fb64,7509685,0,0x0,8
tick,0x7ff90cd6fb64,7525662,0,0x0,8
tick,0x7ff90cd6fb64,7540686,0,0x0,8
tick,0x7ff90cd6fb64,7556540,0,0x0,8
tick,0x7ff90cd6fb64,7572585,0,0x0,8
tick,0x7ff90cd6fb64,7588575,0,0x0,8
tick,0x7ff90cd6fb64,7604585,0,0x0,8
tick,0x7ff90cd6fb64,7619510,0,0x0,8
tick,0x7ff90cd6fb64,7635464,0,0x0,8
tick,0x7ff90cd6fb64,7650805,0,0x0,8
tick,0x7ff90cd6fb64,7666350,0,0x0,8
tick,0x7ff90cd6fb64,7682444,0,0x0,8
tick,0x7ff90cd6fb64,7698219,0,0x0,8
tick,0x7ff90cd6fb64,7714132,0,0x0,8
tick,0x7ff90cd6fb64,7730135,0,0x0,8
tick,0x7ff90cd6fb64,7746181,0,0x0,8
tick,0x7ff90cd6fb64,7762103,0,0x0,8
tick,0x7ff90cd6fb64,7777964,0,0x0,8
tick,0x7ff90cd6fb64,7793049,0,0x0,8
tick,0x7ff90cd6fb64,7809130,0,0x0,8
tick,0x7ff90cd6fb64,7824864,0,0x0,8
tick,0x7ff90cd6fb64,7839911,0,0x0,8
tick,0x7ff90cd6fb64,7855892,0,0x0,8
tick,0x7ff90cd6fb64,7871869,0,0x0,8
tick,0x7ff90cd6fb64,7886648,0,0x0,8
tick,0x7ff90cd6fb64,7902690,0,0x0,8
tick,0x7ff90cd6fb64,7918632,0,0x0,8
tick,0x7ff90cd6fb64,7934581,0,0x0,8
tick,0x7ff90cd6fb64,7950557,0,0x0,8
tick,0x7ff90cd6fb64,7965561,0,0x0,8
tick,0x7ff90cd6fb64,7981479,0,0x0,8
tick,0x7ff90cd6fb64,7997371,0,0x0,8
tick,0x7ff90cd6fb64,8013472,0,0x0,8
tick,0x7ff90cd6fb64,8029443,0,0x0,8
tick,0x7ff90cd6fb64,8045326,0,0x0,8
tick,0x7ff90cd6fb64,8060347,0,0x0,8
tick,0x7ff90cd6fb64,8076231,0,0x0,8
tick,0x7ff90cd6fb64,8092203,0,0x0,8
tick,0x7ff90cd6fb64,8108133,0,0x0,8
tick,0x7ff90cd6fb64,8124101,0,0x0,8
tick,0x7ff90cd6fb64,8140062,0,0x0,8
tick,0x7ff90cd6fb64,8154994,0,0x0,8
tick,0x7ff90cd6fb64,8170181,0,0x0,8
tick,0x7ff90cd6fb64,8186000,0,0x0,8
tick,0x7ff90cd6fb64,8202134,0,0x0,8
tick,0x7ff90cd6fb64,8217883,0,0x0,8
tick,0x7ff90cd6fb64,8234011,0,0x0,8
tick,0x7ff90cd6fb64,8249652,0,0x0,8
tick,0x7ff90cd6fb64,8265634,0,0x0,8
tick,0x7ff90cd6fb64,8280706,0,0x0,8
tick,0x7ff90cd6fb64,8296564,0,0x0,8
tick,0x7ff90cd6fb64,8312435,0,0x0,8
tick,0x7ff90cd6fb64,8328423,0,0x0,8
tick,0x7ff90cd6fb64,8344450,0,0x0,8
tick,0x7ff90cd6fb64,8360381,0,0x0,8
tick,0x7ff90cd6fb64,8376296,0,0x0,8
tick,0x7ff90cd6fb64,8392172,0,0x0,8
tick,0x7ff90cd6fb64,8408123,0,0x0,8
tick,0x7ff90cd6fb64,8423158,0,0x0,8
tick,0x7ff90cd6fb64,8438983,0,0x0,8
tick,0x7ff90cd6fb64,8454933,0,0x0,8
tick,0x7ff90cd6fb64,8469934,0,0x0,8
tick,0x7ff90cd6fb64,8486045,0,0x0,8
tick,0x7ff90cd6fb64,8501860,0,0x0,8
tick,0x7ff90cd6fb64,8517797,0,0x0,8
tick,0x7ff90cd6fb64,8532761,0,0x0,8
tick,0x7ff90cd6fb64,8548352,0,0x0,8
tick,0x7ff90cd6fb64,8564238,0,0x0,8
tick,0x7ff90cd6fb64,8580239,0,0x0,8
tick,0x7ff90cd6fb64,8596137,0,0x0,8
tick,0x7ff90cd6fb64,8612213,0,0x0,8
tick,0x7ff90cd6fb64,8628069,0,0x0,8
tick,0x7ff90cd6fb64,8642990,0,0x0,8
tick,0x7ff90cd6fb64,8659031,0,0x0,8
tick,0x7ff90cd6fb64,8675021,0,0x0,8
tick,0x7ff90cd6fb64,8690851,0,0x0,8
tick,0x7ff90cd6fb64,8706852,0,0x0,8
tick,0x7ff90cd6fb64,8721755,0,0x0,8
tick,0x7ff90cd6fb64,8736781,0,0x0,8
tick,0x7ff90cd6fb64,8752738,0,0x0,8
tick,0x7ff90cd6fb64,8768653,0,0x0,8
tick,0x7ff90cd6fb64,8784702,0,0x0,8
tick,0x7ff90cd6fb64,8800541,0,0x0,8
tick,0x7ff90cd6fb64,8816707,0,0x0,8
tick,0x7ff90cd6fb64,8832479,0,0x0,8
tick,0x7ff90cd6fb64,8848527,0,0x0,8
tick,0x7ff90cd6fb64,8864534,0,0x0,8
tick,0x7ff90cd6fb64,8880432,0,0x0,8
tick,0x7ff90cd6fb64,8896419,0,0x0,8
tick,0x7ff90cd6fb64,8912263,0,0x0,8
tick,0x7ff90cd6fb64,8928266,0,0x0,8
tick,0x7ff90cd6fb64,8944285,0,0x0,8
tick,0x7ff90cd6fb64,8960188,0,0x0,8
tick,0x7ff90cd6fb64,8975290,0,0x0,8
tick,0x7ff90cd6fb64,8991168,0,0x0,8
tick,0x7ff90cd6fb64,9006153,0,0x0,8
tick,0x7ff90cd6fb64,9021048,0,0x0,8
tick,0x7ff90cd6fb64,9037079,0,0x0,8
tick,0x7ff90cd6fb64,9053026,0,0x0,8
tick,0x7ff90cd6fb64,9068034,0,0x0,8
tick,0x7ff90cd6fb64,9084077,0,0x0,8
tick,0x7ff90cd6fb64,9100066,0,0x0,8
tick,0x7ff90cd6fb64,9114837,0,0x0,8
tick,0x7ff90cd6fb64,9130787,0,0x0,8
tick,0x7ff90cd6fb64,9146821,0,0x0,8
tick,0x7ff90cd6fb64,9162624,0,0x0,8
tick,0x7ff90cd6fb64,9178786,0,0x0,8
tick,0x7ff90cd6fb64,9193517,0,0x0,8
tick,0x7ff90cd6fb64,9209434,0,0x0,8
tick,0x7ff90cd6fb64,9225488,0,0x0,8
tick,0x7ff90cd6fb64,9241371,0,0x0,8
tick,0x7ff90cd6fb64,9256527,0,0x0,8
tick,0x7ff90cd6fb64,9272536,0,0x0,8
tick,0x7ff90cd6fb64,9288489,0,0x0,8
tick,0x7ff90cd6fb64,9303916,0,0x0,8
tick,0x7ff90cd6fb64,9319371,0,0x0,8
tick,0x7ff90cd6fb64,9334596,0,0x0,8
tick,0x7ff90cd6fb64,9350241,0,0x0,8
tick,0x7ff90cd6fb64,9366441,0,0x0,8
tick,0x7ff90cd6fb64,9382291,0,0x0,8
tick,0x7ff90cd6fb64,9398072,0,0x0,8
tick,0x7ff90cd6fb64,9413953,0,0x0,8
tick,0x7ff90cd6fb64,9428938,0,0x0,8
tick,0x7ff90cd6fb64,9444818,0,0x0,8
tick,0x7ff90cd6fb64,9460779,0,0x0,8
tick,0x7ff90cd6fb64,9475924,0,0x0,8
tick,0x7ff90cd6fb64,9491703,0,0x0,8
tick,0x7ff90cd6fb64,9507696,0,0x0,8
tick,0x7ff90cd6fb64,9523715,0,0x0,8
tick,0x7ff90cd6fb64,9538677,0,0x0,8
tick,0x7ff90cd6fb64,9554616,0,0x0,8
tick,0x7ff90cd6fb64,9569622,0,0x0,8
tick,0x7ff90cd6fb64,9584540,0,0x0,8
tick,0x7ff90cd6fb64,9600542,0,0x0,8
tick,0x7ff90cd6fb64,9616446,0,0x0,8
tick,0x7ff90cd6fb64,9632397,0,0x0,8
tick,0x7ff90cd6fb64,9648297,0,0x0,8
tick,0x7ff90cd6fb64,9664402,0,0x0,8
tick,0x7ff90cd6fb64,9680288,0,0x0,8
tick,0x7ff90cd6fb64,9696374,0,0x0,8
tick,0x7ff90cd6fb64,9712255,0,0x0,8
tick,0x7ff90cd6fb64,9728243,0,0x0,8
tick,0x7ff90cd6fb64,9744181,0,0x0,8
tick,0x7ff90cd6fb64,9760279,0,0x0,8
tick,0x7ff90cd6fb64,9776189,0,0x0,8
tick,0x7ff90cd6fb64,9792265,0,0x0,8
tick,0x7ff90cd6fb64,9808563,0,0x0,8
tick,0x7ff90cd6fb64,9824093,0,0x0,8
tick,0x7ff90cd6fb64,9838896,0,0x0,8
tick,0x7ff90cd6fb64,9853919,0,0x0,8
tick,0x7ff90cd6fb64,9869353,0,0x0,8
tick,0x7ff90cd6fb64,9885274,0,0x0,8
tick,0x7ff90cd6fb64,9901323,0,0x0,8
tick,0x7ff90cd6fb64,9917239,0,0x0,8
tick,0x7ff90cd6fb64,9933232,0,0x0,8
tick,0x7ff90cd6fb64,9949148,0,0x0,8
tick,0x7ff90cd6fb64,9964169,0,0x0,8
tick,0x7ff90cd6fb64,9980089,0,0x0,8
tick,0x7ff90cd6fb64,9995982,0,0x0,8
tick,0x7ff90cd6fb64,10011929,0,0x0,8
tick,0x7ff90cd6fb64,10027897,0,0x0,8
tick,0x7ff90cd6fb64,10043918,0,0x0,8
tick,0x7ff90cd6fb64,10059756,0,0x0,8
tick,0x7ff90cd6fb64,10075815,0,0x0,8
tick,0x7ff90cd6fb64,10090703,0,0x0,8
tick,0x7ff90cd6fb64,10106640,0,0x0,8
tick,0x7ff90cd6fb64,10122713,0,0x0,8
tick,0x7ff90cd6fb64,10137586,0,0x0,8
tick,0x7ff90cd6fb64,10152614,0,0x0,8
tick,0x7ff90cd6fb64,10168546,0,0x0,8
tick,0x7ff90cd6fb64,10184570,0,0x0,8
tick,0x7ff90cd6fb64,10200420,0,0x0,8
tick,0x7ff90cd6fb64,10216441,0,0x0,8
tick,0x7ff90cd6fb64,10232382,0,0x0,8
tick,0x7ff90cd6fb64,10248285,0,0x0,8
tick,0x7ff90cd6fb64,10264286,0,0x0,8
tick,0x7ff90cd6fb64,10280285,0,0x0,8
tick,0x7ff90cd6fb64,10296201,0,0x0,8
tick,0x7ff90cd6fb64,10312081,0,0x0,8
tick,0x7ff90cd6fb64,10328001,0,0x0,8
tick,0x7ff90cd6fb64,10344114,0,0x0,8
tick,0x7ff90cd6fb64,10359978,0,0x0,8
tick,0x7ff90cd6fb64,10375056,0,0x0,8
tick,0x7ff90cd6fb64,10390837,0,0x0,8
tick,0x7ff90cd6fb64,10405935,0,0x0,8
tick,0x7ff90cd6fb64,10421856,0,0x0,8
tick,0x7ff90cd6fb64,10436712,0,0x0,8
tick,0x7ff90cd6fb64,10452836,0,0x0,8
tick,0x7ff90cd6fb64,10467736,0,0x0,8
tick,0x7ff90cd6fb64,10482713,0,0x0,8
tick,0x7ff90cd6fb64,10498613,0,0x0,8
tick,0x7ff90cd6fb64,10514827,0,0x0,8
tick,0x7ff90cd6fb64,10530652,0,0x0,8
tick,0x7ff90cd6fb64,10545522,0,0x0,8
tick,0x7ff90cd6fb64,10562144,0,0x0,8
tick,0x7ff90cd6fb64,10577479,0,0x0,8
tick,0x7ff90cd6fb64,10592338,0,0x0,8
tick,0x7ff90cd6fb64,10608292,0,0x0,8
tick,0x7ff90cd6fb64,10623384,0,0x0,8
tick,0x7ff90cd6fb64,10639326,0,0x0,8
tick,0x7ff90cd6fb64,10654291,0,0x0,8
tick,0x7ff90cd6fb64,10670325,0,0x0,8
tick,0x7ff90cd6fb64,10686156,0,0x0,8
tick,0x7ff90cd6fb64,10701120,0,0x0,8
tick,0x7ff90cd6fb64,10717124,0,0x0,8
tick,0x7ff90cd6fb64,10733047,0,0x0,8
tick,0x7ff90cd6fb64,10748052,0,0x0,8
tick,0x7ff90cd6fb64,10764029,0,0x0,8
tick,0x7ff90cd6fb64,10779871,0,0x0,8
tick,0x7ff90cd6fb64,10795846,0,0x0,8
tick,0x7ff90cd6fb64,10810841,0,0x0,8
tick,0x7ff90cd6fb64,10826802,0,0x0,8
tick,0x7ff90cd6fb64,10842759,0,0x0,8
tick,0x7ff90cd6fb64,10858726,0,0x0,8
tick,0x7ff90cd6fb64,10874696,0,0x0,8
tick,0x7ff90cd6fb64,10889630,0,0x0,8
tick,0x7ff90cd6fb64,10904552,0,0x0,8
tick,0x7ff90cd6fb64,10919452,0,0x0,8
tick,0x7ff90cd6fb64,10934567,0,0x0,8
tick,0x7ff90cd6fb64,10950421,0,0x0,8
tick,0x7ff90cd6fb64,10966495,0,0x0,8
tick,0x7ff90cd6fb64,10982393,0,0x0,8
tick,0x7ff90cd6fb64,10997217,0,0x0,8
tick,0x7ff90cd6fb64,11013173,0,0x0,8
tick,0x7ff90cd6fb64,11029138,0,0x0,8
tick,0x7ff90cd6fb64,11045232,0,0x0,8
tick,0x7ff90cd6fb64,11060239,0,0x0,8
tick,0x7ff90cd6fb64,11076127,0,0x0,8
tick,0x7ff90cd6fb64,11091129,0,0x0,8
tick,0x7ff90cd6fb64,11105961,0,0x0,8
tick,0x7ff90cd6fb64,11122117,0,0x0,8
tick,0x7ff90cd6fb64,11136931,0,0x0,8
tick,0x7ff90cd6fb64,11152906,0,0x0,8
tick,0x7ff90cd6fb64,11168973,0,0x0,8
tick,0x7ff90cd6fb64,11184876,0,0x0,8
tick,0x7ff90cd6fb64,11201143,0,0x0,8
tick,0x7ff90cd6fb64,11217326,0,0x0,8
tick,0x7ff90cd6fb64,11232754,0,0x0,8
tick,0x7ff90cd6fb64,11248665,0,0x0,8
tick,0x7ff90cd6fb64,11264543,0,0x0,8
tick,0x7ff90cd6fb64,11280094,0,0x0,8
tick,0x7ff90cd6fb64,11296361,0,0x0,8
tick,0x7ff90cd6fb64,11312167,0,0x0,8
tick,0x7ff90cd6fb64,11327979,0,0x0,8
tick,0x7ff90cd6fb64,11343012,0,0x0,8
tick,0x7ff90cd6fb64,11357924,0,0x0,8
tick,0x7ff90cd6fb64,11372975,0,0x0,8
tick,0x7ff90cd6fb64,11387884,0,0x0,8
tick,0x7ff90cd6fb64,11402814,0,0x0,8
tick,0x7ff90cd6fb64,11418836,0,0x0,8
tick,0x7ff90cd6fb64,11434915,0,0x0,8
tick,0x7ff90cd6fb64,11450680,0,0x0,8
tick,0x7ff90cd6fb64,11469812,0,0x0,8
tick,0x7ff90cd6fb64,11481738,0,0x0,8
tick,0x7ff90cd6fb64,11496755,0,0x0,8
tick,0x7ff90cd6fb64,11511609,0,0x0,8
tick,0x7ff90cd6fb64,11527597,0,0x0,8
tick,0x7ff90cd6fb64,11543534,0,0x0,8
tick,0x7ff90cd6fb64,11559631,0,0x0,8
tick,0x7ff90cd6fb64,11575040,0,0x0,8
tick,0x7ff90cd6fb64,11591149,0,0x0,8
tick,0x7ff90cd6fb64,11606994,0,0x0,8
tick,0x7ff90cd6fb64,11622152,0,0x0,8
tick,0x7ff90cd6fb64,11636955,0,0x0,8
tick,0x7ff90cd6fb64,11653031,0,0x0,8
tick,0x7ff90cd6fb64,11669036,0,0x0,8
tick,0x7ff90cd6fb64,11684974,0,0x0,8
tick,0x7ff90cd6fb64,11701137,0,0x0,8
tick,0x7ff90cd6fb64,11716807,0,0x0,8
tick,0x7ff90cd6fb64,11732719,0,0x0,8
tick,0x7ff90cd6fb64,11747959,0,0x0,8
tick,0x7ff90cd6fb64,11763589,0,0x0,8
tick,0x7ff90cd6fb64,11778798,0,0x0,8
tick,0x7ff90cd6fb64,11794534,0,0x0,8
tick,0x7ff90cd6fb64,11809678,0,0x0,8
tick,0x7ff90cd6fb64,11825693,0,0x0,8
tick,0x7ff90cd6fb64,11841722,0,0x0,8
tick,0x7ff90cd6fb64,11857429,0,0x0,8
tick,0x7ff90cd6fb64,11872359,0,0x0,8
tick,0x7ff90cd6fb64,11888319,0,0x0,8
tick,0x7ff90cd6fb64,11903237,0,0x0,8
tick,0x7ff90cd6fb64,11919388,0,0x0,8
tick,0x7ff90cd6fb64,11934224,0,0x0,8
tick,0x7ff90cd6fb64,11950318,0,0x0,8
tick,0x7ff90cd6fb64,11966210,0,0x0,8
tick,0x7ff90cd6fb64,11982400,0,0x0,8
tick,0x7ff90cd6fb64,11997186,0,0x0,8
tick,0x7ff90cd6fb64,12012972,0,0x0,8
tick,0x7ff90cd6fb64,12029061,0,0x0,8
tick,0x7ff90cd6fb64,12044933,0,0x0,8
tick,0x7ff90cd6fb64,12061066,0,0x0,8
tick,0x7ff90cd6fb64,12076846,0,0x0,8
tick,0x7ff90cd6fb64,12092683,0,0x0,8
tick,0x7ff90cd6fb64,12108661,0,0x0,8
tick,0x7ff90cd6fb64,12124709,0,0x0,8
tick,0x7ff90cd6fb64,12139661,0,0x0,8
tick,0x7ff90cd6fb64,12155629,0,0x0,8
tick,0x7ff90cd6fb64,12171585,0,0x0,8
tick,0x7ff90cd6fb64,12186525,0,0x0,8
tick,0x7ff90cd6fb64,12202461,0,0x0,8
tick,0x7ff90cd6fb64,12218574,0,0x0,8
tick,0x7ff90cd6fb64,12234428,0,0x0,8
tick,0x7ff90cd6fb64,12250605,0,0x0,8
tick,0x7ff90cd6fb64,12266259,0,0x0,8
tick,0x7ff90cd6fb64,12282160,0,0x0,8
tick,0x7ff90cd6fb64,12298201,0,0x0,8
tick,0x7ff90cd6fb64,12314213,0,0x0,8
tick,0x7ff90cd6fb64,12330130,0,0x0,8
tick,0x7ff90cd6fb64,12346035,0,0x0,8
tick,0x7ff90cd6fb64,12361971,0,0x0,8
tick,0x7ff90cd6fb64,12377987,0,0x0,8
tick,0x7ff90cd6fb64,12393860,0,0x0,8
tick,0x7ff90cd6fb64,12409969,0,0x0,8
tick,0x7ff90cd6fb64,12425803,0,0x0,8
tick,0x7ff90cd6fb64,12441908,0,0x0,8
tick,0x7ff90cd6fb64,12456661,0,0x0,8
tick,0x7ff90cd6fb64,12472765,0,0x0,8
tick,0x7ff90cd6fb64,12487750,0,0x0,8
tick,0x7ff90cd6fb64,12503672,0,0x0,8
tick,0x7ff90cd6fb64,12519690,0,0x0,8
tick,0x7ff90cd6fb64,12535572,0,0x0,8
tick,0x7ff90cd6fb64,12550492,0,0x0,8
tick,0x7ff90cd6fb64,12566543,0,0x0,8
tick,0x7ff90cd6fb64,12582444,0,0x0,8
tick,0x7ff90cd6fb64,12598516,0,0x0,8
tick,0x7ff90cd6fb64,12614292,0,0x0,8
tick,0x7ff90cd6fb64,12629389,0,0x0,8
tick,0x7ff90cd6fb64,12645335,0,0x0,8
tick,0x7ff90cd6fb64,12661283,0,0x0,8
tick,0x7ff90cd6fb64,12677155,0,0x0,8
tick,0x7ff90cd6fb64,12693208,0,0x0,8
tick,0x7ff90cd6fb64,12709141,0,0x0,8
tick,0x7ff90cd6fb64,12725105,0,0x0,8
tick,0x7ff90cd6fb64,12741018,0,0x0,8
tick,0x7ff90cd6fb64,12756996,0,0x0,8
tick,0x7ff90cd6fb64,12773076,0,0x0,8
tick,0x7ff90cd6fb64,12788964,0,0x0,8
tick,0x7ff90cd6fb64,12803867,0,0x0,8
tick,0x7ff90cd6fb64,12820045,0,0x0,8
tick,0x7ff90cd6fb64,12835804,0,0x0,8
tick,0x7ff90cd6fb64,12851957,0,0x0,8
tick,0x7ff90cd6fb64,12867619,0,0x0,8
tick,0x7ff90cd6fb64,12883797,0,0x0,8
tick,0x7ff90cd6fb64,12899561,0,0x0,8
tick,0x7ff90cd6fb64,12915485,0,0x0,8
tick,0x7ff90cd6fb64,12931547,0,0x0,8
tick,0x7ff90cd6fb64,12947361,0,0x0,8
tick,0x7ff90cd6fb64,12963459,0,0x0,8
tick,0x7ff90cd6fb64,12978840,0,0x0,8
tick,0x7ff90cd6fb64,12994942,0,0x0,8
tick,0x7ff90cd6fb64,13010802,0,0x0,8
tick,0x7ff90cd6fb64,13026805,0,0x0,8
tick,0x7ff90cd6fb64,13042718,0,0x0,8
tick,0x7ff90cd6fb64,13058808,0,0x0,8
tick,0x7ff90cd6fb64,13074674,0,0x0,8
tick,0x7ff90cd6fb64,13090285,0,0x0,8
tick,0x7ff90cd6fb64,13106245,0,0x0,8
tick,0x7ff90cd6fb64,13121196,0,0x0,8
tick,0x7ff90cd6fb64,13136156,0,0x0,8
tick,0x7ff90cd6fb64,13152130,0,0x0,8
tick,0x7ff90cd6fb64,13168159,0,0x0,8
tick,0x7ff90cd6fb64,13184051,0,0x0,8
tick,0x7ff90cd6fb64,13200422,0,0x0,8
tick,0x7ff90cd6fb64,13215920,0,0x0,8
tick,0x7ff90cd6fb64,13231909,0,0x0,8
tick,0x7ff90cd6fb64,13247976,0,0x0,8
tick,0x7ff90cd6fb64,13263828,0,0x0,8
tick,0x7ff90cd6fb64,13279869,0,0x0,8
tick,0x7ff90cd6fb64,13295963,0,0x0,8
tick,0x7ff90cd6fb64,13311898,0,0x0,8
tick,0x7ff90cd6fb64,13327989,0,0x0,8
tick,0x7ff90cd6fb64,13344147,0,0x0,8
tick,0x7ff90cd6fb64,13359802,0,0x0,8
tick,0x7ff90cd6fb64,13375784,0,0x0,8
tick,0x7ff90cd6fb64,13391875,0,0x0,8
tick,0x7ff90cd6fb64,13407841,0,0x0,8
tick,0x7ff90cd6fb64,13423825,0,0x0,8
tick,0x7ff90cd6fb64,13438576,0,0x0,8
tick,0x7ff90cd6fb64,13453560,0,0x0,8
tick,0x7ff90cd6fb64,13469397,0,0x0,8
tick,0x7ff90cd6fb64,13485418,0,0x0,8
tick,0x7ff90cd6fb64,13501379,0,0x0,8
tick,0x7ff90cd6fb64,13516340,0,0x0,8
tick,0x7ff90cd6fb64,13532330,0,0x0,8
tick,0x7ff90cd6fb64,13547359,0,0x0,8
tick,0x7ff90cd6fb64,13563247,0,0x0,8
tick,0x7ff90cd6fb64,13579204,0,0x0,8
tick,0x7ff90cd6fb64,13595096,0,0x0,8
tick,0x7ff90cd6fb64,13611100,0,0x0,8
tick,0x7ff90cd6fb64,13627063,0,0x0,8
tick,0x7ff90cd6fb64,13642995,0,0x0,8
tick,0x7ff90cd6fb64,13659153,0,0x0,8
tick,0x7ff90cd6fb64,13674055,0,0x0,8
tick,0x7ff90cd6fb64,13689768,0,0x0,8
tick,0x7ff90cd6fb64,13704854,0,0x0,8
tick,0x7ff90cd6fb64,13720832,0,0x0,8
tick,0x7ff90cd6fb64,13736701,0,0x0,8
tick,0x7ff90cd6fb64,13752734,0,0x0,8
tick,0x7ff90cd6fb64,13768793,0,0x0,8
tick,0x7ff90cd6fb64,13784805,0,0x0,8
tick,0x7ff90cd6fb64,13801197,0,0x0,8
tick,0x7ff90cd6fb64,13816546,0,0x0,8
tick,0x7ff90cd6fb64,13832543,0,0x0,8
tick,0x7ff90cd6fb64,13848369,0,0x0,8
tick,0x7ff90cd6fb64,13864455,0,0x0,8
tick,0x7ff90cd6fb64,13880376,0,0x0,8
tick,0x7ff90cd6fb64,13896347,0,0x0,8
tick,0x7ff90cd6fb64,13912298,0,0x0,8
tick,0x7ff90cd6fb64,13928478,0,0x0,8
tick,0x7ff90cd6fb64,13944147,0,0x0,8
tick,0x7ff90cd6fb64,13960190,0,0x0,8
tick,0x7ff90cd6fb64,13976065,0,0x0,8
tick,0x7ff90cd6fb64,13991964,0,0x0,8
tick,0x7ff90cd6fb64,14007961,0,0x0,8
tick,0x7ff90cd6fb64,14024050,0,0x0,8
tick,0x7ff90cd6fb64,14039066,0,0x0,8
tick,0x7ff90cd6fb64,14054869,0,0x0,8
tick,0x7ff90cd6fb64,14070870,0,0x0,8
tick,0x7ff90cd6fb64,14086836,0,0x0,8
tick,0x7ff90cd6fb64,14102823,0,0x0,8
tick,0x7ff90cd6fb64,14118692,0,0x0,8
tick,0x7ff90cd6fb64,14134958,0,0x0,8
tick,0x7ff90cd6fb64,14150693,0,0x0,8
tick,0x7ff90cd6fb64,14166741,0,0x0,8
tick,0x7ff90cd6fb64,14182584,0,0x0,8
tick,0x7ff90cd6fb64,14198230,0,0x0,8
tick,0x7ff90cd6fb64,14213899,0,0x0,8
tick,0x7ff90cd6fb64,14228922,0,0x0,8
tick,0x7ff90cd6fb64,14245089,0,0x0,8
tick,0x7ff90cd6fb64,14259778,0,0x0,8
tick,0x7ff90cd6fb64,14275873,0,0x0,8
tick,0x7ff90cd6fb64,14292245,0,0x0,8
tick,0x7ff90cd6fb64,14307722,0,0x0,8
tick,0x7ff90cd6fb64,14322606,0,0x0,8
tick,0x7ff90cd6fb64,14338634,0,0x0,8
tick,0x7ff90cd6fb64,14354626,0,0x0,8
tick,0x7ff90cd6fb64,14369646,0,0x0,8
tick,0x7ff90cd6fb64,14385523,0,0x0,8
tick,0x7ff90cd6fb64,14401100,0,0x0,8
tick,0x7ff90cd6fb64,14416934,0,0x0,8
tick,0x7ff90cd6fb64,14433084,0,0x0,8
tick,0x7ff90cd6fb64,14448894,0,0x0,8
tick,0x7ff90cd6fb64,14464828,0,0x0,8
tick,0x7ff90cd6fb64,14480914,0,0x0,8
tick,0x7ff90cd6fb64,14496510,0,0x0,8
tick,0x7ff90cd6fb64,14512358,0,0x0,8
tick,0x7ff90cd6fb64,14527343,0,0x0,8
tick,0x7ff90cd6fb64,14543357,0,0x0,8
tick,0x7ff90cd6fb64,14559316,0,0x0,8
tick,0x7ff90cd6fb64,14575162,0,0x0,8
tick,0x7ff90cd6fb64,14591224,0,0x0,8
tick,0x7ff90cd6fb64,14606184,0,0x0,8
tick,0x7ff90cd6fb64,14622120,0,0x0,8
tick,0x7ff90cd6fb64,14637058,0,0x0,8
tick,0x7ff90cd6fb64,14652021,0,0x0,8
tick,0x7ff90cd6fb64,14668039,0,0x0,8
tick,0x7ff90cd6fb64,14684010,0,0x0,8
tick,0x7ff90cd6fb64,14700009,0,0x0,8
tick,0x7ff90cd6fb64,14715914,0,0x0,8
tick,0x7ff90cd6fb64,14731755,0,0x0,8
tick,0x7ff90cd6fb64,14747700,0,0x0,8
tick,0x7ff90cd6fb64,14763651,0,0x0,8
tick,0x7ff90cd6fb64,14779607,0,0x0,8
tick,0x7ff90cd6fb64,14795259,0,0x0,8
tick,0x7ff90cd6fb64,14811167,0,0x0,8
tick,0x7ff90cd6fb64,14827104,0,0x0,8
tick,0x7ff90cd6fb64,14843035,0,0x0,8
tick,0x7ff90cd6fb64,14859061,0,0x0,8
tick,0x7ff90cd6fb64,14874993,0,0x0,8
tick,0x7ff90cd6fb64,14889976,0,0x0,8
tick,0x7ff90cd6fb64,14905972,0,0x0,8
tick,0x7ff90cd6fb64,14921947,0,0x0,8
tick,0x7ff90cd6fb64,14937895,0,0x0,8
tick,0x7ff90cd6fb64,14953800,0,0x0,8
tick,0x7ff90cd6fb64,14969852,0,0x0,8
tick,0x7ff90cd6fb64,14985697,0,0x0,8
tick,0x7ff90cd6fb64,15001388,0,0x0,8
tick,0x7ff90cd6fb64,15017203,0,0x0,8
tick,0x7ff90cd6fb64,15033234,0,0x0,8
tick,0x7ff90cd6fb64,15049057,0,0x0,8
tick,0x7ff90cd6fb64,15065031,0,0x0,8
tick,0x7ff90cd6fb64,15080938,0,0x0,8
tick,0x7ff90cd6fb64,15096911,0,0x0,8
tick,0x7ff90cd6fb64,15112938,0,0x0,8
tick,0x7ff90cd6fb64,15128906,0,0x0,8
tick,0x7ff90cd6fb64,15144759,0,0x0,8
tick,0x7ff90cd6fb64,15160725,0,0x0,8
tick,0x7ff90cd6fb64,15176841,0,0x0,8
tick,0x7ff90cd6fb64,15192666,0,0x0,8
tick,0x7ff90cd6fb64,15207717,0,0x0,8
tick,0x7ff90cd6fb64,15223534,0,0x0,8
tick,0x7ff90cd6fb64,15239593,0,0x0,8
tick,0x7ff90cd6fb64,15255561,0,0x0,8
tick,0x7ff90cd6fb64,15271517,0,0x0,8
tick,0x7ff90cd6fb64,15287533,0,0x0,8
tick,0x7ff90cd6fb64,15303498,0,0x0,8
tick,0x7ff90cd6fb64,15318467,0,0x0,8
tick,0x7ff90cd6fb64,15334575,0,0x0,8
tick,0x7ff90cd6fb64,15350342,0,0x0,8
tick,0x7ff90cd6fb64,15366296,0,0x0,8
tick,0x7ff90cd6fb64,15382406,0,0x0,8
tick,0x7ff90cd6fb64,15398269,0,0x0,8
tick,0x7ff90cd6fb64,15414204,0,0x0,8
tick,0x7ff90cd6fb64,15430119,0,0x0,8
tick,0x7ff90cd6fb64,15446099,0,0x0,8
tick,0x7ff90cd6fb64,15462111,0,0x0,8
tick,0x7ff90cd6fb64,15477985,0,0x0,8
tick,0x7ff90cd6fb64,15492978,0,0x0,8
tick,0x7ff90cd6fb64,15508915,0,0x0,8
tick,0x7ff90cd6fb64,15524854,0,0x0,8
tick,0x7ff90cd6fb64,15539905,0,0x0,8
tick,0x7ff90cd6fb64,15556036,0,0x0,8
tick,0x7ff90cd6fb64,15570842,0,0x0,8
tick,0x7ff90cd6fb64,15586740,0,0x0,8
tick,0x7ff90cd6fb64,15602811,0,0x0,8
tick,0x7ff90cd6fb64,15618752,0,0x0,8
tick,0x7ff90cd6fb64,15634820,0,0x0,8
tick,0x7ff90cd6fb64,15650581,0,0x0,8
tick,0x7ff90cd6fb64,15666837,0,0x0,8
tick,0x7ff90cd6fb64,15682449,0,0x0,8
tick,0x7ff90cd6fb64,15698598,0,0x0,8
tick,0x7ff90cd6fb64,15714452,0,0x0,8
tick,0x7ff90cd6fb64,15730408,0,0x0,8
tick,0x7ff90cd6fb64,15746333,0,0x0,8
tick,0x7ff90cd6fb64,15762310,0,0x0,8
tick,0x7ff90cd6fb64,15778203,0,0x0,8
tick,0x7ff90cd6fb64,15794177,0,0x0,8
tick,0x7ff90cd6fb64,15810496,0,0x0,8
tick,0x7ff90cd6fb64,15825113,0,0x0,8
tick,0x7ff90cd6fb64,15840003,0,0x0,8
tick,0x7ff90cd6fb64,15855957,0,0x0,8
tick,0x7ff90cd6fb64,15870917,0,0x0,8
tick,0x7ff90cd6fb64,15886889,0,0x0,8
tick,0x7ff90cd6fb64,15902922,0,0x0,8
tick,0x7ff90cd6fb64,15918946,0,0x0,8
tick,0x7ff90cd6fb64,15934837,0,0x0,8
tick,0x7ff90cd6fb64,15950894,0,0x0,8
tick,0x7ff90cd6fb64,15966654,0,0x0,8
tick,0x7ff90cd6fb64,15982059,0,0x0,8
tick,0x7ff90cd6fb64,15997508,0,0x0,8
tick,0x7ff90cd6fb64,16013392,0,0x0,8
tick,0x7ff90cd6fb64,16029203,0,0x0,8
tick,0x7ff90cd6fb64,16045401,0,0x0,8
tick,0x7ff90cd6fb64,16061071,0,0x0,8
tick,0x7ff90cd6fb64,16077020,0,0x0,8
tick,0x7ff90cd6fb64,16093024,0,0x0,8
tick,0x7ff90cd6fb64,16109023,0,0x0,8
tick,0x7ff90cd6fb64,16125050,0,0x0,8
tick,0x7ff90cd6fb64,16140010,0,0x0,8
tick,0x7ff90cd6fb64,16154882,0,0x0,8
tick,0x7ff90cd6fb64,16169981,0,0x0,8
tick,0x7ff90cd6fb64,16186005,0,0x0,8
tick,0x7ff90cd6fb64,16201891,0,0x0,8
tick,0x7ff90cd6fb64,16217697,0,0x0,8
tick,0x7ff90cd6fb64,16232789,0,0x0,8
tick,0x7ff90cd6fb64,16248673,0,0x0,8
tick,0x7ff90cd6fb64,16264560,0,0x0,8
tick,0x7ff90cd6fb64,16280517,0,0x0,8
tick,0x7ff90cd6fb64,16296767,0,0x0,8
tick,0x7ff90cd6fb64,16312714,0,0x0,8
tick,0x7ff90cd6fb64,16328606,0,0x0,8
tick,0x7ff90cd6fb64,16344606,0,0x0,8
tick,0x7ff90cd6fb64,16360668,0,0x0,8
tick,0x7ff90cd6fb64,16376789,0,0x0,8
tick,0x7ff90cd6fb64,16392495,0,0x0,8
tick,0x7ff90cd6fb64,16408373,0,0x0,8
tick,0x7ff90cd6fb64,16423292,0,0x0,8
tick,0x7ff90cd6fb64,16439429,0,0x0,8
tick,0x7ff90cd6fb64,16455163,0,0x0,8
tick,0x7ff90cd6fb64,16471184,0,0x0,8
tick,0x7ff90cd6fb64,16487141,0,0x0,8
tick,0x7ff90cd6fb64,16503153,0,0x0,8
tick,0x7ff90cd6fb64,16519146,0,0x0,8
tick,0x7ff90cd6fb64,16535006,0,0x0,8
tick,0x7ff90cd6fb64,16551242,0,0x0,8
tick,0x7ff90cd6fb64,16566925,0,0x0,8
tick,0x7ff90cd6fb64,16583071,0,0x0,8
tick,0x7ff90cd6fb64,16598894,0,0x0,8
tick,0x7ff90cd6fb64,16614803,0,0x0,8
tick,0x7ff90cd6fb64,16630788,0,0x0,8
tick,0x7ff90cd6fb64,16646798,0,0x0,8
tick,0x7ff90cd6fb64,16662699,0,0x0,8
tick,0x7ff90cd6fb64,16678738,0,0x0,8
tick,0x7ff90cd6fb64,16694576,0,0x0,8
tick,0x7ff90cd6fb64,16710548,0,0x0,8
tick,0x7ff90cd6fb64,16726466,0,0x0,8
tick,0x7ff90cd6fb64,16742691,0,0x0,8
tick,0x7ff90cd6fb64,16758418,0,0x0,8
tick,0x7ff90cd6fb64,16773411,0,0x0,8
tick,0x7ff90cd6fb64,16789431,0,0x0,8
tick,0x7ff90cd6fb64,16804337,0,0x0,8
tick,0x7ff90cd6fb64,16820237,0,0x0,8
tick,0x7ff90cd6fb64,16836394,0,0x0,8
tick,0x7ff90cd6fb64,16852189,0,0x0,8
tick,0x7ff90cd6fb64,16867130,0,0x0,8
tick,0x7ff90cd6fb64,16883048,0,0x0,8
tick,0x7ff90cd6fb64,16899239,0,0x0,8
tick,0x7ff90cd6fb64,16914978,0,0x0,8
tick,0x7ff90cd6fb64,16931105,0,0x0,8
tick,0x7ff90cd6fb64,16946982,0,0x0,8
tick,0x7ff90cd6fb64,16962868,0,0x0,8
tick,0x7ff90cd6fb64,16978962,0,0x0,8
tick,0x7ff90cd6fb64,16993790,0,0x0,8
tick,0x7ff90cd6fb64,17009791,0,0x0,8
tick,0x7ff90cd6fb64,17025856,0,0x0,8
tick,0x7ff90cd6fb64,17041875,0,0x0,8
tick,0x7ff90cd6fb64,17057879,0,0x0,8
tick,0x7ff90cd6fb64,17072562,0,0x0,8
tick,0x7ff90cd6fb64,17088672,0,0x0,8
tick,0x7ff90cd6fb64,17104727,0,0x0,8
tick,0x7ff90cd6fb64,17119437,0,0x0,8
tick,0x7ff90cd6fb64,17135490,0,0x0,8
tick,0x7ff90cd6fb64,17150330,0,0x0,8
tick,0x7ff90cd6fb64,17166214,0,0x0,8
tick,0x7ff90cd6fb64,17181229,0,0x0,8
tick,0x7ff90cd6fb64,17197163,0,0x0,8
tick,0x7ff90cd6fb64,17213201,0,0x0,8
tick,0x7ff90cd6fb64,17229175,0,0x0,8
tick,0x7ff90cd6fb64,17245077,0,0x0,8
tick,0x7ff90cd6fb64,17261009,0,0x0,8
tick,0x7ff90cd6fb64,17277156,0,0x0,8
tick,0x7ff90cd6fb64,17293073,0,0x0,8
tick,0x7ff90cd6fb64,17309070,0,0x0,8
tick,0x7ff90cd6fb64,17325177,0,0x0,8
tick,0x7ff90cd6fb64,17339857,0,0x0,8
tick,0x7ff90cd6fb64,17356010,0,0x0,8
tick,0x7ff90cd6fb64,17371804,0,0x0,8
tick,0x7ff90cd6fb64,17386828,0,0x0,8
tick,0x7ff90cd6fb64,17402936,0,0x0,8
tick,0x7ff90cd6fb64,17418715,0,0x0,8
tick,0x7ff90cd6fb64,17434797,0,0x0,8
tick,0x7ff90cd6fb64,17450420,0,0x0,8
tick,0x7ff90cd6fb64,17466411,0,0x0,8
tick,0x7ff90cd6fb64,17481377,0,0x0,8
tick,0x7ff90cd6fb64,17497439,0,0x0,8
tick,0x7ff90cd6fb64,17513423,0,0x0,8
tick,0x7ff90cd6fb64,17529198,0,0x0,8
tick,0x7ff90cd6fb64,17545291,0,0x0,8
tick,0x7ff90cd6fb64,17561218,0,0x0,8
tick,0x7ff90cd6fb64,17577257,0,0x0,8
tick,0x7ff90cd6fb64,17593237,0,0x0,8
tick,0x7ff90cd6fb64,17609124,0,0x0,8
tick,0x7ff90cd6fb64,17625062,0,0x0,8
tick,0x7ff90cd6fb64,17641083,0,0x0,8
tick,0x7ff90cd6fb64,17656772,0,0x0,8
tick,0x7ff90cd6fb64,17671850,0,0x0,8
tick,0x7ff90cd6fb64,17687739,0,0x0,8
tick,0x7ff90cd6fb64,17703694,0,0x0,8
tick,0x7ff90cd6fb64,17719313,0,0x0,8
tick,0x7ff90cd6fb64,17735433,0,0x0,8
tick,0x7ff90cd6fb64,17751455,0,0x0,8
tick,0x7ff90cd6fb64,17767362,0,0x0,8
tick,0x7ff90cd6fb64,17783144,0,0x0,8
tick,0x7ff90cd6fb64,17799348,0,0x0,8
tick,0x7ff90cd6fb64,17814258,0,0x0,8
tick,0x7ff90cd6fb64,17829913,0,0x0,8
tick,0x7ff90cd6fb64,17844983,0,0x0,8
tick,0x7ff90cd6fb64,17860928,0,0x0,8
tick,0x7ff90cd6fb64,17876861,0,0x0,8
tick,0x7ff90cd6fb64,17892878,0,0x0,8
tick,0x7ff90cd6fb64,17908806,0,0x0,8
tick,0x7ff90cd6fb64,17924295,0,0x0,8
tick,0x7ff90cd6fb64,17939251,0,0x0,8
tick,0x7ff90cd6fb64,17955226,0,0x0,8
tick,0x7ff90cd6fb64,17971260,0,0x0,8
tick,0x7ff90cd6fb64,17987264,0,0x0,8
tick,0x7ff90cd6fb64,18003164,0,0x0,8
tick,0x7ff90cd6fb64,18019140,0,0x0,8
tick,0x7ff90cd6fb64,18035043,0,0x0,8
tick,0x7ff90cd6fb64,18051059,0,0x0,8
tick,0x7ff90cd6fb64,18066031,0,0x0,8
tick,0x7ff90cd6fb64,18082034,0,0x0,8
tick,0x7ff90cd6fb64,18097809,0,0x0,8
tick,0x7ff90cd6fb64,18112760,0,0x0,8
tick,0x7ff90cd6fb64,18128758,0,0x0,8
tick,0x7ff90cd6fb64,18144711,0,0x0,8
tick,0x7ff90cd6fb64,18160582,0,0x0,8
tick,0x7ff90cd6fb64,18176682,0,0x0,8
tick,0x7ff90cd6fb64,18192618,0,0x0,8
tick,0x7ff90cd6fb64,18208536,0,0x0,8
tick,0x7ff90cd6fb64,18224571,0,0x0,8
tick,0x7ff90cd6fb64,18240473,0,0x0,8
tick,0x7ff90cd6fb64,18256466,0,0x0,8
tick,0x7ff90cd6fb64,18272345,0,0x0,8
tick,0x7ff90cd6fb64,18287378,0,0x0,8
tick,0x7ff90cd6fb64,18303267,0,0x0,8
tick,0x7ff90cd6fb64,18318168,0,0x0,8
tick,0x7ff90cd6fb64,18334122,0,0x0,8
tick,0x7ff90cd6fb64,18350207,0,0x0,8
tick,0x7ff90cd6fb64,18366159,0,0x0,8
tick,0x7ff90cd6fb64,18382144,0,0x0,8
tick,0x7ff90cd6fb64,18396966,0,0x0,8
tick,0x7ff90cd6fb64,18413022,0,0x0,8
tick,0x7ff90cd6fb64,18427921,0,0x0,8
tick,0x7ff90cd6fb64,18443118,0,0x0,8
tick,0x7ff90cd6fb64,18457899,0,0x0,8
tick,0x7ff90cd6fb64,18473919,0,0x0,8
tick,0x7ff90cd6fb64,18488830,0,0x0,8
tick,0x7ff90cd6fb64,18503917,0,0x0,8
tick,0x7ff90cd6fb64,18519806,0,0x0,8
tick,0x7ff90cd6fb64,18535693,0,0x0,8
tick,0x7ff90cd6fb64,18550694,0,0x0,8
tick,0x7ff90cd6fb64,18565642,0,0x0,8
tick,0x7ff90cd6fb64,18580656,0,0x0,8
tick,0x7ff90cd6fb64,18595527,0,0x0,8
tick,0x7ff90cd6fb64,18610575,0,0x0,8
tick,0x7ff90cd6fb64,18626380,0,0x0,8
tick,0x7ff90cd6fb64,18642380,0,0x0,8
tick,0x7ff90cd6fb64,18658276,0,0x0,8
tick,0x7ff90cd6fb64,18674284,0,0x0,8
tick,0x7ff90cd6fb64,18690218,0,0x0,8
tick,0x7ff90cd6fb64,18706208,0,0x0,8
tick,0x7ff90cd6fb64,18722101,0,0x0,8
tick,0x7ff90cd6fb64,18738062,0,0x0,8
tick,0x7ff90cd6fb64,18753138,0,0x0,8
tick,0x7ff90cd6fb64,18768988,0,0x0,8
tick,0x7ff90cd6fb64,18785099,0,0x0,8
tick,0x7ff90cd6fb64,18801021,0,0x0,8
tick,0x7ff90cd6fb64,18817065,0,0x0,8
tick,0x7ff90cd6fb64,18832857,0,0x0,8
tick,0x7ff90cd6fb64,18847851,0,0x0,8
tick,0x7ff90cd6fb64,18863763,0,0x0,8
tick,0x7ff90cd6fb64,18878719,0,0x0,8
tick,0x7ff90cd6fb64,18894696,0,0x0,8
tick,0x7ff90cd6fb64,18911259,0,0x0,8
tick,0x7ff90cd6fb64,18926253,0,0x0,8
tick,0x7ff90cd6fb64,18942345,0,0x0,8
tick,0x7ff90cd6fb64,18958136,0,0x0,8
tick,0x7ff90cd6fb64,18974416,0,0x0,8
tick,0x7ff90cd6fb64,18989086,0,0x0,8
tick,0x7ff90cd6fb64,19004236,0,0x0,8
tick,0x7ff90cd6fb64,19020076,0,0x0,8
tick,0x7ff90cd6fb64,19035996,0,0x0,8
tick,0x7ff90cd6fb64,19051929,0,0x0,8
tick,0x7ff90cd6fb64,19067845,0,0x0,8
tick,0x7ff90cd6fb64,19084053,0,0x0,8
tick,0x7ff90cd6fb64,19098795,0,0x0,8
tick,0x7ff90cd6fb64,19114720,0,0x0,8
tick,0x7ff90cd6fb64,19129970,0,0x0,8
tick,0x7ff90cd6fb64,19145934,0,0x0,8
tick,0x7ff90cd6fb64,19161920,0,0x0,8
tick,0x7ff90cd6fb64,19178009,0,0x0,8
tick,0x7ff90cd6fb64,19192850,0,0x0,8
tick,0x7ff90cd6fb64,19208710,0,0x0,8
tick,0x7ff90cd6fb64,19224656,0,0x0,8
tick,0x7ff90cd6fb64,19239610,0,0x0,8
tick,0x7ff90cd6fb64,19255516,0,0x0,8
tick,0x7ff90cd6fb64,19271370,0,0x0,8
tick,0x7ff90cd6fb64,19286402,0,0x0,8
tick,0x7ff90cd6fb64,19302302,0,0x0,8
tick,0x7ff90cd6fb64,19317237,0,0x0,8
tick,0x7ff90cd6fb64,19333187,0,0x0,8
tick,0x7ff90cd6fb64,19349100,0,0x0,8
tick,0x7ff90cd6fb64,19365032,0,0x0,8
tick,0x7ff90cd6fb64,19381123,0,0x0,8
tick,0x7ff90cd6fb64,19397097,0,0x0,8
tick,0x7ff90cd6fb64,19412941,0,0x0,8
tick,0x7ff90cd6fb64,19428871,0,0x0,8
tick,0x7ff90cd6fb64,19445040,0,0x0,8
tick,0x7ff90cd6fb64,19460852,0,0x0,8
tick,0x7ff90cd6fb64,19476830,0,0x0,8
tick,0x7ff90cd6fb64,19492797,0,0x0,8
tick,0x7ff90cd6fb64,19508733,0,0x0,8
tick,0x7ff90cd6fb64,19524743,0,0x0,8
tick,0x7ff90cd6fb64,19540770,0,0x0,8
tick,0x7ff90cd6fb64,19555764,0,0x0,8
tick,0x7ff90cd6fb64,19571765,0,0x0,8
tick,0x7ff90cd6fb64,19587763,0,0x0,8
tick,0x7ff90cd6fb64,19603484,0,0x0,8
tick,0x7ff90cd6fb64,19619106,0,0x0,8
tick,0x7ff90cd6fb64,19635055,0,0x0,8
tick,0x7ff90cd6fb64,19651036,0,0x0,8
tick,0x7ff90cd6fb64,19666978,0,0x0,8
tick,0x7ff90cd6fb64,19681902,0,0x0,8
tick,0x7ff90cd6fb64,19697972,0,0x0,8
tick,0x7ff90cd6fb64,19713780,0,0x0,8
tick,0x7ff90cd6fb64,19729835,0,0x0,8
tick,0x7ff90cd6fb64,19745764,0,0x0,8
tick,0x7ff90cd6fb64,19761731,0,0x0,8
tick,0x7ff90cd6fb64,19777756,0,0x0,8
tick,0x7ff90cd6fb64,19793704,0,0x0,8
tick,0x7ff90cd6fb64,19809668,0,0x0,8
tick,0x7ff90cd6fb64,19825114,0,0x0,8
tick,0x7ff90cd6fb64,19840850,0,0x0,8
tick,0x7ff90cd6fb64,19856748,0,0x0,8
tick,0x7ff90cd6fb64,19872856,0,0x0,8
tick,0x7ff90cd6fb64,19887724,0,0x0,8
tick,0x7ff90cd6fb64,19903698,0,0x0,8
tick,0x7ff90cd6fb64,19919620,0,0x0,8
tick,0x7ff90cd6fb64,19935630,0,0x0,8
tick,0x7ff90cd6fb64,19950631,0,0x0,8
tick,0x7ff90cd6fb64,19966542,0,0x0,8
tick,0x7ff90cd6fb64,19981441,0,0x0,8
tick,0x7ff90cd6fb64,19997403,0,0x0,8
tick,0x7ff90cd6fb64,20013331,0,0x0,8
tick,0x7ff90cd6fb64,20029396,0,0x0,8
tick,0x7ff90cd6fb64,20045344,0,0x0,8
tick,0x7ff90cd6fb64,20061237,0,0x0,8
tick,0x7ff90cd6fb64,20077245,0,0x0,8
tick,0x7ff90cd6fb64,20093195,0,0x0,8
tick,0x7ff90cd6fb64,20109195,0,0x0,8
tick,0x7ff90cd6fb64,20125074,0,0x0,8
tick,0x7ff90cd6fb64,20141147,0,0x0,8
tick,0x7ff90cd6fb64,20157017,0,0x0,8
tick,0x7ff90cd6fb64,20173056,0,0x0,8
tick,0x7ff90cd6fb64,20188853,0,0x0,8
tick,0x7ff90cd6fb64,20203930,0,0x0,8
tick,0x7ff90cd6fb64,20219845,0,0x0,8
tick,0x7ff90cd6fb64,20234777,0,0x0,8
tick,0x7ff90cd6fb64,20249810,0,0x0,8
tick,0x7ff90cd6fb64,20265739,0,0x0,8
tick,0x7ff90cd6fb64,20281618,0,0x0,8
tick,0x7ff90cd6fb64,20298157,0,0x0,8
tick,0x7ff90cd6fb64,20313777,0,0x0,8
tick,0x7ff90cd6fb64,20329737,0,0x0,8
tick,0x7ff90cd6fb64,20344714,0,0x0,8
tick,0x7ff90cd6fb64,20360692,0,0x0,8
tick,0x7ff90cd6fb64,20376497,0,0x0,8
tick,0x7ff90cd6fb64,20392636,0,0x0,8
tick,0x7ff90cd6fb64,20408397,0,0x0,8
tick,0x7ff90cd6fb64,20424350,0,0x0,8
tick,0x7ff90cd6fb64,20440399,0,0x0,8
tick,0x7ff90cd6fb64,20456487,0,0x0,8
tick,0x7ff90cd6fb64,20472316,0,0x0,8
tick,0x7ff90cd6fb64,20488104,0,0x0,8
tick,0x7ff90cd6fb64,20504062,0,0x0,8
tick,0x7ff90cd6fb64,20519107,0,0x0,8
tick,0x7ff90cd6fb64,20535049,0,0x0,8
tick,0x7ff90cd6fb64,20549985,0,0x0,8
tick,0x7ff90cd6fb64,20565999,0,0x0,8
tick,0x7ff90cd6fb64,20582004,0,0x0,8
tick,0x7ff90cd6fb64,20597869,0,0x0,8
tick,0x7ff90cd6fb64,20613931,0,0x0,8
tick,0x7ff90cd6fb64,20629884,0,0x0,8
tick,0x7ff90cd6fb64,20645791,0,0x0,8
tick,0x7ff90cd6fb64,20661699,0,0x0,8
tick,0x7ff90cd6fb64,20677700,0,0x0,8
tick,0x7ff90cd6fb64,20693642,0,0x0,8
tick,0x7ff90cd6fb64,20709649,0,0x0,8
tick,0x7ff90cd6fb64,20724625,0,0x0,8
tick,0x7ff90cd6fb64,20739465,0,0x0,8
tick,0x7ff90cd6fb64,20754430,0,0x0,8
tick,0x7ff90cd6fb64,20770442,0,0x0,8
tick,0x7ff90cd6fb64,20786328,0,0x0,8
tick,0x7ff90cd6fb64,20802366,0,0x0,8
tick,0x7ff90cd6fb64,20818318,0,0x0,8
tick,0x7ff90cd6fb64,20833185,0,0x0,8
tick,0x7ff90cd6fb64,20849190,0,0x0,8
tick,0x7ff90cd6fb64,20864286,0,0x0,8
tick,0x7ff90cd6fb64,20880179,0,0x0,8
tick,0x7ff90cd6fb64,20896064,0,0x0,8
tick,0x7ff90cd6fb64,20911065,0,0x0,8
tick,0x7ff90cd6fb64,20927050,0,0x0,8
tick,0x7ff90cd6fb64,20943003,0,0x0,8
tick,0x7ff90cd6fb64,20959059,0,0x0,8
tick,0x7ff90cd6fb64,20974839,0,0x0,8
tick,0x7ff90cd6fb64,20990816,0,0x0,8
tick,0x7ff90cd6fb64,21006818,0,0x0,8
tick,0x7ff90cd6fb64,21021962,0,0x0,8
tick,0x7ff90cd6fb64,21037712,0,0x0,8
tick,0x7ff90cd6fb64,21053664,0,0x0,8
tick,0x7ff90cd6fb64,21069722,0,0x0,8
tick,0x7ff90cd6fb64,21085658,0,0x0,8
tick,0x7ff90cd6fb64,21101881,0,0x0,8
tick,0x7ff90cd6fb64,21117597,0,0x0,8
tick,0x7ff90cd6fb64,21133656,0,0x0,8
tick,0x7ff90cd6fb64,21149535,0,0x0,8
tick,0x7ff90cd6fb64,21165480,0,0x0,8
tick,0x7ff90cd6fb64,21181428,0,0x0,8
tick,0x7ff90cd6fb64,21197336,0,0x0,8
tick,0x7ff90cd6fb64,21213231,0,0x0,8
tick,0x7ff90cd6fb64,21229218,0,0x0,8
tick,0x7ff90cd6fb64,21245140,0,0x0,8
tick,0x7ff90cd6fb64,21261144,0,0x0,8
tick,0x7ff90cd6fb64,21277000,0,0x0,8
tick,0x7ff90cd6fb64,21292971,0,0x0,8
tick,0x7ff90cd6fb64,21308945,0,0x0,8
tick,0x7ff90cd6fb64,21324853,0,0x0,8
tick,0x7ff90cd6fb64,21339938,0,0x0,8
tick,0x7ff90cd6fb64,21355841,0,0x0,8
tick,0x7ff90cd6fb64,21370767,0,0x0,8
tick,0x7ff90cd6fb64,21385822,0,0x0,8
tick,0x7ff90cd6fb64,21401821,0,0x0,8
tick,0x7ff90cd6fb64,21417657,0,0x0,8
tick,0x7ff90cd6fb64,21433192,0,0x0,8
tick,0x7ff90cd6fb64,21448144,0,0x0,8
tick,0x7ff90cd6fb64,21464139,0,0x0,8
tick,0x7ff90cd6fb64,21480155,0,0x0,8
tick,0x7ff90cd6fb64,21496121,0,0x0,8
tick,0x7ff90cd6fb64,21512052,0,0x0,8
tick,0x7ff90cd6fb64,21527905,0,0x0,8
tick,0x7ff90cd6fb64,21543869,0,0x0,8
tick,0x7ff90cd6fb64,21560013,0,0x0,8
tick,0x7ff90cd6fb64,21575937,0,0x0,8
tick,0x7ff90cd6fb64,21590926,0,0x0,8
tick,0x7ff90cd6fb64,21606875,0,0x0,8
tick,0x7ff90cd6fb64,21622792,0,0x0,8
tick,0x7ff90cd6fb64,21637724,0,0x0,8
tick,0x7ff90cd6fb64,21652801,0,0x0,8
tick,0x7ff90cd6fb64,21668751,0,0x0,8
tick,0x7ff90cd6fb64,21684570,0,0x0,8
tick,0x7ff90cd6fb64,21699925,0,0x0,8
tick,0x7ff90cd6fb64,21715692,0,0x0,8
tick,0x7ff90cd6fb64,21731575,0,0x0,8
tick,0x7ff90cd6fb64,21747436,0,0x0,8
tick,0x7ff90cd6fb64,21763400,0,0x0,8
tick,0x7ff90cd6fb64,21778446,0,0x0,8
tick,0x7ff90cd6fb64,21794331,0,0x0,8
tick,0x7ff90cd6fb64,21810314,0,0x0,8
tick,0x7ff90cd6fb64,21826145,0,0x0,8
tick,0x7ff90cd6fb64,21842157,0,0x0,8
tick,0x7ff90cd6fb64,21858121,0,0x0,8
tick,0x7ff90cd6fb64,21873978,0,0x0,8
tick,0x7ff90cd6fb64,21889938,0,0x0,8
tick,0x7ff90cd6fb64,21905905,0,0x0,8
tick,0x7ff90cd6fb64,21922019,0,0x0,8
tick,0x7ff90cd6fb64,21937953,0,0x0,8
tick,0x7ff90cd6fb64,21953147,0,0x0,8
tick,0x7ff90cd6fb64,21968920,0,0x0,8
tick,0x7ff90cd6fb64,21984912,0,0x0,8
tick,0x7ff90cd6fb64,22000171,0,0x0,8
tick,0x7ff90cd6fb64,22015692,0,0x0,8
tick,0x7ff90cd6fb64,22031684,0,0x0,8
tick,0x7ff90cd6fb64,22047772,0,0x0,8
tick,0x7ff90cd6fb64,22063627,0,0x0,8
tick,0x7ff90cd6fb64,22079712,0,0x0,8
tick,0x7ff90cd6fb64,22095486,0,0x0,8
tick,0x7ff90cd6fb64,22110500,0,0x0,8
tick,0x7ff90cd6fb64,22126389,0,0x0,8
tick,0x7ff90cd6fb64,22142483,0,0x0,8
tick,0x7ff90cd6fb64,22158406,0,0x0,8
tick,0x7ff90cd6fb64,22174430,0,0x0,8
tick,0x7ff90cd6fb64,22190166,0,0x0,8
tick,0x7ff90cd6fb64,22205194,0,0x0,8
tick,0x7ff90cd6fb64,22220134,0,0x0,8
tick,0x7ff90cd6fb64,22236066,0,0x0,8
tick,0x7ff90cd6fb64,22252017,0,0x0,8
tick,0x7ff90cd6fb64,22268001,0,0x0,8
tick,0x7ff90cd6fb64,22284079,0,0x0,8
tick,0x7ff90cd6fb64,22299943,0,0x0,8
tick,0x7ff90cd6fb64,22315892,0,0x0,8
tick,0x7ff90cd6fb64,22331891,0,0x0,8
tick,0x7ff90cd6fb64,22347849,0,0x0,8
tick,0x7ff90cd6fb64,22363794,0,0x0,8
tick,0x7ff90cd6fb64,22379767,0,0x0,8
tick,0x7ff90cd6fb64,22395710,0,0x0,8
tick,0x7ff90cd6fb64,22410727,0,0x0,8
tick,0x7ff90cd6fb64,22425731,0,0x0,8
tick,0x7ff90cd6fb64,22441839,0,0x0,8
tick,0x7ff90cd6fb64,22456697,0,0x0,8
tick,0x7ff90cd6fb64,22472537,0,0x0,8
tick,0x7ff90cd6fb64,22488513,0,0x0,8
tick,0x7ff90cd6fb64,22503387,0,0x0,8
tick,0x7ff90cd6fb64,22519545,0,0x0,8
tick,0x7ff90cd6fb64,22535498,0,0x0,8
tick,0x7ff90cd6fb64,22551401,0,0x0,8
tick,0x7ff90cd6fb64,22567701,0,0x0,8
tick,0x7ff90cd6fb64,22583266,0,0x0,8
tick,0x7ff90cd6fb64,22599180,0,0x0,8
tick,0x7ff90cd6fb64,22615345,0,0x0,8
tick,0x7ff90cd6fb64,22630123,0,0x0,8
tick,0x7ff90cd6fb64,22645974,0,0x0,8
tick,0x7ff90cd6fb64,22662046,0,0x0,8
tick,0x7ff90cd6fb64,22677914,0,0x0,8
tick,0x7ff90cd6fb64,22692949,0,0x0,8
tick,0x7ff90cd6fb64,22708932,0,0x0,8
tick,0x7ff90cd6fb64,22724915,0,0x0,8
tick,0x7ff90cd6fb64,22740872,0,0x0,8
tick,0x7ff90cd6fb64,22756888,0,0x0,8
tick,0x7ff90cd6fb64,22772877,0,0x0,8
tick,0x7ff90cd6fb64,22787795,0,0x0,8
tick,0x7ff90cd6fb64,22803676,0,0x0,8
tick,0x7ff90cd6fb64,22819755,0,0x0,8
tick,0x7ff90cd6fb64,22835731,0,0x0,8
tick,0x7ff90cd6fb64,22850565,0,0x0,8
tick,0x7ff90cd6fb64,22866371,0,0x0,8
tick,0x7ff90cd6fb64,22882498,0,0x0,8
tick,0x7ff90cd6fb64,22898321,0,0x0,8
tick,0x7ff90cd6fb64,22914231,0,0x0,8
tick,0x7ff90cd6fb64,22930375,0,0x0,8
tick,0x7ff90cd6fb64,22945318,0,0x0,8
tick,0x7ff90cd6fb64,22961148,0,0x0,8
tick,0x7ff90cd6fb64,22977353,0,0x0,8
tick,0x7ff90cd6fb64,22992237,0,0x0,8
tick,0x7ff90cd6fb64,23008067,0,0x0,8
tick,0x7ff90cd6fb64,23023889,0,0x0,8
tick,0x7ff90cd6fb64,23039035,0,0x0,8
tick,0x7ff90cd6fb64,23053922,0,0x0,8
tick,0x7ff90cd6fb64,23069843,0,0x0,8
tick,0x7ff90cd6fb64,23085831,0,0x0,8
tick,0x7ff90cd6fb64,23101913,0,0x0,8
tick,0x7ff90cd6fb64,23117744,0,0x0,8
tick,0x7ff90cd6fb64,23132818,0,0x0,8
tick,0x7ff90cd6fb64,23148780,0,0x0,8
tick,0x7ff90cd6fb64,23164683,0,0x0,8
tick,0x7ff90cd6fb64,23180605,0,0x0,8
tick,0x7ff90cd6fb64,23196510,0,0x0,8
tick,0x7ff90cd6fb64,23212498,0,0x0,8
tick,0x7ff90cd6fb64,23228430,0,0x0,8
tick,0x7ff90cd6fb64,23244438,0,0x0,8
tick,0x7ff90cd6fb64,23260308,0,0x0,8
tick,0x7ff90cd6fb64,23276434,0,0x0,8
tick,0x7ff90cd6fb64,23292412,0,0x0,8
tick,0x7ff90cd6fb64,23308348,0,0x0,8
tick,0x7ff90cd6fb64,23323152,0,0x0,8
tick,0x7ff90cd6fb64,23338228,0,0x0,8
tick,0x7ff90cd6fb64,23353222,0,0x0,8
tick,0x7ff90cd6fb64,23369159,0,0x0,8
tick,0x7ff90cd6fb64,23384201,0,0x0,8
tick,0x7ff90cd6fb64,23399124,0,0x0,8
tick,0x7ff90cd6fb64,23415048,0,0x0,8
tick,0x7ff90cd6fb64,23430978,0,0x0,8
tick,0x7ff90cd6fb64,23446937,0,0x0,8
tick,0x7ff90cd6fb64,23462953,0,0x0,8
tick,0x7ff90cd6fb64,23477784,0,0x0,8
tick,0x7ff90cd6fb64,23492787,0,0x0,8
tick,0x7ff90cd6fb64,23508817,0,0x0,8
tick,0x7ff90cd6fb64,23524642,0,0x0,8
tick,0x7ff90cd6fb64,23540605,0,0x0,8
tick,0x7ff90cd6fb64,23555621,0,0x0,8
tick,0x7ff90cd6fb64,23571501,0,0x0,8
tick,0x7ff90cd6fb64,23586508,0,0x0,8
tick,0x7ff90cd6fb64,23603166,0,0x0,8
tick,0x7ff90cd6fb64,23617457,0,0x0,8
tick,0x7ff90cd6fb64,23633569,0,0x0,8
tick,0x7ff90cd6fb64,23648318,0,0x0,8
tick,0x7ff90cd6fb64,23664322,0,0x0,8
tick,0x7ff90cd6fb64,23680205,0,0x0,8
tick,0x7ff90cd6fb64,23696245,0,0x0,8
tick,0x7ff90cd6fb64,23712118,0,0x0,8
tick,0x7ff90cd6fb64,23728117,0,0x0,8
tick,0x7ff90cd6fb64,23744102,0,0x0,8
tick,0x7ff90cd6fb64,23760037,0,0x0,8
tick,0x7ff90cd6fb64,23776004,0,0x0,8
tick,0x7ff90cd6fb64,23791927,0,0x0,8
tick,0x7ff90cd6fb64,23807793,0,0x0,8
tick,0x7ff90cd6fb64,23823865,0,0x0,8
tick,0x7ff90cd6fb64,23838711,0,0x0,8
tick,0x7ff90cd6fb64,23854015,0,0x0,8
tick,0x7ff90cd6fb64,23869041,0,0x0,8
tick,0x7ff90cd6fb64,23884969,0,0x0,8
tick,0x7ff90cd6fb64,23900965,0,0x0,8
tick,0x7ff90cd6fb64,23916830,0,0x0,8
tick,0x7ff90cd6fb64,23932797,0,0x0,8
tick,0x7ff90cd6fb64,23948759,0,0x0,8
tick,0x7ff90cd6fb64,23964718,0,0x0,8
tick,0x7ff90cd6fb64,23980690,0,0x0,8
tick,0x7ff90cd6fb64,23996691,0,0x0,8
tick,0x7ff90cd6fb64,24012633,0,0x0,8
tick,0x7ff90cd6fb64,24028656,0,0x0,8
tick,0x7ff90cd6fb64,24044585,0,0x0,8
tick,0x7ff90cd6fb64,24060095,0,0x0,8
tick,0x7ff90cd6fb64,24076072,0,0x0,8
tick,0x7ff90cd6fb64,24091032,0,0x0,8
tick,0x7ff90cd6fb64,24106969,0,0x0,8
tick,0x7ff90cd6fb64,24123035,0,0x0,8
tick,0x7ff90cd6fb64,24138042,0,0x0,8
tick,0x7ff90cd6fb64,24152956,0,0x0,8
tick,0x7ff90cd6fb64,24168834,0,0x0,8
tick,0x7ff90cd6fb64,24183882,0,0x0,8
tick,0x7ff90cd6fb64,24199804,0,0x0,8
tick,0x7ff90cd6fb64,24215779,0,0x0,8
tick,0x7ff90cd6fb64,24231760,0,0x0,8
tick,0x7ff90cd6fb64,24247773,0,0x0,8
tick,0x7ff90cd6fb64,24263699,0,0x0,8
tick,0x7ff90cd6fb64,24280309,0,0x0,8
tick,0x7ff90cd6fb64,24295593,0,0x0,8
tick,0x7ff90cd6fb64,24311554,0,0x0,8
tick,0x7ff90cd6fb64,24327468,0,0x0,8
tick,0x7ff90cd6fb64,24343490,0,0x0,8
tick,0x7ff90cd6fb64,24358942,0,0x0,8
tick,0x7ff90cd6fb64,24373933,0,0x0,8
tick,0x7ff90cd6fb64,24388904,0,0x0,8
tick,0x7ff90cd6fb64,24404924,0,0x0,8
tick,0x7ff90cd6fb64,24420910,0,0x0,8
tick,0x7ff90cd6fb64,24436734,0,0x0,8
tick,0x7ff90cd6fb64,24452845,0,0x0,8
tick,0x7ff90cd6fb64,24468657,0,0x0,8
tick,0x7ff90cd6fb64,24484683,0,0x0,8
tick,0x7ff90cd6fb64,24500799,0,0x0,8
tick,0x7ff90cd6fb64,24516662,0,0x0,8
tick,0x7ff90cd6fb64,24532575,0,0x0,8
tick,0x7ff90cd6fb64,24548522,0,0x0,8
tick,0x7ff90cd6fb64,24564478,0,0x0,8
tick,0x7ff90cd6fb64,24580372,0,0x0,8
tick,0x7ff90cd6fb64,24596428,0,0x0,8
tick,0x7ff90cd6fb64,24612357,0,0x0,8
tick,0x7ff90cd6fb64,24628221,0,0x0,8
tick,0x7ff90cd6fb64,24644280,0,0x0,8
tick,0x7ff90cd6fb64,24660279,0,0x0,8
tick,0x7ff90cd6fb64,24676076,0,0x0,8
tick,0x7ff90cd6fb64,24691089,0,0x0,8
tick,0x7ff90cd6fb64,24706997,0,0x0,8
tick,0x7ff90cd6fb64,24722067,0,0x0,8
tick,0x7ff90cd6fb64,24738014,0,0x0,8
tick,0x7ff90cd6fb64,24752912,0,0x0,8
tick,0x7ff90cd6fb64,24769011,0,0x0,8
tick,0x7ff90cd6fb64,24784880,0,0x0,8
tick,0x7ff90cd6fb64,24800898,0,0x0,8
tick,0x7ff90cd6fb64,24816867,0,0x0,8
tick,0x7ff90cd6fb64,24832825,0,0x0,8
tick,0x7ff90cd6fb64,24848713,0,0x0,8
tick,0x7ff90cd6fb64,24864680,0,0x0,8
tick,0x7ff90cd6fb64,24880598,0,0x0,8
tick,0x7ff90cd6fb64,24896672,0,0x0,8
tick,0x7ff90cd6fb64,24912487,0,0x0,8
tick,0x7ff90cd6fb64,24928548,0,0x0,8
tick,0x7ff90cd6fb64,24944557,0,0x0,8
tick,0x7ff90cd6fb64,24960523,0,0x0,8
tick,0x7ff90cd6fb64,24976558,0,0x0,8
tick,0x7ff90cd6fb64,24992364,0,0x0,8
tick,0x7ff90cd6fb64,25008347,0,0x0,8
tick,0x7ff90cd6fb64,25023568,0,0x0,8
tick,0x7ff90cd6fb64,25038303,0,0x0,8
tick,0x7ff90cd6fb64,25054116,0,0x0,8
tick,0x7ff90cd6fb64,25070192,0,0x0,8
tick,0x7ff90cd6fb64,25086149,0,0x0,8
tick,0x7ff90cd6fb64,25102068,0,0x0,8
tick,0x7ff90cd6fb64,25118127,0,0x0,8
tick,0x7ff90cd6fb64,25133936,0,0x0,8
tick,0x7ff90cd6fb64,25149896,0,0x0,8
tick,0x7ff90cd6fb64,25165830,0,0x0,8
tick,0x7ff90cd6fb64,25181899,0,0x0,8
tick,0x7ff90cd6fb64,25197859,0,0x0,8
tick,0x7ff90cd6fb64,25213695,0,0x0,8
tick,0x7ff90cd6fb64,25229811,0,0x0,8
tick,0x7ff90cd6fb64,25245704,0,0x0,8
tick,0x7ff90cd6fb64,25261718,0,0x0,8
tick,0x7ff90cd6fb64,25277482,0,0x0,8
tick,0x7ff90cd6fb64,25293513,0,0x0,8
tick,0x7ff90cd6fb64,25309567,0,0x0,8
tick,0x7ff90cd6fb64,25325538,0,0x0,8
tick,0x7ff90cd6fb64,25340530,0,0x0,8
tick,0x7ff90cd6fb64,25356332,0,0x0,8
tick,0x7ff90cd6fb64,25371328,0,0x0,8
tick,0x7ff90cd6fb64,25386288,0,0x0,8
tick,0x7ff90cd6fb64,25402348,0,0x0,8
tick,0x7ff90cd6fb64,25418212,0,0x0,8
tick,0x7ff90cd6fb64,25434145,0,0x0,8
tick,0x7ff90cd6fb64,25450097,0,0x0,8
tick,0x7ff90cd6fb64,25466100,0,0x0,8
tick,0x7ff90cd6fb64,25482035,0,0x0,8
tick,0x7ff90cd6fb64,25497919,0,0x0,8
tick,0x7ff90cd6fb64,25513963,0,0x0,8
tick,0x7ff90cd6fb64,25529897,0,0x0,8
tick,0x7ff90cd6fb64,25545883,0,0x0,8
tick,0x7ff90cd6fb64,25561788,0,0x0,8
tick,0x7ff90cd6fb64,25577815,0,0x0,8
tick,0x7ff90cd6fb64,25593836,0,0x0,8
tick,0x7ff90cd6fb64,25609715,0,0x0,8
tick,0x7ff90cd6fb64,25625659,0,0x0,8
tick,0x7ff90cd6fb64,25641819,0,0x0,8
tick,0x7ff90cd6fb64,25658046,0,0x0,8
tick,0x7ff90cd6fb64,25673678,0,0x0,8
tick,0x7ff90cd6fb64,25689610,0,0x0,8
tick,0x7ff90cd6fb64,25704795,0,0x0,8
tick,0x7ff90cd6fb64,25719574,0,0x0,8
tick,0x7ff90cd6fb64,25735535,0,0x0,8
tick,0x7ff90cd6fb64,25750303,0,0x0,8
tick,0x7ff90cd6fb64,25764962,0,0x0,8
tick,0x7ff90cd6fb64,25780955,0,0x0,8
tick,0x7ff90cd6fb64,25796853,0,0x0,8
tick,0x7ff90cd6fb64,25812810,0,0x0,8
tick,0x7ff90cd6fb64,25836560,0,0x0,8
tick,0x7ff90cd6fb64,25846342,0,0x0,8
tick,0x7ff90cd6fb64,25861543,0,0x0,8
tick,0x7ff90cd6fb64,25875714,0,0x0,8
tick,0x7ff90cd6fb64,25891617,0,0x0,8
tick,0x7ff90cd6fb64,25907769,0,0x0,8
tick,0x7ff90cd6fb64,25923581,0,0x0,8
tick,0x7ff90cd6fb64,25939595,0,0x0,8
tick,0x7ff90cd6fb64,25954558,0,0x0,8
tick,0x7ff90cd6fb64,25970480,0,0x0,8
tick,0x7ff90cd6fb64,25986442,0,0x0,8
tick,0x7ff90cd6fb64,26002463,0,0x0,8
tick,0x7ff90cd6fb64,26018256,0,0x0,8
tick,0x7ff90cd6fb64,26034343,0,0x0,8
tick,0x7ff90cd6fb64,26050302,0,0x0,8
tick,0x7ff90cd6fb64,26065227,0,0x0,8
tick,0x7ff90cd6fb64,26081357,0,0x0,8
tick,0x7ff90cd6fb64,26097271,0,0x0,8
tick,0x7ff90cd6fb64,26113169,0,0x0,8
tick,0x7ff90cd6fb64,26129164,0,0x0,8
tick,0x7ff90cd6fb64,26145113,0,0x0,8
tick,0x7ff90cd6fb64,26160115,0,0x0,8
tick,0x7ff90cd6fb64,26176117,0,0x0,8
tick,0x7ff90cd6fb64,26191916,0,0x0,8
tick,0x7ff90cd6fb64,26207031,0,0x0,8
tick,0x7ff90cd6fb64,26222988,0,0x0,8
tick,0x7ff90cd6fb64,26237780,0,0x0,8
tick,0x7ff90cd6fb64,26252794,0,0x0,8
tick,0x7ff90cd6fb64,26268823,0,0x0,8
tick,0x7ff90cd6fb64,26284674,0,0x0,8
tick,0x7ff90cd6fb64,26300802,0,0x0,8
tick,0x7ff90cd6fb64,26316623,0,0x0,8
tick,0x7ff90cd6fb64,26332681,0,0x0,8
tick,0x7ff90cd6fb64,26348582,0,0x0,8
tick,0x7ff90cd6fb64,26364595,0,0x0,8
tick,0x7ff90cd6fb64,26380521,0,0x0,8
tick,0x7ff90cd6fb64,26395439,0,0x0,8
tick,0x7ff90cd6fb64,26410421,0,0x0,8
tick,0x7ff90cd6fb64,26426425,0,0x0,8
tick,0x7ff90cd6fb64,26442313,0,0x0,8
tick,0x7ff90cd6fb64,26458339,0,0x0,8
tick,0x7ff90cd6fb64,26474156,0,0x0,8
tick,0x7ff90cd6fb64,26489204,0,0x0,8
tick,0x7ff90cd6fb64,26505064,0,0x0,8
tick,0x7ff90cd6fb64,26519971,0,0x0,8
tick,0x7ff90cd6fb64,26535969,0,0x0,8
tick,0x7ff90cd6fb64,26551982,0,0x0,8
tick,0x7ff90cd6fb64,26567817,0,0x0,8
tick,0x7ff90cd6fb64,26584035,0,0x0,8
tick,0x7ff90cd6fb64,26599786,0,0x0,8
tick,0x7ff90cd6fb64,26615841,0,0x0,8
tick,0x7ff90cd6fb64,26631799,0,0x0,8
tick,0x7ff90cd6fb64,26647698,0,0x0,8
tick,0x7ff90cd6fb64,26663667,0,0x0,8
tick,0x7ff90cd6fb64,26679710,0,0x0,8
tick,0x7ff90cd6fb64,26695608,0,0x0,8
tick,0x7ff90cd6fb64,26710435,0,0x0,8
tick,0x7ff90cd6fb64,26726482,0,0x0,8
tick,0x7ff90cd6fb64,26742443,0,0x0,8
tick,0x7ff90cd6fb64,26758452,0,0x0,8
tick,0x7ff90cd6fb64,26773358,0,0x0,8
tick,0x7ff90cd6fb64,26789386,0,0x0,8
tick,0x7ff90cd6fb64,26804253,0,0x0,8
tick,0x7ff90cd6fb64,26820313,0,0x0,8
tick,0x7ff90cd6fb64,26835296,0,0x0,8
tick,0x7ff90cd6fb64,26851317,0,0x0,8
tick,0x7ff90cd6fb64,26867001,0,0x0,8
tick,0x7ff90cd6fb64,26883000,0,0x0,8
tick,0x7ff90cd6fb64,26899357,0,0x0,8
tick,0x7ff90cd6fb64,26915108,0,0x0,8
tick,0x7ff90cd6fb64,26929843,0,0x0,8
tick,0x7ff90cd6fb64,26945899,0,0x0,8
tick,0x7ff90cd6fb64,26961848,0,0x0,8
tick,0x7ff90cd6fb64,26977719,0,0x0,8
tick,0x7ff90cd6fb64,26993833,0,0x0,8
tick,0x7ff90cd6fb64,27008506,0,0x0,8
tick,0x7ff90cd6fb64,27024454,0,0x0,8
tick,0x7ff90cd6fb64,27039515,0,0x0,8
tick,0x7ff90cd6fb64,27054380,0,0x0,8
tick,0x7ff90cd6fb64,27069436,0,0x0,8
tick,0x7ff90cd6fb64,27085394,0,0x0,8
tick,0x7ff90cd6fb64,27101528,0,0x0,8
tick,0x7ff90cd6fb64,27117225,0,0x0,8
tick,0x7ff90cd6fb64,27133249,0,0x0,8
tick,0x7ff90cd6fb64,27149253,0,0x0,8
tick,0x7ff90cd6fb64,27165248,0,0x0,8
tick,0x7ff90cd6fb64,27181070,0,0x0,8
tick,0x7ff90cd6fb64,27197076,0,0x0,8
tick,0x7ff90cd6fb64,27212998,0,0x0,8
tick,0x7ff90cd6fb64,27229042,0,0x0,8
tick,0x7ff90cd6fb64,27245035,0,0x0,8
tick,0x7ff90cd6fb64,27261059,0,0x0,8
tick,0x7ff90cd6fb64,27276777,0,0x0,8
tick,0x7ff90cd6fb64,27292760,0,0x0,8
tick,0x7ff90cd6fb64,27308756,0,0x0,8
tick,0x7ff90cd6fb64,27324678,0,0x0,8
tick,0x7ff90cd6fb64,27340545,0,0x0,8
tick,0x7ff90cd6fb64,27356443,0,0x0,8
tick,0x7ff90cd6fb64,27371703,0,0x0,8
tick,0x7ff90cd6fb64,27387834,0,0x0,8
tick,0x7ff90cd6fb64,27403695,0,0x0,8
tick,0x7ff90cd6fb64,27419509,0,0x0,8
tick,0x7ff90cd6fb64,27435496,0,0x0,8
tick,0x7ff90cd6fb64,27450561,0,0x0,8
tick,0x7ff90cd6fb64,27466464,0,0x0,8
tick,0x7ff90cd6fb64,27482100,0,0x0,8
tick,0x7ff90cd6fb64,27497921,0,0x0,8
tick,0x7ff90cd6fb64,27513936,0,0x0,8
tick,0x7ff90cd6fb64,27529912,0,0x0,8
tick,0x7ff90cd6fb64,27545871,0,0x0,8
tick,0x7ff90cd6fb64,27561706,0,0x0,8
tick,0x7ff90cd6fb64,27577606,0,0x0,8
tick,0x7ff90cd6fb64,27593771,0,0x0,8
tick,0x7ff90cd6fb64,27609702,0,0x0,8
tick,0x7ff90cd6fb64,27625572,0,0x0,8
tick,0x7ff90cd6fb64,27641731,0,0x0,8
tick,0x7ff90cd6fb64,27656599,0,0x0,8
tick,0x7ff90cd6fb64,27671734,0,0x0,8
tick,0x7ff90cd6fb64,27686363,0,0x0,8
tick,0x7ff90cd6fb64,27702375,0,0x0,8
tick,0x7ff90cd6fb64,27718417,0,0x0,8
tick,0x7ff90cd6fb64,27734275,0,0x0,8
tick,0x7ff90cd6fb64,27750221,0,0x0,8
tick,0x7ff90cd6fb64,27765313,0,0x0,8
tick,0x7ff90cd6fb64,27781282,0,0x0,8
tick,0x7ff90cd6fb64,27797247,0,0x0,8
tick,0x7ff90cd6fb64,27813087,0,0x0,8
tick,0x7ff90cd6fb64,27829124,0,0x0,8
tick,0x7ff90cd6fb64,27845035,0,0x0,8
tick,0x7ff90cd6fb64,27861219,0,0x0,8
tick,0x7ff90cd6fb64,27876911,0,0x0,8
tick,0x7ff90cd6fb64,27891828,0,0x0,8
tick,0x7ff90cd6fb64,27907945,0,0x0,8
tick,0x7ff90cd6fb64,27923950,0,0x0,8
tick,0x7ff90cd6fb64,27939675,0,0x0,8
tick,0x7ff90cd6fb64,27955678,0,0x0,8
tick,0x7ff90cd6fb64,27970534,0,0x0,8
tick,0x7ff90cd6fb64,27986626,0,0x0,8
tick,0x7ff90cd6fb64,28002619,0,0x0,8
tick,0x7ff90cd6fb64,28018395,0,0x0,8
tick,0x7ff90cd6fb64,28034395,0,0x0,8
tick,0x7ff90cd6fb64,28050695,0,0x0,8
tick,0x7ff90cd6fb64,28066515,0,0x0,8
tick,0x7ff90cd6fb64,28082544,0,0x0,8
tick,0x7ff90cd6fb64,28098370,0,0x0,8
tick,0x7ff90cd6fb64,28114307,0,0x0,8
tick,0x7ff90cd6fb64,28130325,0,0x0,8
tick,0x7ff90cd6fb64,28146335,0,0x0,8
tick,0x7ff90cd6fb64,28162291,0,0x0,8
tick,0x7ff90cd6fb64,28178029,0,0x0,8
tick,0x7ff90cd6fb64,28194028,0,0x0,8
tick,0x7ff90cd6fb64,28210025,0,0x0,8
tick,0x7ff90cd6fb64,28226059,0,0x0,8
tick,0x7ff90cd6fb64,28241072,0,0x0,8
tick,0x7ff90cd6fb64,28256993,0,0x0,8
tick,0x7ff90cd6fb64,28272933,0,0x0,8
tick,0x7ff90cd6fb64,28288883,0,0x0,8
tick,0x7ff90cd6fb64,28304861,0,0x0,8
tick,0x7ff90cd6fb64,28320721,0,0x0,8
tick,0x7ff90cd6fb64,28336699,0,0x0,8
tick,0x7ff90cd6fb64,28352528,0,0x0,8
tick,0x7ff90cd6fb64,28367545,0,0x0,8
tick,0x7ff90cd6fb64,28383078,0,0x0,8
tick,0x7ff90cd6fb64,28399028,0,0x0,8
tick,0x7ff90cd6fb64,28414961,0,0x0,8
tick,0x7ff90cd6fb64,28430982,0,0x0,8
tick,0x7ff90cd6fb64,28445915,0,0x0,8
tick,0x7ff90cd6fb64,28460936,0,0x0,8
tick,0x7ff90cd6fb64,28476850,0,0x0,8
tick,0x7ff90cd6fb64,28491737,0,0x0,8
tick,0x7ff90cd6fb64,28507901,0,0x0,8
tick,0x7ff90cd6fb64,28522873,0,0x0,8
tick,0x7ff90cd6fb64,28538776,0,0x0,8
tick,0x7ff90cd6fb64,28553779,0,0x0,8
tick,0x7ff90cd6fb64,28569730,0,0x0,8
tick,0x7ff90cd6fb64,28585738,0,0x0,8
tick,0x7ff90cd6fb64,28601883,0,0x0,8
tick,0x7ff90cd6fb64,28616652,0,0x0,8
tick,0x7ff90cd6fb64,28632434,0,0x0,8
tick,0x7ff90cd6fb64,28648502,0,0x0,8
tick,0x7ff90cd6fb64,28664525,0,0x0,8
tick,0x7ff90cd6fb64,28680914,0,0x0,8
tick,0x7ff90cd6fb64,28696623,0,0x0,8
tick,0x7ff90cd6fb64,28712233,0,0x0,8
tick,0x7ff90cd6fb64,28728112,0,0x0,8
tick,0x7ff90cd6fb64,28744144,0,0x0,8
tick,0x7ff90cd6fb64,28760087,0,0x0,8
tick,0x7ff90cd6fb64,28776125,0,0x0,8
tick,0x7ff90cd6fb64,28791619,0,0x0,8
tick,0x7ff90cd6fb64,28807726,0,0x0,8
tick,0x7ff90cd6fb64,28822536,0,0x0,8
tick,0x7ff90cd6fb64,28837516,0,0x0,8
tick,0x7ff90cd6fb64,28853559,0,0x0,8
tick,0x7ff90cd6fb64,28869522,0,0x0,8
tick,0x7ff90cd6fb64,28884682,0,0x0,8
tick,0x7ff90cd6fb64,28900382,0,0x0,8
tick,0x7ff90cd6fb64,28916524,0,0x0,8
tick,0x7ff90cd6fb64,28932340,0,0x0,8
tick,0x7ff90cd6fb64,28948204,0,0x0,8
tick,0x7ff90cd6fb64,28964282,0,0x0,8
tick,0x7ff90cd6fb64,28980259,0,0x0,8
tick,0x7ff90cd6fb64,28996208,0,0x0,8
tick,0x7ff90cd6fb64,29012159,0,0x0,8
tick,0x7ff90cd6fb64,29028055,0,0x0,8
tick,0x7ff90cd6fb64,29044002,0,0x0,8
tick,0x7ff90cd6fb64,29060051,0,0x0,8
tick,0x7ff90cd6fb64,29076072,0,0x0,8
tick,0x7ff90cd6fb64,29091938,0,0x0,8
tick,0x7ff90cd6fb64,29107794,0,0x0,8
tick,0x7ff90cd6fb64,29122708,0,0x0,8
tick,0x7ff90cd6fb64,29138843,0,0x0,8
tick,0x7ff90cd6fb64,29154717,0,0x0,8
tick,0x7ff90cd6fb64,29169711,0,0x0,8
tick,0x7ff90cd6fb64,29185559,0,0x0,8
tick,0x7ff90cd6fb64,29201730,0,0x0,8
tick,0x7ff90cd6fb64,29217783,0,0x0,8
tick,0x7ff90cd6fb64,29233584,0,0x0,8
tick,0x7ff90cd6fb64,29249498,0,0x0,8
tick,0x7ff90cd6fb64,29264546,0,0x0,8
tick,0x7ff90cd6fb64,29280400,0,0x0,8
tick,0x7ff90cd6fb64,29296312,0,0x0,8
tick,0x7ff90cd6fb64,29312260,0,0x0,8
tick,0x7ff90cd6fb64,29328284,0,0x0,8
tick,0x7ff90cd6fb64,29344293,0,0x0,8
tick,0x7ff90cd6fb64,29360182,0,0x0,8
tick,0x7ff90cd6fb64,29376240,0,0x0,8
tick,0x7ff90cd6fb64,29392025,0,0x0,8
tick,0x7ff90cd6fb64,29408166,0,0x0,8
tick,0x7ff90cd6fb64,29424172,0,0x0,8
tick,0x7ff90cd6fb64,29439058,0,0x0,8
tick,0x7ff90cd6fb64,29454861,0,0x0,8
tick,0x7ff90cd6fb64,29470896,0,0x0,8
tick,0x7ff90cd6fb64,29486819,0,0x0,8
tick,0x7ff90cd6fb64,29502852,0,0x0,8
tick,0x7ff90cd6fb64,29519101,0,0x0,8
tick,0x7ff90cd6fb64,29534935,0,0x0,8
tick,0x7ff90cd6fb64,29550901,0,0x0,8
tick,0x7ff90cd6fb64,29566744,0,0x0,8
tick,0x7ff90cd6fb64,29582783,0,0x0,8
tick,0x7ff90cd6fb64,29598619,0,0x0,8
tick,0x7ff90cd6fb64,29614465,0,0x0,8
tick,0x7ff90cd6fb64,29630487,0,0x0,8
tick,0x7ff90cd6fb64,29646451,0,0x0,8
tick,0x7ff90cd6fb64,29662425,0,0x0,8
tick,0x7ff90cd6fb64,29678287,0,0x0,8
tick,0x7ff90cd6fb64,29694286,0,0x0,8
tick,0x7ff90cd6fb64,29710182,0,0x0,8
tick,0x7ff90cd6fb64,29726229,0,0x0,8
tick,0x7ff90cd6fb64,29742015,0,0x0,8
tick,0x7ff90cd6fb64,29757125,0,0x0,8
tick,0x7ff90cd6fb64,29772976,0,0x0,8
tick,0x7ff90cd6fb64,29788929,0,0x0,8
tick,0x7ff90cd6fb64,29804841,0,0x0,8
tick,0x7ff90cd6fb64,29819881,0,0x0,8
tick,0x7ff90cd6fb64,29835892,0,0x0,8
tick,0x7ff90cd6fb64,29851735,0,0x0,8
tick,0x7ff90cd6fb64,29867733,0,0x0,8
tick,0x7ff90cd6fb64,29883715,0,0x0,8
tick,0x7ff90cd6fb64,29899885,0,0x0,8
tick,0x7ff90cd6fb64,29915723,0,0x0,8
tick,0x7ff90cd6fb64,29931670,0,0x0,8
tick,0x7ff90cd6fb64,29947674,0,0x0,8
tick,0x7ff90cd6fb64,29963626,0,0x0,8
tick,0x7ff90cd6fb64,29979613,0,0x0,8
tick,0x7ff90cd6fb64,29995563,0,0x0,8
tick,0x7ff90cd6fb64,30010442,0,0x0,8
tick,0x7ff90cd6fb64,30026366,0,0x0,8
tick,0x7ff90cd6fb64,30042461,0,0x0,8
tick,0x7ff90cd6fb64,30058481,0,0x0,8
tick,0x7ff90cd6fb64,30073272,0,0x0,8
tick,0x7ff90cd6fb64,30089325,0,0x0,8
tick,0x7ff90cd6fb64,30105162,0,0x0,8
tick,0x7ff90cd6fb64,30120115,0,0x0,8
tick,0x7ff90cd6fb64,30136096,0,0x0,8
tick,0x7ff90cd6fb64,30152282,0,0x0,8
tick,0x7ff90cd6fb64,30168128,0,0x0,8
tick,0x7ff90cd6fb64,30184249,0,0x0,8
tick,0x7ff90cd6fb64,30199969,0,0x0,8
tick,0x7ff90cd6fb64,30215594,0,0x0,8
tick,0x7ff90cd6fb64,30231400,0,0x0,8
tick,0x7ff90cd6fb64,30247541,0,0x0,8
tick,0x7ff90cd6fb64,30263526,0,0x0,8
tick,0x7ff90cd6fb64,30279430,0,0x0,8
tick,0x7ff90cd6fb64,30294983,0,0x0,8
tick,0x7ff90cd6fb64,30311053,0,0x0,8
tick,0x7ff90cd6fb64,30327082,0,0x0,8
tick,0x7ff90cd6fb64,30342971,0,0x0,8
tick,0x7ff90cd6fb64,30358960,0,0x0,8
tick,0x7ff90cd6fb64,30374998,0,0x0,8
tick,0x7ff90cd6fb64,30390562,0,0x0,8
tick,0x7ff90cd6fb64,30406361,0,0x0,8
tick,0x7ff90cd6fb64,30421457,0,0x0,8
tick,0x7ff90cd6fb64,30436356,0,0x0,8
tick,0x7ff90cd6fb64,30452209,0,0x0,8
tick,0x7ff90cd6fb64,30468038,0,0x0,8
tick,0x7ff90cd6fb64,30484084,0,0x0,8
tick,0x7ff90cd6fb64,30500051,0,0x0,8
tick,0x7ff90cd6fb64,30515983,0,0x0,8
tick,0x7ff90cd6fb64,30531964,0,0x0,8
tick,0x7ff90cd6fb64,30547962,0,0x0,8
tick,0x7ff90cd6fb64,30563847,0,0x0,8
tick,0x7ff90cd6fb64,30579959,0,0x0,8
tick,0x7ff90cd6fb64,30595799,0,0x0,8
tick,0x7ff90cd6fb64,30610911,0,0x0,8
tick,0x7ff90cd6fb64,30626794,0,0x0,8
tick,0x7ff90cd6fb64,30642842,0,0x0,8
tick,0x7ff90cd6fb64,30658877,0,0x0,8
tick,0x7ff90cd6fb64,30673724,0,0x0,8
tick,0x7ff90cd6fb64,30688563,0,0x0,8
tick,0x7ff90cd6fb64,30704675,0,0x0,8
tick,0x7ff90cd6fb64,30719563,0,0x0,8
tick,0x7ff90cd6fb64,30735537,0,0x0,8
tick,0x7ff90cd6fb64,30750385,0,0x0,8
tick,0x7ff90cd6fb64,30765451,0,0x0,8
tick,0x7ff90cd6fb64,30780362,0,0x0,8
tick,0x7ff90cd6fb64,30796267,0,0x0,8
tick,0x7ff90cd6fb64,30812225,0,0x0,8
tick,0x7ff90cd6fb64,30828277,0,0x0,8
tick,0x7ff90cd6fb64,30844296,0,0x0,8
tick,0x7ff90cd6fb64,30859123,0,0x0,8
tick,0x7ff90cd6fb64,30874045,0,0x0,8
tick,0x7ff90cd6fb64,30889182,0,0x0,8
tick,0x7ff90cd6fb64,30905079,0,0x0,8
tick,0x7ff90cd6fb64,30920984,0,0x0,8
tick,0x7ff90cd6fb64,30936982,0,0x0,8
tick,0x7ff90cd6fb64,30953041,0,0x0,8
tick,0x7ff90cd6fb64,30968991,0,0x0,8
tick,0x7ff90cd6fb64,30984965,0,0x0,8
tick,0x7ff90cd6fb64,31000728,0,0x0,8
tick,0x7ff90cd6fb64,31017006,0,0x0,8
tick,0x7ff90cd6fb64,31032775,0,0x0,8
tick,0x7ff90cd6fb64,31048585,0,0x0,8
tick,0x7ff90cd6fb64,31064529,0,0x0,8
tick,0x7ff90cd6fb64,31080467,0,0x0,8
tick,0x7ff90cd6fb64,31096480,0,0x0,8
tick,0x7ff90cd6fb64,31112468,0,0x0,8
tick,0x7ff90cd6fb64,31128285,0,0x0,8
tick,0x7ff90cd6fb64,31144297,0,0x0,8
tick,0x7ff90cd6fb64,31160258,0,0x0,8
tick,0x7ff90cd6fb64,31176129,0,0x0,8
tick,0x7ff90cd6fb64,31192132,0,0x0,8
tick,0x7ff90cd6fb64,31207105,0,0x0,8
tick,0x7ff90cd6fb64,31223088,0,0x0,8
tick,0x7ff90cd6fb64,31239014,0,0x0,8
tick,0x7ff90cd6fb64,31255006,0,0x0,8
tick,0x7ff90cd6fb64,31269888,0,0x0,8
tick,0x7ff90cd6fb64,31285856,0,0x0,8
tick,0x7ff90cd6fb64,31301862,0,0x0,8
tick,0x7ff90cd6fb64,31317819,0,0x0,8
tick,0x7ff90cd6fb64,31333910,0,0x0,8
tick,0x7ff90cd6fb64,31349844,0,0x0,8
tick,0x7ff90cd6fb64,31365702,0,0x0,8
tick,0x7ff90cd6fb64,31381588,0,0x0,8
tick,0x7ff90cd6fb64,31397736,0,0x0,8
tick,0x7ff90cd6fb64,31413645,0,0x0,8
tick,0x7ff90cd6fb64,31429586,0,0x0,8
tick,0x7ff90cd6fb64,31445585,0,0x0,8
tick,0x7ff90cd6fb64,31460532,0,0x0,8
tick,0x7ff90cd6fb64,31476444,0,0x0,8
tick,0x7ff90cd6fb64,31492427,0,0x0,8
tick,0x7ff90cd6fb64,31507476,0,0x0,8
tick,0x7ff90cd6fb64,31523355,0,0x0,8
tick,0x7ff90cd6fb64,31539335,0,0x0,8
tick,0x7ff90cd6fb64,31554111,0,0x0,8
tick,0x7ff90cd6fb64,31570134,0,0x0,8
tick,0x7ff90cd6fb64,31585075,0,0x0,8
tick,0x7ff90cd6fb64,31601414,0,0x0,8
tick,0x7ff90cd6fb64,31617097,0,0x0,8
tick,0x7ff90cd6fb64,31633038,0,0x0,8
tick,0x7ff90cd6fb64,31649059,0,0x0,8
tick,0x7ff90cd6fb64,31664995,0,0x0,8
tick,0x7ff90cd6fb64,31680961,0,0x0,8
tick,0x7ff90cd6fb64,31695948,0,0x0,8
tick,0x7ff90cd6fb64,31710783,0,0x0,8
tick,0x7ff90cd6fb64,31726689,0,0x0,8
tick,0x7ff90cd6fb64,31742699,0,0x0,8
tick,0x7ff90cd6fb64,31758769,0,0x0,8
tick,0x7ff90cd6fb64,31773701,0,0x0,8
tick,0x7ff90cd6fb64,31789557,0,0x0,8
tick,0x7ff90cd6fb64,31804353,0,0x0,8
tick,0x7ff90cd6fb64,31820395,0,0x0,8
tick,0x7ff90cd6fb64,31836417,0,0x0,8
tick,0x7ff90cd6fb64,31851247,0,0x0,8
tick,0x7ff90cd6fb64,31867359,0,0x0,8
tick,0x7ff90cd6fb64,31883226,0,0x0,8
tick,0x7ff90cd6fb64,31899234,0,0x0,8
tick,0x7ff90cd6fb64,31915184,0,0x0,8
tick,0x7ff90cd6fb64,31931064,0,0x0,8
tick,0x7ff90cd6fb64,31947087,0,0x0,8
tick,0x7ff90cd6fb64,31963061,0,0x0,8
tick,0x7ff90cd6fb64,31978937,0,0x0,8
tick,0x7ff90cd6fb64,31994887,0,0x0,8
tick,0x7ff90cd6fb64,32010874,0,0x0,8
tick,0x7ff90cd6fb64,32026737,0,0x0,8
tick,0x7ff90cd6fb64,32042783,0,0x0,8
tick,0x7ff90cd6fb64,32058805,0,0x0,8
tick,0x7ff90cd6fb64,32074779,0,0x0,8
tick,0x7ff90cd6fb64,32090620,0,0x0,8
tick,0x7ff90cd6fb64,32105836,0,0x0,8
tick,0x7ff90cd6fb64,32121716,0,0x0,8
tick,0x7ff90cd6fb64,32137726,0,0x0,8
tick,0x7ff90cd6fb64,32153545,0,0x0,8
tick,0x7ff90cd6fb64,32169569,0,0x0,8
tick,0x7ff90cd6fb64,32185582,0,0x0,8
tick,0x7ff90cd6fb64,32201530,0,0x0,8
tick,0x7ff90cd6fb64,32217588,0,0x0,8
tick,0x7ff90cd6fb64,32233440,0,0x0,8
tick,0x7ff90cd6fb64,32249347,0,0x0,8
tick,0x7ff90cd6fb64,32265341,0,0x0,8
tick,0x7ff90cd6fb64,32281265,0,0x0,8
tick,0x7ff90cd6fb64,32297176,0,0x0,8
tick,0x7ff90cd6fb64,32313082,0,0x0,8
tick,0x7ff90cd6fb64,32329049,0,0x0,8
tick,0x7ff90cd6fb64,32345047,0,0x0,8
tick,0x7ff90cd6fb64,32360975,0,0x0,8
tick,0x7ff90cd6fb64,32375987,0,0x0,8
tick,0x7ff90cd6fb64,32391947,0,0x0,8
tick,0x7ff90cd6fb64,32407835,0,0x0,8
tick,0x7ff90cd6fb64,32423967,0,0x0,8
tick,0x7ff90cd6fb64,32439779,0,0x0,8
tick,0x7ff90cd6fb64,32455873,0,0x0,8
tick,0x7ff90cd6fb64,32470772,0,0x0,8
tick,0x7ff90cd6fb64,32486669,0,0x0,8
tick,0x7ff90cd6fb64,32502665,0,0x0,8
tick,0x7ff90cd6fb64,32518788,0,0x0,8
tick,0x7ff90cd6fb64,32534658,0,0x0,8
tick,0x7ff90cd6fb64,32549739,0,0x0,8
tick,0x7ff90cd6fb64,32565664,0,0x0,8
tick,0x7ff90cd6fb64,32581694,0,0x0,8
tick,0x7ff90cd6fb64,32597500,0,0x0,8
tick,0x7ff90cd6fb64,32613385,0,0x0,8
tick,0x7ff90cd6fb64,32629379,0,0x0,8
tick,0x7ff90cd6fb64,32645354,0,0x0,8
tick,0x7ff90cd6fb64,32661281,0,0x0,8
tick,0x7ff90cd6fb64,32677336,0,0x0,8
tick,0x7ff90cd6fb64,32693191,0,0x0,8
tick,0x7ff90cd6fb64,32709191,0,0x0,8
tick,0x7ff90cd6fb64,32725349,0,0x0,8
tick,0x7ff90cd6fb64,32741421,0,0x0,8
tick,0x7ff90cd6fb64,32757000,0,0x0,8
tick,0x7ff90cd6fb64,32772036,0,0x0,8
tick,0x7ff90cd6fb64,32787815,0,0x0,8
tick,0x7ff90cd6fb64,32802953,0,0x0,8
tick,0x7ff90cd6fb64,32818817,0,0x0,8
tick,0x7ff90cd6fb64,32834845,0,0x0,8
tick,0x7ff90cd6fb64,32850790,0,0x0,8
tick,0x7ff90cd6fb64,32866771,0,0x0,8
tick,0x7ff90cd6fb64,32882712,0,0x0,8
tick,0x7ff90cd6fb64,32898666,0,0x0,8
tick,0x7ff90cd6fb64,32914759,0,0x0,8
tick,0x7ff90cd6fb64,32930570,0,0x0,8
tick,0x7ff90cd6fb64,32945543,0,0x0,8
tick,0x7ff90cd6fb64,32961507,0,0x0,8
tick,0x7ff90cd6fb64,32977645,0,0x0,8
tick,0x7ff90cd6fb64,32993419,0,0x0,8
tick,0x7ff90cd6fb64,33009382,0,0x0,8
tick,0x7ff90cd6fb64,33025271,0,0x0,8
tick,0x7ff90cd6fb64,33041291,0,0x0,8
tick,0x7ff90cd6fb64,33056267,0,0x0,8
tick,0x7ff90cd6fb64,33072301,0,0x0,8
tick,0x7ff90cd6fb64,33087230,0,0x0,8
tick,0x7ff90cd6fb64,33103208,0,0x0,8
tick,0x7ff90cd6fb64,33119156,0,0x0,8
tick,0x7ff90cd6fb64,33135141,0,0x0,8
tick,0x7ff90cd6fb64,33151131,0,0x0,8
tick,0x7ff90cd6fb64,33167038,0,0x0,8
tick,0x7ff90cd6fb64,33182906,0,0x0,8
tick,0x7ff90cd6fb64,33198927,0,0x0,8
tick,0x7ff90cd6fb64,33214933,0,0x0,8
tick,0x7ff90cd6fb64,33230808,0,0x0,8
tick,0x7ff90cd6fb64,33246808,0,0x0,8
tick,0x7ff90cd6fb64,33262683,0,0x0,8
tick,0x7ff90cd6fb64,33278614,0,0x0,8
tick,0x7ff90cd6fb64,33294755,0,0x0,8
tick,0x7ff90cd6fb64,33310542,0,0x0,8
tick,0x7ff90cd6fb64,33326573,0,0x0,8
tick,0x7ff90cd6fb64,33342456,0,0x0,8
tick,0x7ff90cd6fb64,33358438,0,0x0,8
tick,0x7ff90cd6fb64,33373235,0,0x0,8
tick,0x7ff90cd6fb64,33388246,0,0x0,8
tick,0x7ff90cd6fb64,33404281,0,0x0,8
tick,0x7ff90cd6fb64,33420222,0,0x0,8
tick,0x7ff90cd6fb64,33436215,0,0x0,8
tick,0x7ff90cd6fb64,33451182,0,0x0,8
tick,0x7ff90cd6fb64,33467038,0,0x0,8
tick,0x7ff90cd6fb64,33482999,0,0x0,8
tick,0x7ff90cd6fb64,33499112,0,0x0,8
tick,0x7ff90cd6fb64,33514524,0,0x0,8
tick,0x7ff90cd6fb64,33530338,0,0x0,8
tick,0x7ff90cd6fb64,33546387,0,0x0,8
tick,0x7ff90cd6fb64,33562319,0,0x0,8
tick,0x7ff90cd6fb64,33578343,0,0x0,8
tick,0x7ff90cd6fb64,33594270,0,0x0,8
tick,0x7ff90cd6fb64,33609321,0,0x0,8
tick,0x7ff90cd6fb64,33625228,0,0x0,8
tick,0x7ff90cd6fb64,33641111,0,0x0,8
tick,0x7ff90cd6fb64,33657050,0,0x0,8
tick,0x7ff90cd6fb64,33672035,0,0x0,8
tick,0x7ff90cd6fb64,33686951,0,0x0,8
tick,0x7ff90cd6fb64,33702889,0,0x0,8
tick,0x7ff90cd6fb64,33718990,0,0x0,8
tick,0x7ff90cd6fb64,33734124,0,0x0,8
tick,0x7ff90cd6fb64,33750098,0,0x0,8
tick,0x7ff90cd6fb64,33766006,0,0x0,8
tick,0x7ff90cd6fb64,33781984,0,0x0,8
tick,0x7ff90cd6fb64,33797916,0,0x0,8
tick,0x7ff90cd6fb64,33813963,0,0x0,8
tick,0x7ff90cd6fb64,33829755,0,0x0,8
tick,0x7ff90cd6fb64,33845772,0,0x0,8
tick,0x7ff90cd6fb64,33861681,0,0x0,8
tick,0x7ff90cd6fb64,33877626,0,0x0,8
tick,0x7ff90cd6fb64,33893606,0,0x0,8
tick,0x7ff90cd6fb64,33909684,0,0x0,8
tick,0x7ff90cd6fb64,33925881,0,0x0,8
tick,0x7ff90cd6fb64,33941939,0,0x0,8
tick,0x7ff90cd6fb64,33957574,0,0x0,8
tick,0x7ff90cd6fb64,33973731,0,0x0,8
tick,0x7ff90cd6fb64,33989462,0,0x0,8
tick,0x7ff90cd6fb64,34005323,0,0x0,8
tick,0x7ff90cd6fb64,34021417,0,0x0,8
tick,0x7ff90cd6fb64,34037257,0,0x0,8
tick,0x7ff90cd6fb64,34053314,0,0x0,8
tick,0x7ff90cd6fb64,34069211,0,0x0,8
tick,0x7ff90cd6fb64,34085275,0,0x0,8
tick,0x7ff90cd6fb64,34101170,0,0x0,8
tick,0x7ff90cd6fb64,34117337,0,0x0,8
tick,0x7ff90cd6fb64,34133187,0,0x0,8
tick,0x7ff90cd6fb64,34149111,0,0x0,8
tick,0x7ff90cd6fb64,34165117,0,0x0,8
tick,0x7ff90cd6fb64,34181135,0,0x0,8
tick,0x7ff90cd6fb64,34197143,0,0x0,8
tick,0x7ff90cd6fb64,34212762,0,0x0,8
tick,0x7ff90cd6fb64,34228766,0,0x0,8
tick,0x7ff90cd6fb64,34244784,0,0x0,8
tick,0x7ff90cd6fb64,34259697,0,0x0,8
tick,0x7ff90cd6fb64,34275601,0,0x0,8
tick,0x7ff90cd6fb64,34291584,0,0x0,8
tick,0x7ff90cd6fb64,34307579,0,0x0,8
tick,0x7ff90cd6fb64,34323519,0,0x0,8
tick,0x7ff90cd6fb64,34339891,0,0x0,8
tick,0x7ff90cd6fb64,34354502,0,0x0,8
tick,0x7ff90cd6fb64,34369429,0,0x0,8
tick,0x7ff90cd6fb64,34385486,0,0x0,8
tick,0x7ff90cd6fb64,34400319,0,0x0,8
tick,0x7ff90cd6fb64,34416268,0,0x0,8
tick,0x7ff90cd6fb64,34432261,0,0x0,8
tick,0x7ff90cd6fb64,34448196,0,0x0,8
tick,0x7ff90cd6fb64,34463269,0,0x0,8
tick,0x7ff90cd6fb64,34479169,0,0x0,8
tick,0x7ff90cd6fb64,34494025,0,0x0,8
tick,0x7ff90cd6fb64,34510089,0,0x0,8
tick,0x7ff90cd6fb64,34524946,0,0x0,8
tick,0x7ff90cd6fb64,34541003,0,0x0,8
tick,0x7ff90cd6fb64,34556915,0,0x0,8
tick,0x7ff90cd6fb64,34571912,0,0x0,8
tick,0x7ff90cd6fb64,34586967,0,0x0,8
tick,0x7ff90cd6fb64,34603048,0,0x0,8
tick,0x7ff90cd6fb64,34618989,0,0x0,8
tick,0x7ff90cd6fb64,34634924,0,0x0,8
tick,0x7ff90cd6fb64,34650803,0,0x0,8
tick,0x7ff90cd6fb64,34666650,0,0x0,8
tick,0x7ff90cd6fb64,34682755,0,0x0,8
tick,0x7ff90cd6fb64,34698596,0,0x0,8
tick,0x7ff90cd6fb64,34714540,0,0x0,8
tick,0x7ff90cd6fb64,34729495,0,0x0,8
tick,0x7ff90cd6fb64,34745489,0,0x0,8
tick,0x7ff90cd6fb64,34761615,0,0x0,8
tick,0x7ff90cd6fb64,34777503,0,0x0,8
tick,0x7ff90cd6fb64,34793426,0,0x0,8
tick,0x7ff90cd6fb64,34808311,0,0x0,8
tick,0x7ff90cd6fb64,34823244,0,0x0,8
tick,0x7ff90cd6fb64,34839221,0,0x0,8
tick,0x7ff90cd6fb64,34855241,0,0x0,8
tick,0x7ff90cd6fb64,34871248,0,0x0,8
tick,0x7ff90cd6fb64,34886118,0,0x0,8
tick,0x7ff90cd6fb64,34902238,0,0x0,8
tick,0x7ff90cd6fb64,34918138,0,0x0,8
tick,0x7ff90cd6fb64,34933951,0,0x0,8
tick,0x7ff90cd6fb64,34949946,0,0x0,8
tick,0x7ff90cd6fb64,34965875,0,0x0,8
tick,0x7ff90cd6fb64,34981779,0,0x0,8
tick,0x7ff90cd6fb64,34997894,0,0x0,8
tick,0x7ff90cd6fb64,35013728,0,0x0,8
tick,0x7ff90cd6fb64,35029633,0,0x0,8
tick,0x7ff90cd6fb64,35045595,0,0x0,8
tick,0x7ff90cd6fb64,35061560,0,0x0,8
tick,0x7ff90cd6fb64,35077508,0,0x0,8
tick,0x7ff90cd6fb64,35093512,0,0x0,8
tick,0x7ff90cd6fb64,35109398,0,0x0,8
tick,0x7ff90cd6fb64,35125014,0,0x0,8
tick,0x7ff90cd6fb64,35140923,0,0x0,8
tick,0x7ff90cd6fb64,35156953,0,0x0,8
tick,0x7ff90cd6fb64,35172823,0,0x0,8
tick,0x7ff90cd6fb64,35188776,0,0x0,8
tick,0x7ff90cd6fb64,35204703,0,0x0,8
tick,0x7ff90cd6fb64,35219545,0,0x0,8
tick,0x7ff90cd6fb64,35235535,0,0x0,8
tick,0x7ff90cd6fb64,35250441,0,0x0,8
tick,0x7ff90cd6fb64,35265400,0,0x0,8
tick,0x7ff90cd6fb64,35280390,0,0x0,8
tick,0x7ff90cd6fb64,35296319,0,0x0,8
tick,0x7ff90cd6fb64,35311192,0,0x0,8
tick,0x7ff90cd6fb64,35327209,0,0x0,8
tick,0x7ff90cd6fb64,35343178,0,0x0,8
tick,0x7ff90cd6fb64,35359124,0,0x0,8
tick,0x7ff90cd6fb64,35374150,0,0x0,8
tick,0x7ff90cd6fb64,35390014,0,0x0,8
tick,0x7ff90cd6fb64,35406149,0,0x0,8
tick,0x7ff90cd6fb64,35421052,0,0x0,8
tick,0x7ff90cd6fb64,35437009,0,0x0,8
tick,0x7ff90cd6fb64,35452950,0,0x0,8
tick,0x7ff90cd6fb64,35468937,0,0x0,8
tick,0x7ff90cd6fb64,35484815,0,0x0,8
tick,0x7ff90cd6fb64,35500991,0,0x0,8
tick,0x7ff90cd6fb64,35516742,0,0x0,8
tick,0x7ff90cd6fb64,35532846,0,0x0,8
tick,0x7ff90cd6fb64,35548675,0,0x0,8
tick,0x7ff90cd6fb64,35564742,0,0x0,8
tick,0x7ff90cd6fb64,35580655,0,0x0,8
tick,0x7ff90cd6fb64,35596634,0,0x0,8
tick,0x7ff90cd6fb64,35612616,0,0x0,8
tick,0x7ff90cd6fb64,35628554,0,0x0,8
tick,0x7ff90cd6fb64,35644488,0,0x0,8
tick,0x7ff90cd6fb64,35660536,0,0x0,8
tick,0x7ff90cd6fb64,35676346,0,0x0,8
tick,0x7ff90cd6fb64,35692533,0,0x0,8
tick,0x7ff90cd6fb64,35708335,0,0x0,8
tick,0x7ff90cd6fb64,35723432,0,0x0,8
tick,0x7ff90cd6fb64,35739206,0,0x0,8
tick,0x7ff90cd6fb64,35755386,0,0x0,8
tick,0x7ff90cd6fb64,35771173,0,0x0,8
tick,0x7ff90cd6fb64,35786063,0,0x0,8
tick,0x7ff90cd6fb64,35802198,0,0x0,8
tick,0x7ff90cd6fb64,35818301,0,0x0,8
tick,0x7ff90cd6fb64,35833978,0,0x0,8
tick,0x7ff90cd6fb64,35848940,0,0x0,8
tick,0x7ff90cd6fb64,35863808,0,0x0,8
tick,0x7ff90cd6fb64,35879722,0,0x0,8
tick,0x7ff90cd6fb64,35895658,0,0x0,8
tick,0x7ff90cd6fb64,35910625,0,0x0,8
tick,0x7ff90cd6fb64,35926574,0,0x0,8
tick,0x7ff90cd6fb64,35942799,0,0x0,8
tick,0x7ff90cd6fb64,35958483,0,0x0,8
tick,0x7ff90cd6fb64,35974597,0,0x0,8
tick,0x7ff90cd6fb64,35989517,0,0x0,8
tick,0x7ff90cd6fb64,36004532,0,0x0,8
tick,0x7ff90cd6fb64,36020328,0,0x0,8
tick,0x7ff90cd6fb64,36036364,0,0x0,8
tick,0x7ff90cd6fb64,36052321,0,0x0,8
tick,0x7ff90cd6fb64,36068270,0,0x0,8
tick,0x7ff90cd6fb64,36084281,0,0x0,8
tick,0x7ff90cd6fb64,36100085,0,0x0,8
tick,0x7ff90cd6fb64,36116078,0,0x0,8
tick,0x7ff90cd6fb64,36132020,0,0x0,8
tick,0x7ff90cd6fb64,36147961,0,0x0,8
tick,0x7ff90cd6fb64,36162962,0,0x0,8
tick,0x7ff90cd6fb64,36178928,0,0x0,8
tick,0x7ff90cd6fb64,36194917,0,0x0,8
tick,0x7ff90cd6fb64,36210855,0,0x0,8
tick,0x7ff90cd6fb64,36225749,0,0x0,8
tick,0x7ff90cd6fb64,36241729,0,0x0,8
tick,0x7ff90cd6fb64,36257672,0,0x0,8
tick,0x7ff90cd6fb64,36273712,0,0x0,8
tick,0x7ff90cd6fb64,36288655,0,0x0,8
tick,0x7ff90cd6fb64,36304671,0,0x0,8
tick,0x7ff90cd6fb64,36320501,0,0x0,8
tick,0x7ff90cd6fb64,36336067,0,0x0,8
tick,0x7ff90cd6fb64,36351979,0,0x0,8
tick,0x7ff90cd6fb64,36367965,0,0x0,8
tick,0x7ff90cd6fb64,36382879,0,0x0,8
tick,0x7ff90cd6fb64,36398898,0,0x0,8
tick,0x7ff90cd6fb64,36413787,0,0x0,8
tick,0x7ff90cd6fb64,36428756,0,0x0,8
tick,0x7ff90cd6fb64,36443758,0,0x0,8
tick,0x7ff90cd6fb64,36459701,0,0x0,8
tick,0x7ff90cd6fb64,36475768,0,0x0,8
tick,0x7ff90cd6fb64,36491715,0,0x0,8
tick,0x7ff90cd6fb64,36506668,0,0x0,8
tick,0x7ff90cd6fb64,36522604,0,0x0,8
tick,0x7ff90cd6fb64,36538705,0,0x0,8
tick,0x7ff90cd6fb64,36554637,0,0x0,8
tick,0x7ff90cd6fb64,36570706,0,0x0,8
tick,0x7ff90cd6fb64,36586611,0,0x0,8
tick,0x7ff90cd6fb64,36602722,0,0x0,8
tick,0x7ff90cd6fb64,36618365,0,0x0,8
tick,0x7ff90cd6fb64,36634381,0,0x0,8
tick,0x7ff90cd6fb64,36650397,0,0x0,8
tick,0x7ff90cd6fb64,36666296,0,0x0,8
tick,0x7ff90cd6fb64,36682295,0,0x0,8
tick,0x7ff90cd6fb64,36698242,0,0x0,8
tick,0x7ff90cd6fb64,36714102,0,0x0,8
tick,0x7ff90cd6fb64,36729616,0,0x0,8
tick,0x7ff90cd6fb64,36745568,0,0x0,8
tick,0x7ff90cd6fb64,36761617,0,0x0,8
tick,0x7ff90cd6fb64,36777619,0,0x0,8
tick,0x7ff90cd6fb64,36793569,0,0x0,8
tick,0x7ff90cd6fb64,36809544,0,0x0,8
tick,0x7ff90cd6fb64,36825479,0,0x0,8
tick,0x7ff90cd6fb64,36841181,0,0x0,8
tick,0x7ff90cd6fb64,36856977,0,0x0,8
tick,0x7ff90cd6fb64,36873045,0,0x0,8
tick,0x7ff90cd6fb64,36889004,0,0x0,8
tick,0x7ff90cd6fb64,36904966,0,0x0,8
tick,0x7ff90cd6fb64,36920941,0,0x0,8
tick,0x7ff90cd6fb64,36936893,0,0x0,8
tick,0x7ff90cd6fb64,36952740,0,0x0,8
tick,0x7ff90cd6fb64,36968882,0,0x0,8
tick,0x7ff90cd6fb64,36983966,0,0x0,8
tick,0x7ff90cd6fb64,36998690,0,0x0,8
tick,0x7ff90cd6fb64,37014791,0,0x0,8
tick,0x7ff90cd6fb64,37030685,0,0x0,8
tick,0x7ff90cd6fb64,37046542,0,0x0,8
tick,0x7ff90cd6fb64,37061519,0,0x0,8
tick,0x7ff90cd6fb64,37077480,0,0x0,8
tick,0x7ff90cd6fb64,37093319,0,0x0,8
tick,0x7ff90cd6fb64,37109329,0,0x0,8
tick,0x7ff90cd6fb64,37125318,0,0x0,8
tick,0x7ff90cd6fb64,37140327,0,0x0,8
tick,0x7ff90cd6fb64,37156169,0,0x0,8
tick,0x7ff90cd6fb64,37172193,0,0x0,8
tick,0x7ff90cd6fb64,37187141,0,0x0,8
tick,0x7ff90cd6fb64,37203056,0,0x0,8
tick,0x7ff90cd6fb64,37219056,0,0x0,8
tick,0x7ff90cd6fb64,37234068,0,0x0,8
tick,0x7ff90cd6fb64,37248887,0,0x0,8
tick,0x7ff90cd6fb64,37264846,0,0x0,8
tick,0x7ff90cd6fb64,37280809,0,0x0,8
tick,0x7ff90cd6fb64,37296753,0,0x0,8
tick,0x7ff90cd6fb64,37312767,0,0x0,8
tick,0x7ff90cd6fb64,37327679,0,0x0,8
tick,0x7ff90cd6fb64,37343749,0,0x0,8
tick,0x7ff90cd6fb64,37359676,0,0x0,8
tick,0x7ff90cd6fb64,37375640,0,0x0,8
tick,0x7ff90cd6fb64,37390515,0,0x0,8
tick,0x7ff90cd6fb64,37406549,0,0x0,8
tick,0x7ff90cd6fb64,37422535,0,0x0,8
tick,0x7ff90cd6fb64,37438351,0,0x0,8
tick,0x7ff90cd6fb64,37454461,0,0x0,8
tick,0x7ff90cd6fb64,37470393,0,0x0,8
tick,0x7ff90cd6fb64,37486355,0,0x0,8
tick,0x7ff90cd6fb64,37502291,0,0x0,8
tick,0x7ff90cd6fb64,37518347,0,0x0,8
tick,0x7ff90cd6fb64,37533251,0,0x0,8
tick,0x7ff90cd6fb64,37549157,0,0x0,8
tick,0x7ff90cd6fb64,37565212,0,0x0,8
tick,0x7ff90cd6fb64,37581091,0,0x0,8
tick,0x7ff90cd6fb64,37597271,0,0x0,8
tick,0x7ff90cd6fb64,37613108,0,0x0,8
tick,0x7ff90cd6fb64,37629138,0,0x0,8
tick,0x7ff90cd6fb64,37645091,0,0x0,8
tick,0x7ff90cd6fb64,37660883,0,0x0,8
tick,0x7ff90cd6fb64,37676993,0,0x0,8
tick,0x7ff90cd6fb64,37692793,0,0x0,8
tick,0x7ff90cd6fb64,37708771,0,0x0,8
tick,0x7ff90cd6fb64,37724910,0,0x0,8
tick,0x7ff90cd6fb64,37739683,0,0x0,8
tick,0x7ff90cd6fb64,37755742,0,0x0,8
tick,0x7ff90cd6fb64,37771802,0,0x0,8
tick,0x7ff90cd6fb64,37786538,0,0x0,8
tick,0x7ff90cd6fb64,37802709,0,0x0,8
tick,0x7ff90cd6fb64,37818453,0,0x0,8
tick,0x7ff90cd6fb64,37834427,0,0x0,8
tick,0x7ff90cd6fb64,37850261,0,0x0,8
tick,0x7ff90cd6fb64,37866632,0,0x0,8
tick,0x7ff90cd6fb64,37882250,0,0x0,8
tick,0x7ff90cd6fb64,37898265,0,0x0,8
tick,0x7ff90cd6fb64,37913356,0,0x0,8
tick,0x7ff90cd6fb64,37929260,0,0x0,8
tick,0x7ff90cd6fb64,37944170,0,0x0,8
tick,0x7ff90cd6fb64,37960078,0,0x0,8
tick,0x7ff90cd6fb64,37976036,0,0x0,8
tick,0x7ff90cd6fb64,37991949,0,0x0,8
tick,0x7ff90cd6fb64,38007897,0,0x0,8
tick,0x7ff90cd6fb64,38022806,0,0x0,8
tick,0x7ff90cd6fb64,38038379,0,0x0,8
tick,0x7ff90cd6fb64,38054302,0,0x0,8
tick,0x7ff90cd6fb64,38069306,0,0x0,8
tick,0x7ff90cd6fb64,38084334,0,0x0,8
tick,0x7ff90cd6fb64,38099157,0,0x0,8
tick,0x7ff90cd6fb64,38115086,0,0x0,8
tick,0x7ff90cd6fb64,38131080,0,0x0,8
tick,0x7ff90cd6fb64,38147121,0,0x0,8
tick,0x7ff90cd6fb64,38162998,0,0x0,8
tick,0x7ff90cd6fb64,38179103,0,0x0,8
tick,0x7ff90cd6fb64,38194852,0,0x0,8
tick,0x7ff90cd6fb64,38210870,0,0x0,8
tick,0x7ff90cd6fb64,38226822,0,0x0,8
tick,0x7ff90cd6fb64,38242665,0,0x0,8
tick,0x7ff90cd6fb64,38258764,0,0x0,8
tick,0x7ff90cd6fb64,38274584,0,0x0,8
tick,0x7ff90cd6fb64,38290651,0,0x0,8
tick,0x7ff90cd6fb64,38306488,0,0x0,8
tick,0x7ff90cd6fb64,38322512,0,0x0,8
tick,0x7ff90cd6fb64,38337505,0,0x0,8
tick,0x7ff90cd6fb64,38352436,0,0x0,8
tick,0x7ff90cd6fb64,38367389,0,0x0,8
tick,0x7ff90cd6fb64,38383286,0,0x0,8
tick,0x7ff90cd6fb64,38399334,0,0x0,8
tick,0x7ff90cd6fb64,38415300,0,0x0,8
tick,0x7ff90cd6fb64,38431184,0,0x0,8
tick,0x7ff90cd6fb64,38446748,0,0x0,8
tick,0x7ff90cd6fb64,38462672,0,0x0,8
tick,0x7ff90cd6fb64,38478603,0,0x0,8
tick,0x7ff90cd6fb64,38494713,0,0x0,8
tick,0x7ff90cd6fb64,38509599,0,0x0,8
tick,0x7ff90cd6fb64,38525559,0,0x0,8
tick,0x7ff90cd6fb64,38541056,0,0x0,8
tick,0x7ff90cd6fb64,38557100,0,0x0,8
tick,0x7ff90cd6fb64,38573005,0,0x0,8
tick,0x7ff90cd6fb64,38588938,0,0x0,8
tick,0x7ff90cd6fb64,38603937,0,0x0,8
tick,0x7ff90cd6fb64,38619981,0,0x0,8
tick,0x7ff90cd6fb64,38635992,0,0x0,8
tick,0x7ff90cd6fb64,38651816,0,0x0,8
tick,0x7ff90cd6fb64,38667704,0,0x0,8
tick,0x7ff90cd6fb64,38683672,0,0x0,8
tick,0x7ff90cd6fb64,38699794,0,0x0,8
tick,0x7ff90cd6fb64,38715741,0,0x0,8
tick,0x7ff90cd6fb64,38731722,0,0x0,8
tick,0x7ff90cd6fb64,38746975,0,0x0,8
tick,0x7ff90cd6fb64,38763083,0,0x0,8
tick,0x7ff90cd6fb64,38778978,0,0x0,8
tick,0x7ff90cd6fb64,38794839,0,0x0,8
tick,0x7ff90cd6fb64,38810797,0,0x0,8
tick,0x7ff90cd6fb64,38826752,0,0x0,8
tick,0x7ff90cd6fb64,38842803,0,0x0,8
tick,0x7ff90cd6fb64,38858736,0,0x0,8
tick,0x7ff90cd6fb64,38874701,0,0x0,8
tick,0x7ff90cd6fb64,38890606,0,0x0,8
tick,0x7ff90cd6fb64,38906546,0,0x0,8
tick,0x7ff90cd6fb64,38922594,0,0x0,8
tick,0x7ff90cd6fb64,38937554,0,0x0,8
tick,0x7ff90cd6fb64,38953461,0,0x0,8
tick,0x7ff90cd6fb64,38968373,0,0x0,8
tick,0x7ff90cd6fb64,38984336,0,0x0,8
tick,0x7ff90cd6fb64,39000379,0,0x0,8
tick,0x7ff90cd6fb64,39026910,0,0x0,8
tick,0x7ff90cd6fb64,39032698,0,0x0,8
tick,0x7ff90cd6fb64,39048227,0,0x0,8
tick,0x7ff90cd6fb64,39064166,0,0x0,8
tick,0x7ff90cd6fb64,39080224,0,0x0,8
tick,0x7ff90cd6fb64,39096157,0,0x0,8
tick,0x7ff90cd6fb64,39111172,0,0x0,8
tick,0x7ff90cd6fb64,39127102,0,0x0,8
tick,0x7ff90cd6fb64,39142964,0,0x0,8
tick,0x7ff90cd6fb64,39158856,0,0x0,8
tick,0x7ff90cd6fb64,39174796,0,0x0,8
tick,0x7ff90cd6fb64,39190816,0,0x0,8
tick,0x7ff90cd6fb64,39206796,0,0x0,8
tick,0x7ff90cd6fb64,39221749,0,0x0,8
tick,0x7ff90cd6fb64,39237687,0,0x0,8
tick,0x7ff90cd6fb64,39253618,0,0x0,8
tick,0x7ff90cd6fb64,39269660,0,0x0,8
tick,0x7ff90cd6fb64,39285576,0,0x0,8
tick,0x7ff90cd6fb64,39301575,0,0x0,8
tick,0x7ff90cd6fb64,39317480,0,0x0,8
tick,0x7ff90cd6fb64,39333607,0,0x0,8
tick,0x7ff90cd6fb64,39349569,0,0x0,8
tick,0x7ff90cd6fb64,39365415,0,0x0,8
tick,0x7ff90cd6fb64,39381341,0,0x0,8
tick,0x7ff90cd6fb64,39397480,0,0x0,8
tick,0x7ff90cd6fb64,39413393,0,0x0,8
tick,0x7ff90cd6fb64,39429317,0,0x0,8
tick,0x7ff90cd6fb64,39445298,0,0x0,8
tick,0x7ff90cd6fb64,39461234,0,0x0,8
tick,0x7ff90cd6fb64,39477190,0,0x0,8
tick,0x7ff90cd6fb64,39493123,0,0x0,8
tick,0x7ff90cd6fb64,39509020,0,0x0,8
tick,0x7ff90cd6fb64,39525091,0,0x0,8
tick,0x7ff90cd6fb64,39541144,0,0x0,8
tick,0x7ff90cd6fb64,39556849,0,0x0,8
tick,0x7ff90cd6fb64,39571934,0,0x0,8
tick,0x7ff90cd6fb64,39586810,0,0x0,8
tick,0x7ff90cd6fb64,39603073,0,0x0,8
tick,0x7ff90cd6fb64,39619458,0,0x0,8
tick,0x7ff90cd6fb64,39634803,0,0x0,8
tick,0x7ff90cd6fb64,39650554,0,0x0,8
tick,0x7ff90cd6fb64,39666524,0,0x0,8
tick,0x7ff90cd6fb64,39682466,0,0x0,8
tick,0x7ff90cd6fb64,39698491,0,0x0,8
tick,0x7ff90cd6fb64,39714425,0,0x0,8
tick,0x7ff90cd6fb64,39730421,0,0x0,8
tick,0x7ff90cd6fb64,39746385,0,0x0,8
tick,0x7ff90cd6fb64,39761970,0,0x0,8
tick,0x7ff90cd6fb64,39777934,0,0x0,8
tick,0x7ff90cd6fb64,39793941,0,0x0,8
tick,0x7ff90cd6fb64,39809843,0,0x0,8
tick,0x7ff90cd6fb64,39825920,0,0x0,8
tick,0x7ff90cd6fb64,39841772,0,0x0,8
tick,0x7ff90cd6fb64,39857511,0,0x0,8
tick,0x7ff90cd6fb64,39873297,0,0x0,8
tick,0x7ff90cd6fb64,39888300,0,0x0,8
tick,0x7ff90cd6fb64,39903271,0,0x0,8
tick,0x7ff90cd6fb64,39919209,0,0x0,8
tick,0x7ff90cd6fb64,39935266,0,0x0,8
tick,0x7ff90cd6fb64,39950226,0,0x0,8
tick,0x7ff90cd6fb64,39965182,0,0x0,8
tick,0x7ff90cd6fb64,39981098,0,0x0,8
tick,0x7ff90cd6fb64,39996055,0,0x0,8
tick,0x7ff90cd6fb64,40011061,0,0x0,8
tick,0x7ff90cd6fb64,40027005,0,0x0,8
tick,0x7ff90cd6fb64,40042989,0,0x0,8
tick,0x7ff90cd6fb64,40058647,0,0x0,8
tick,0x7ff90cd6fb64,40074602,0,0x0,8
tick,0x7ff90cd6fb64,40090535,0,0x0,8
tick,0x7ff90cd6fb64,40106479,0,0x0,8
tick,0x7ff90cd6fb64,40121583,0,0x0,8
tick,0x7ff90cd6fb64,40137501,0,0x0,8
tick,0x7ff90cd6fb64,40153279,0,0x0,8
tick,0x7ff90cd6fb64,40169088,0,0x0,8
tick,0x7ff90cd6fb64,40185205,0,0x0,8
tick,0x7ff90cd6fb64,40201099,0,0x0,8
tick,0x7ff90cd6fb64,40216973,0,0x0,8
tick,0x7ff90cd6fb64,40232904,0,0x0,8
tick,0x7ff90cd6fb64,40248957,0,0x0,8
tick,0x7ff90cd6fb64,40264895,0,0x0,8
tick,0x7ff90cd6fb64,40280757,0,0x0,8
tick,0x7ff90cd6fb64,40296863,0,0x0,8
tick,0x7ff90cd6fb64,40312806,0,0x0,8
tick,0x7ff90cd6fb64,40328740,0,0x0,8
tick,0x7ff90cd6fb64,40344645,0,0x0,8
tick,0x7ff90cd6fb64,40360674,0,0x0,8
tick,0x7ff90cd6fb64,40376512,0,0x0,8
tick,0x7ff90cd6fb64,40392427,0,0x0,8
tick,0x7ff90cd6fb64,40408582,0,0x0,8
tick,0x7ff90cd6fb64,40424561,0,0x0,8
tick,0x7ff90cd6fb64,40439472,0,0x0,8
tick,0x7ff90cd6fb64,40454411,0,0x0,8
tick,0x7ff90cd6fb64,40470435,0,0x0,8
tick,0x7ff90cd6fb64,40486375,0,0x0,8
tick,0x7ff90cd6fb64,40502428,0,0x0,8
tick,0x7ff90cd6fb64,40518190,0,0x0,8
tick,0x7ff90cd6fb64,40534170,0,0x0,8
tick,0x7ff90cd6fb64,40550060,0,0x0,8
tick,0x7ff90cd6fb64,40566065,0,0x0,8
tick,0x7ff90cd6fb64,40581958,0,0x0,8
tick,0x7ff90cd6fb64,40597891,0,0x0,8
tick,0x7ff90cd6fb64,40613884,0,0x0,8
tick,0x7ff90cd6fb64,40629885,0,0x0,8
tick,0x7ff90cd6fb64,40645735,0,0x0,8
tick,0x7ff90cd6fb64,40660698,0,0x0,8
tick,0x7ff90cd6fb64,40676671,0,0x0,8
tick,0x7ff90cd6fb64,40692660,0,0x0,8
tick,0x7ff90cd6fb64,40708744,0,0x0,8
tick,0x7ff90cd6fb64,40724562,0,0x0,8
tick,0x7ff90cd6fb64,40740514,0,0x0,8
tick,0x7ff90cd6fb64,40755439,0,0x0,8
tick,0x7ff90cd6fb64,40771407,0,0x0,8
tick,0x7ff90cd6fb64,40786363,0,0x0,8
tick,0x7ff90cd6fb64,40802329,0,0x0,8
tick,0x7ff90cd6fb64,40818336,0,0x0,8
tick,0x7ff90cd6fb64,40834600,0,0x0,8
tick,0x7ff90cd6fb64,40850573,0,0x0,8
tick,0x7ff90cd6fb64,40866438,0,0x0,8
tick,0x7ff90cd6fb64,40882231,0,0x0,8
tick,0x7ff90cd6fb64,40898057,0,0x0,8
tick,0x7ff90cd6fb64,40914137,0,0x0,8
tick,0x7ff90cd6fb64,40930068,0,0x0,8
tick,0x7ff90cd6fb64,40945983,0,0x0,8
tick,0x7ff90cd6fb64,40962000,0,0x0,8
tick,0x7ff90cd6fb64,40976964,0,0x0,8
tick,0x7ff90cd6fb64,40992966,0,0x0,8
tick,0x7ff90cd6fb64,41009045,0,0x0,8
tick,0x7ff90cd6fb64,41024932,0,0x0,8
tick,0x7ff90cd6fb64,41039765,0,0x0,8
tick,0x7ff90cd6fb64,41055967,0,0x0,8
tick,0x7ff90cd6fb64,41070917,0,0x0,8
tick,0x7ff90cd6fb64,41086652,0,0x0,8
tick,0x7ff90cd6fb64,41103415,0,0x0,8
tick,0x7ff90cd6fb64,41118637,0,0x0,8
tick,0x7ff90cd6fb64,41134515,0,0x0,8
tick,0x7ff90cd6fb64,41150586,0,0x0,8
tick,0x7ff90cd6fb64,41166404,0,0x0,8
tick,0x7ff90cd6fb64,41182556,0,0x0,8
tick,0x7ff90cd6fb64,41197394,0,0x0,8
tick,0x7ff90cd6fb64,41213378,0,0x0,8
tick,0x7ff90cd6fb64,41229282,0,0x0,8
tick,0x7ff90cd6fb64,41245220,0,0x0,8
tick,0x7ff90cd6fb64,41261114,0,0x0,8
tick,0x7ff90cd6fb64,41277195,0,0x0,8
tick,0x7ff90cd6fb64,41293189,0,0x0,8
tick,0x7ff90cd6fb64,41308970,0,0x0,8
tick,0x7ff90cd6fb64,41325013,0,0x0,8
tick,0x7ff90cd6fb64,41339899,0,0x0,8
tick,0x7ff90cd6fb64,41355807,0,0x0,8
tick,0x7ff90cd6fb64,41371522,0,0x0,8
tick,0x7ff90cd6fb64,41386507,0,0x0,8
tick,0x7ff90cd6fb64,41402549,0,0x0,8
tick,0x7ff90cd6fb64,41418452,0,0x0,8
tick,0x7ff90cd6fb64,41433462,0,0x0,8
tick,0x7ff90cd6fb64,41448343,0,0x0,8
tick,0x7ff90cd6fb64,41463357,0,0x0,8
tick,0x7ff90cd6fb64,41479278,0,0x0,8
tick,0x7ff90cd6fb64,41495158,0,0x0,8
tick,0x7ff90cd6fb64,41511206,0,0x0,8
tick,0x7ff90cd6fb64,41527124,0,0x0,8
tick,0x7ff90cd6fb64,41543040,0,0x0,8
tick,0x7ff90cd6fb64,41558606,0,0x0,8
tick,0x7ff90cd6fb64,41574544,0,0x0,8
tick,0x7ff90cd6fb64,41590592,0,0x0,8
tick,0x7ff90cd6fb64,41606715,0,0x0,8
tick,0x7ff90cd6fb64,41621470,0,0x0,8
tick,0x7ff90cd6fb64,41636921,0,0x0,8
tick,0x7ff90cd6fb64,41652280,0,0x0,8
tick,0x7ff90cd6fb64,41667815,0,0x0,8
tick,0x7ff90cd6fb64,41683786,0,0x0,8
tick,0x7ff90cd6fb64,41699797,0,0x0,8
tick,0x7ff90cd6fb64,41715646,0,0x0,8
tick,0x7ff90cd6fb64,41731644,0,0x0,8
tick,0x7ff90cd6fb64,41747603,0,0x0,8
tick,0x7ff90cd6fb64,41763158,0,0x0,8
tick,0x7ff90cd6fb64,41778070,0,0x0,8
tick,0x7ff90cd6fb64,41794042,0,0x0,8
tick,0x7ff90cd6fb64,41809159,0,0x0,8
tick,0x7ff90cd6fb64,41825085,0,0x0,8
tick,0x7ff90cd6fb64,41840011,0,0x0,8
tick,0x7ff90cd6fb64,41856066,0,0x0,8
tick,0x7ff90cd6fb64,41870822,0,0x0,8
tick,0x7ff90cd6fb64,41886788,0,0x0,8
tick,0x7ff90cd6fb64,41902786,0,0x0,8
tick,0x7ff90cd6fb64,41918696,0,0x0,8
tick,0x7ff90cd6fb64,41934648,0,0x0,8
tick,0x7ff90cd6fb64,41950644,0,0x0,8
tick,0x7ff90cd6fb64,41966651,0,0x0,8
tick,0x7ff90cd6fb64,41981605,0,0x0,8
tick,0x7ff90cd6fb64,41996644,0,0x0,8
tick,0x7ff90cd6fb64,42012565,0,0x0,8
tick,0x7ff90cd6fb64,42028626,0,0x0,8
tick,0x7ff90cd6fb64,42044498,0,0x0,8
tick,0x7ff90cd6fb64,42060461,0,0x0,8
tick,0x7ff90cd6fb64,42076514,0,0x0,8
tick,0x7ff90cd6fb64,42092382,0,0x0,8
tick,0x7ff90cd6fb64,42108314,0,0x0,8
tick,0x7ff90cd6fb64,42123302,0,0x0,8
tick,0x7ff90cd6fb64,42138453,0,0x0,8
tick,0x7ff90cd6fb64,42154528,0,0x0,8
tick,0x7ff90cd6fb64,42170213,0,0x0,8
tick,0x7ff90cd6fb64,42186220,0,0x0,8
tick,0x7ff90cd6fb64,42202108,0,0x0,8
tick,0x7ff90cd6fb64,42218265,0,0x0,8
tick,0x7ff90cd6fb64,42234109,0,0x0,8
tick,0x7ff90cd6fb64,42249996,0,0x0,8
tick,0x7ff90cd6fb64,42265924,0,0x0,8
tick,0x7ff90cd6fb64,42281984,0,0x0,8
tick,0x7ff90cd6fb64,42297836,0,0x0,8
tick,0x7ff90cd6fb64,42313778,0,0x0,8
tick,0x7ff90cd6fb64,42328665,0,0x0,8
tick,0x7ff90cd6fb64,42344625,0,0x0,8
tick,0x7ff90cd6fb64,42360639,0,0x0,8
tick,0x7ff90cd6fb64,42375507,0,0x0,8
tick,0x7ff90cd6fb64,42390447,0,0x0,8
tick,0x7ff90cd6fb64,42405415,0,0x0,8
tick,0x7ff90cd6fb64,42421550,0,0x0,8
tick,0x7ff90cd6fb64,42437429,0,0x0,8
tick,0x7ff90cd6fb64,42453403,0,0x0,8
tick,0x7ff90cd6fb64,42469480,0,0x0,8
tick,0x7ff90cd6fb64,42485305,0,0x0,8
tick,0x7ff90cd6fb64,42501541,0,0x0,8
tick,0x7ff90cd6fb64,42517237,0,0x0,8
tick,0x7ff90cd6fb64,42533552,0,0x0,8
tick,0x7ff90cd6fb64,42549260,0,0x0,8
tick,0x7ff90cd6fb64,42565222,0,0x0,8
tick,0x7ff90cd6fb64,42581311,0,0x0,8
tick,0x7ff90cd6fb64,42597034,0,0x0,8
tick,0x7ff90cd6fb64,42612962,0,0x0,8
tick,0x7ff90cd6fb64,42628859,0,0x0,8
tick,0x7ff90cd6fb64,42644976,0,0x0,8
tick,0x7ff90cd6fb64,42660810,0,0x0,8
tick,0x7ff90cd6fb64,42676956,0,0x0,8
tick,0x7ff90cd6fb64,42692685,0,0x0,8
tick,0x7ff90cd6fb64,42708684,0,0x0,8
tick,0x7ff90cd6fb64,42724589,0,0x0,8
tick,0x7ff90cd6fb64,42740538,0,0x0,8
tick,0x7ff90cd6fb64,42761588,0,0x0,8
tick,0x7ff90cd6fb64,42771984,0,0x0,8
tick,0x7ff90cd6fb64,42787978,0,0x0,8
tick,0x7ff90cd6fb64,42804147,0,0x0,8
tick,0x7ff90cd6fb64,42819872,0,0x0,8
tick,0x7ff90cd6fb64,42834770,0,0x0,8
tick,0x7ff90cd6fb64,42850770,0,0x0,8
tick,0x7ff90cd6fb64,42866678,0,0x0,8
tick,0x7ff90cd6fb64,42882151,0,0x0,8
tick,0x7ff90cd6fb64,42898130,0,0x0,8
tick,0x7ff90cd6fb64,42914067,0,0x0,8
tick,0x7ff90cd6fb64,42930050,0,0x0,8
tick,0x7ff90cd6fb64,42946312,0,0x0,8
tick,0x7ff90cd6fb64,42961953,0,0x0,8
tick,0x7ff90cd6fb64,42977901,0,0x0,8
tick,0x7ff90cd6fb64,42992892,0,0x0,8
tick,0x7ff90cd6fb64,43008850,0,0x0,8
tick,0x7ff90cd6fb64,43024799,0,0x0,8
tick,0x7ff90cd6fb64,43040057,0,0x0,8
tick,0x7ff90cd6fb64,43055759,0,0x0,8
tick,0x7ff90cd6fb64,43071847,0,0x0,8
tick,0x7ff90cd6fb64,43087613,0,0x0,8
tick,0x7ff90cd6fb64,43103567,0,0x0,8
tick,0x7ff90cd6fb64,43119538,0,0x0,8
tick,0x7ff90cd6fb64,43135515,0,0x0,8
tick,0x7ff90cd6fb64,43150591,0,0x0,8
tick,0x7ff90cd6fb64,43166535,0,0x0,8
tick,0x7ff90cd6fb64,43182571,0,0x0,8
tick,0x7ff90cd6fb64,43198664,0,0x0,8
tick,0x7ff90cd6fb64,43214428,0,0x0,8
tick,0x7ff90cd6fb64,43229471,0,0x0,8
tick,0x7ff90cd6fb64,43245411,0,0x0,8
tick,0x7ff90cd6fb64,43261353,0,0x0,8
tick,0x7ff90cd6fb64,43277177,0,0x0,8
tick,0x7ff90cd6fb64,43293353,0,0x0,8
tick,0x7ff90cd6fb64,43309081,0,0x0,8
tick,0x7ff90cd6fb64,43324550,0,0x0,8
tick,0x7ff90cd6fb64,43338936,0,0x0,8
tick,0x7ff90cd6fb64,43355011,0,0x0,8
tick,0x7ff90cd6fb64,43370523,0,0x0,8
tick,0x7ff90cd6fb64,43386541,0,0x0,8
tick,0x7ff90cd6fb64,43402512,0,0x0,8
tick,0x7ff90cd6fb64,43418335,0,0x0,8
tick,0x7ff90cd6fb64,43434354,0,0x0,8
tick,0x7ff90cd6fb64,43449308,0,0x0,8
tick,0x7ff90cd6fb64,43465245,0,0x0,8
tick,0x7ff90cd6fb64,43480285,0,0x0,8
tick,0x7ff90cd6fb64,43496108,0,0x0,8
tick,0x7ff90cd6fb64,43512102,0,0x0,8
tick,0x7ff90cd6fb64,43528055,0,0x0,8
tick,0x7ff90cd6fb64,43544050,0,0x0,8
tick,0x7ff90cd6fb64,43559982,0,0x0,8
tick,0x7ff90cd6fb64,43576115,0,0x0,8
tick,0x7ff90cd6fb64,43591956,0,0x0,8
tick,0x7ff90cd6fb64,43607957,0,0x0,8
tick,0x7ff90cd6fb64,43623898,0,0x0,8
tick,0x7ff90cd6fb64,43639833,0,0x0,8
tick,0x7ff90cd6fb64,43655830,0,0x0,8
tick,0x7ff90cd6fb64,43671402,0,0x0,8
tick,0x7ff90cd6fb64,43687369,0,0x0,8
tick,0x7ff90cd6fb64,43703350,0,0x0,8
tick,0x7ff90cd6fb64,43718200,0,0x0,8
tick,0x7ff90cd6fb64,43734265,0,0x0,8
tick,0x7ff90cd6fb64,43750212,0,0x0,8
tick,0x7ff90cd6fb64,43766129,0,0x0,8
tick,0x7ff90cd6fb64,43782058,0,0x0,8
tick,0x7ff90cd6fb64,43798134,0,0x0,8
tick,0x7ff90cd6fb64,43813984,0,0x0,8
tick,0x7ff90cd6fb64,43829984,0,0x0,8
tick,0x7ff90cd6fb64,43844985,0,0x0,8
tick,0x7ff90cd6fb64,43860895,0,0x0,8
tick,0x7ff90cd6fb64,43876834,0,0x0,8
tick,0x7ff90cd6fb64,43892833,0,0x0,8
tick,0x7ff90cd6fb64,43908838,0,0x0,8
tick,0x7ff90cd6fb64,43924956,0,0x0,8
tick,0x7ff90cd6fb64,43940914,0,0x0,8
tick,0x7ff90cd6fb64,43955656,0,0x0,8
tick,0x7ff90cd6fb64,43970742,0,0x0,8
tick,0x7ff90cd6fb64,43986593,0,0x0,8
tick,0x7ff90cd6fb64,44002725,0,0x0,8
tick,0x7ff90cd6fb64,44018567,0,0x0,8
tick,0x7ff90cd6fb64,44034427,0,0x0,8
tick,0x7ff90cd6fb64,44050437,0,0x0,8
tick,0x7ff90cd6fb64,44066552,0,0x0,8
tick,0x7ff90cd6fb64,44082347,0,0x0,8
tick,0x7ff90cd6fb64,44098304,0,0x0,8
tick,0x7ff90cd6fb64,44114270,0,0x0,8
tick,0x7ff90cd6fb64,44130246,0,0x0,8
tick,0x7ff90cd6fb64,44146160,0,0x0,8
tick,0x7ff90cd6fb64,44162333,0,0x0,8
tick,0x7ff90cd6fb64,44178208,0,0x0,8
tick,0x7ff90cd6fb64,44194037,0,0x0,8
tick,0x7ff90cd6fb64,44209990,0,0x0,8
tick,0x7ff90cd6fb64,44225967,0,0x0,8
tick,0x7ff90cd6fb64,44242000,0,0x0,8
tick,0x7ff90cd6fb64,44257861,0,0x0,8
tick,0x7ff90cd6fb64,44272941,0,0x0,8
tick,0x7ff90cd6fb64,44288879,0,0x0,8
tick,0x7ff90cd6fb64,44303752,0,0x0,8
tick,0x7ff90cd6fb64,44319712,0,0x0,8
tick,0x7ff90cd6fb64,44334971,0,0x0,8
tick,0x7ff90cd6fb64,44350634,0,0x0,8
tick,0x7ff90cd6fb64,44366662,0,0x0,8
tick,0x7ff90cd6fb64,44382553,0,0x0,8
tick,0x7ff90cd6fb64,44398583,0,0x0,8
tick,0x7ff90cd6fb64,44414437,0,0x0,8
tick,0x7ff90cd6fb64,44430543,0,0x0,8
tick,0x7ff90cd6fb64,44446380,0,0x0,8
tick,0x7ff90cd6fb64,44462285,0,0x0,8
tick,0x7ff90cd6fb64,44478206,0,0x0,8
tick,0x7ff90cd6fb64,44494214,0,0x0,8
tick,0x7ff90cd6fb64,44510200,0,0x0,8
tick,0x7ff90cd6fb64,44526178,0,0x0,8
tick,0x7ff90cd6fb64,44542125,0,0x0,8
tick,0x7ff90cd6fb64,44557329,0,0x0,8
tick,0x7ff90cd6fb64,44573007,0,0x0,8
tick,0x7ff90cd6fb64,44588093,0,0x0,8
tick,0x7ff90cd6fb64,44604097,0,0x0,8
tick,0x7ff90cd6fb64,44619946,0,0x0,8
tick,0x7ff90cd6fb64,44635835,0,0x0,8
tick,0x7ff90cd6fb64,44651760,0,0x0,8
tick,0x7ff90cd6fb64,44667762,0,0x0,8
tick,0x7ff90cd6fb64,44683788,0,0x0,8
tick,0x7ff90cd6fb64,44699836,0,0x0,8
tick,0x7ff90cd6fb64,44715615,0,0x0,8
tick,0x7ff90cd6fb64,44731710,0,0x0,8
tick,0x7ff90cd6fb64,44747651,0,0x0,8
tick,0x7ff90cd6fb64,44763513,0,0x0,8
tick,0x7ff90cd6fb64,44779417,0,0x0,8
tick,0x7ff90cd6fb64,44794523,0,0x0,8
tick,0x7ff90cd6fb64,44809519,0,0x0,8
tick,0x7ff90cd6fb64,44825546,0,0x0,8
tick,0x7ff90cd6fb64,44841749,0,0x0,8
tick,0x7ff90cd6fb64,44857268,0,0x0,8
tick,0x7ff90cd6fb64,44872233,0,0x0,8
tick,0x7ff90cd6fb64,44888178,0,0x0,8
tick,0x7ff90cd6fb64,44903266,0,0x0,8
tick,0x7ff90cd6fb64,44919090,0,0x0,8
tick,0x7ff90cd6fb64,44935083,0,0x0,8
tick,0x7ff90cd6fb64,44951122,0,0x0,8
tick,0x7ff90cd6fb64,44967363,0,0x0,8
tick,0x7ff90cd6fb64,44982980,0,0x0,8
tick,0x7ff90cd6fb64,44999004,0,0x0,8
tick,0x7ff90cd6fb64,45014970,0,0x0,8
tick,0x7ff90cd6fb64,45030931,0,0x0,8
tick,0x7ff90cd6fb64,45046901,0,0x0,8
tick,0x7ff90cd6fb64,45063008,0,0x0,8
tick,0x7ff90cd6fb64,45078411,0,0x0,8
tick,0x7ff90cd6fb64,45094303,0,0x0,8
tick,0x7ff90cd6fb64,45109404,0,0x0,8
tick,0x7ff90cd6fb64,45125201,0,0x0,8
tick,0x7ff90cd6fb64,45141381,0,0x0,8
tick,0x7ff90cd6fb64,45156235,0,0x0,8
tick,0x7ff90cd6fb64,45172109,0,0x0,8
tick,0x7ff90cd6fb64,45187151,0,0x0,8
tick,0x7ff90cd6fb64,45203137,0,0x0,8
tick,0x7ff90cd6fb64,45219238,0,0x0,8
tick,0x7ff90cd6fb64,45235101,0,0x0,8
tick,0x7ff90cd6fb64,45250976,0,0x0,8
tick,0x7ff90cd6fb64,45266962,0,0x0,8
tick,0x7ff90cd6fb64,45282912,0,0x0,8
tick,0x7ff90cd6fb64,45298747,0,0x0,8
tick,0x7ff90cd6fb64,45314711,0,0x0,8
tick,0x7ff90cd6fb64,45329749,0,0x0,8
tick,0x7ff90cd6fb64,45345710,0,0x0,8
tick,0x7ff90cd6fb64,45360715,0,0x0,8
tick,0x7ff90cd6fb64,45376558,0,0x0,8
tick,0x7ff90cd6fb64,45392516,0,0x0,8
tick,0x7ff90cd6fb64,45408532,0,0x0,8
tick,0x7ff90cd6fb64,45424437,0,0x0,8
tick,0x7ff90cd6fb64,45439520,0,0x0,8
tick,0x7ff90cd6fb64,45454421,0,0x0,8
tick,0x7ff90cd6fb64,45470416,0,0x0,8
tick,0x7ff90cd6fb64,45486382,0,0x0,8
tick,0x7ff90cd6fb64,45501633,0,0x0,8
tick,0x7ff90cd6fb64,45517161,0,0x0,8
tick,0x7ff90cd6fb64,45533282,0,0x0,8
tick,0x7ff90cd6fb64,45549188,0,0x0,8
tick,0x7ff90cd6fb64,45565131,0,0x0,8
tick,0x7ff90cd6fb64,45581167,0,0x0,8
tick,0x7ff90cd6fb64,45597031,0,0x0,8
tick,0x7ff90cd6fb64,45613015,0,0x0,8
tick,0x7ff90cd6fb64,45628984,0,0x0,8
tick,0x7ff90cd6fb64,45644960,0,0x0,8
tick,0x7ff90cd6fb64,45660998,0,0x0,8
tick,0x7ff90cd6fb64,45676864,0,0x0,8
tick,0x7ff90cd6fb64,45691947,0,0x0,8
tick,0x7ff90cd6fb64,45707616,0,0x0,8
tick,0x7ff90cd6fb64,45723647,0,0x0,8
tick,0x7ff90cd6fb64,45738663,0,0x0,8
tick,0x7ff90cd6fb64,45754563,0,0x0,8
tick,0x7ff90cd6fb64,45769508,0,0x0,8
tick,0x7ff90cd6fb64,45785644,0,0x0,8
tick,0x7ff90cd6fb64,45801642,0,0x0,8
tick,0x7ff90cd6fb64,45817482,0,0x0,8
tick,0x7ff90cd6fb64,45833376,0,0x0,8
tick,0x7ff90cd6fb64,45850533,0,0x0,8
tick,0x7ff90cd6fb64,45865257,0,0x0,8
tick,0x7ff90cd6fb64,45881413,0,0x0,8
tick,0x7ff90cd6fb64,45896179,0,0x0,8
tick,0x7ff90cd6fb64,45912014,0,0x0,8
tick,0x7ff90cd6fb64,45927991,0,0x0,8
tick,0x7ff90cd6fb64,45943995,0,0x0,8
tick,0x7ff90cd6fb64,45960075,0,0x0,8
tick,0x7ff90cd6fb64,45976001,0,0x0,8
tick,0x7ff90cd6fb64,45991928,0,0x0,8
tick,0x7ff90cd6fb64,46007977,0,0x0,8
tick,0x7ff90cd6fb64,46024423,0,0x0,8
tick,0x7ff90cd6fb64,46038745,0,0x0,8
tick,0x7ff90cd6fb64,46054710,0,0x0,8
tick,0x7ff90cd6fb64,46070673,0,0x0,8
tick,0x7ff90cd6fb64,46086637,0,0x0,8
tick,0x7ff90cd6fb64,46102768,0,0x0,8
tick,0x7ff90cd6fb64,46118505,0,0x0,8
tick,0x7ff90cd6fb64,46134489,0,0x0,8
tick,0x7ff90cd6fb64,46150473,0,0x0,8
tick,0x7ff90cd6fb64,46167093,0,0x0,8
tick,0x7ff90cd6fb64,46182540,0,0x0,8
tick,0x7ff90cd6fb64,46197328,0,0x0,8
tick,0x7ff90cd6fb64,46213459,0,0x0,8
tick,0x7ff90cd6fb64,46229291,0,0x0,8
tick,0x7ff90cd6fb64,46245121,0,0x0,8
tick,0x7ff90cd6fb64,46260123,0,0x0,8
tick,0x7ff90cd6fb64,46276063,0,0x0,8
tick,0x7ff90cd6fb64,46292056,0,0x0,8
tick,0x7ff90cd6fb64,46308056,0,0x0,8
tick,0x7ff90cd6fb64,46324063,0,0x0,8
tick,0x7ff90cd6fb64,46340065,0,0x0,8
tick,0x7ff90cd6fb64,46354917,0,0x0,8
tick,0x7ff90cd6fb64,46370959,0,0x0,8
tick,0x7ff90cd6fb64,46386760,0,0x0,8
tick,0x7ff90cd6fb64,46402894,0,0x0,8
tick,0x7ff90cd6fb64,46418792,0,0x0,8
tick,0x7ff90cd6fb64,46433602,0,0x0,8
tick,0x7ff90cd6fb64,46449632,0,0x0,8
tick,0x7ff90cd6fb64,46465531,0,0x0,8
tick,0x7ff90cd6fb64,46481493,0,0x0,8
tick,0x7ff90cd6fb64,46497285,0,0x0,8
tick,0x7ff90cd6fb64,46513143,0,0x0,8
tick,0x7ff90cd6fb64,46529188,0,0x0,8
tick,0x7ff90cd6fb64,46545114,0,0x0,8
tick,0x7ff90cd6fb64,46560113,0,0x0,8
tick,0x7ff90cd6fb64,46576043,0,0x0,8
tick,0x7ff90cd6fb64,46591428,0,0x0,8
tick,0x7ff90cd6fb64,46607343,0,0x0,8
tick,0x7ff90cd6fb64,46623441,0,0x0,8
tick,0x7ff90cd6fb64,46639355,0,0x0,8
tick,0x7ff90cd6fb64,46655348,0,0x0,8
tick,0x7ff90cd6fb64,46671334,0,0x0,8
tick,0x7ff90cd6fb64,46686279,0,0x0,8
tick,0x7ff90cd6fb64,46702269,0,0x0,8
tick,0x7ff90cd6fb64,46718229,0,0x0,8
tick,0x7ff90cd6fb64,46734107,0,0x0,8
tick,0x7ff90cd6fb64,46750085,0,0x0,8
tick,0x7ff90cd6fb64,46766191,0,0x0,8
tick,0x7ff90cd6fb64,46782178,0,0x0,8
tick,0x7ff90cd6fb64,46798102,0,0x0,8
tick,0x7ff90cd6fb64,46814006,0,0x0,8
tick,0x7ff90cd6fb64,46831067,0,0x0,8
tick,0x7ff90cd6fb64,46845818,0,0x0,8
tick,0x7ff90cd6fb64,46861760,0,0x0,8
tick,0x7ff90cd6fb64,46876710,0,0x0,8
tick,0x7ff90cd6fb64,46892693,0,0x0,8
tick,0x7ff90cd6fb64,46908585,0,0x0,8
tick,0x7ff90cd6fb64,46924567,0,0x0,8
tick,0x7ff90cd6fb64,46940542,0,0x0,8
tick,0x7ff90cd6fb64,46955523,0,0x0,8
tick,0x7ff90cd6fb64,46971598,0,0x0,8
tick,0x7ff90cd6fb64,46986427,0,0x0,8
tick,0x7ff90cd6fb64,47002440,0,0x0,8
tick,0x7ff90cd6fb64,47018534,0,0x0,8
tick,0x7ff90cd6fb64,47034321,0,0x0,8
tick,0x7ff90cd6fb64,47050282,0,0x0,8
tick,0x7ff90cd6fb64,47066326,0,0x0,8
tick,0x7ff90cd6fb64,47082317,0,0x0,8
tick,0x7ff90cd6fb64,47098981,0,0x0,8
tick,0x7ff90cd6fb64,47114210,0,0x0,8
tick,0x7ff90cd6fb64,47130111,0,0x0,8
tick,0x7ff90cd6fb64,47146026,0,0x0,8
tick,0x7ff90cd6fb64,47162005,0,0x0,8
tick,0x7ff90cd6fb64,47177852,0,0x0,8
tick,0x7ff90cd6fb64,47193870,0,0x0,8
tick,0x7ff90cd6fb64,47209966,0,0x0,8
tick,0x7ff90cd6fb64,47225923,0,0x0,8
tick,0x7ff90cd6fb64,47241780,0,0x0,8
tick,0x7ff90cd6fb64,47257976,0,0x0,8
tick,0x7ff90cd6fb64,47272798,0,0x0,8
tick,0x7ff90cd6fb64,47288644,0,0x0,8
tick,0x7ff90cd6fb64,47303521,0,0x0,8
tick,0x7ff90cd6fb64,47318500,0,0x0,8
tick,0x7ff90cd6fb64,47334504,0,0x0,8
tick,0x7ff90cd6fb64,47350363,0,0x0,8
tick,0x7ff90cd6fb64,47366438,0,0x0,8
tick,0x7ff90cd6fb64,47381344,0,0x0,8
tick,0x7ff90cd6fb64,47397358,0,0x0,8
tick,0x7ff90cd6fb64,47413244,0,0x0,8
tick,0x7ff90cd6fb64,47429282,0,0x0,8
tick,0x7ff90cd6fb64,47445227,0,0x0,8
tick,0x7ff90cd6fb64,47461306,0,0x0,8
tick,0x7ff90cd6fb64,47477164,0,0x0,8
tick,0x7ff90cd6fb64,47493020,0,0x0,8
tick,0x7ff90cd6fb64,47509011,0,0x0,8
tick,0x7ff90cd6fb64,47524990,0,0x0,8
tick,0x7ff90cd6fb64,47540985,0,0x0,8
tick,0x7ff90cd6fb64,47556844,0,0x0,8
tick,0x7ff90cd6fb64,47573015,0,0x0,8
tick,0x7ff90cd6fb64,47588821,0,0x0,8
tick,0x7ff90cd6fb64,47604789,0,0x0,8
tick,0x7ff90cd6fb64,47619807,0,0x0,8
tick,0x7ff90cd6fb64,47635703,0,0x0,8
tick,0x7ff90cd6fb64,47650728,0,0x0,8
tick,0x7ff90cd6fb64,47666695,0,0x0,8
tick,0x7ff90cd6fb64,47682706,0,0x0,8
tick,0x7ff90cd6fb64,47699020,0,0x0,8
tick,0x7ff90cd6fb64,47714089,0,0x0,8
tick,0x7ff90cd6fb64,47730092,0,0x0,8
tick,0x7ff90cd6fb64,47745964,0,0x0,8
tick,0x7ff90cd6fb64,47761940,0,0x0,8
tick,0x7ff90cd6fb64,47776964,0,0x0,8
tick,0x7ff90cd6fb64,47792858,0,0x0,8
tick,0x7ff90cd6fb64,47808928,0,0x0,8
tick,0x7ff90cd6fb64,47825026,0,0x0,8
tick,0x7ff90cd6fb64,47840752,0,0x0,8
tick,0x7ff90cd6fb64,47855736,0,0x0,8
tick,0x7ff90cd6fb64,47870734,0,0x0,8
tick,0x7ff90cd6fb64,47886725,0,0x0,8
tick,0x7ff90cd6fb64,47902416,0,0x0,8
tick,0x7ff90cd6fb64,47918131,0,0x0,8
tick,0x7ff90cd6fb64,47934194,0,0x0,8
tick,0x7ff90cd6fb64,47950295,0,0x0,8
tick,0x7ff90cd6fb64,47966019,0,0x0,8
tick,0x7ff90cd6fb64,47982157,0,0x0,8
tick,0x7ff90cd6fb64,47997862,0,0x0,8
tick,0x7ff90cd6fb64,48012911,0,0x0,8
tick,0x7ff90cd6fb64,48027875,0,0x0,8
tick,0x7ff90cd6fb64,48043836,0,0x0,8
tick,0x7ff90cd6fb64,48059922,0,0x0,8
tick,0x7ff90cd6fb64,48075837,0,0x0,8
tick,0x7ff90cd6fb64,48092054,0,0x0,8
tick,0x7ff90cd6fb64,48106660,0,0x0,8
tick,0x7ff90cd6fb64,48122572,0,0x0,8
tick,0x7ff90cd6fb64,48138542,0,0x0,8
tick,0x7ff90cd6fb64,48153653,0,0x0,8
tick,0x7ff90cd6fb64,48169602,0,0x0,8
tick,0x7ff90cd6fb64,48185525,0,0x0,8
tick,0x7ff90cd6fb64,48201145,0,0x0,8
tick,0x7ff90cd6fb64,48217118,0,0x0,8
tick,0x7ff90cd6fb64,48232970,0,0x0,8
tick,0x7ff90cd6fb64,48249046,0,0x0,8
tick,0x7ff90cd6fb64,48264919,0,0x0,8
tick,0x7ff90cd6fb64,48280769,0,0x0,8
tick,0x7ff90cd6fb64,48296771,0,0x0,8
tick,0x7ff90cd6fb64,48312061,0,0x0,8
tick,0x7ff90cd6fb64,48328019,0,0x0,8
tick,0x7ff90cd6fb64,48343780,0,0x0,8
tick,0x7ff90cd6fb64,48359910,0,0x0,8
tick,0x7ff90cd6fb64,48375881,0,0x0,8
tick,0x7ff90cd6fb64,48391941,0,0x0,8
tick,0x7ff90cd6fb64,48407793,0,0x0,8
tick,0x7ff90cd6fb64,48423619,0,0x0,8
tick,0x7ff90cd6fb64,48439733,0,0x0,8
tick,0x7ff90cd6fb64,48455493,0,0x0,8
tick,0x7ff90cd6fb64,48470508,0,0x0,8
tick,0x7ff90cd6fb64,48486533,0,0x0,8
tick,0x7ff90cd6fb64,48501638,0,0x0,8
tick,0x7ff90cd6fb64,48517892,0,0x0,8
tick,0x7ff90cd6fb64,48533886,0,0x0,8
tick,0x7ff90cd6fb64,48549315,0,0x0,8
tick,0x7ff90cd6fb64,48565243,0,0x0,8
tick,0x7ff90cd6fb64,48581259,0,0x0,8
tick,0x7ff90cd6fb64,48597112,0,0x0,8
tick,0x7ff90cd6fb64,48613047,0,0x0,8
tick,0x7ff90cd6fb64,48629081,0,0x0,8
tick,0x7ff90cd6fb64,48645019,0,0x0,8
tick,0x7ff90cd6fb64,48660948,0,0x0,8
tick,0x7ff90cd6fb64,48676919,0,0x0,8
tick,0x7ff90cd6fb64,48693025,0,0x0,8
tick,0x7ff90cd6fb64,48708984,0,0x0,8
tick,0x7ff90cd6fb64,48724988,0,0x0,8
tick,0x7ff90cd6fb64,48740759,0,0x0,8
tick,0x7ff90cd6fb64,48756699,0,0x0,8
tick,0x7ff90cd6fb64,48772677,0,0x0,8
tick,0x7ff90cd6fb64,48788589,0,0x0,8
tick,0x7ff90cd6fb64,48803588,0,0x0,8
tick,0x7ff90cd6fb64,48819600,0,0x0,8
tick,0x7ff90cd6fb64,48835464,0,0x0,8
tick,0x7ff90cd6fb64,48850336,0,0x0,8
tick,0x7ff90cd6fb64,48865400,0,0x0,8
tick,0x7ff90cd6fb64,48881723,0,0x0,8
tick,0x7ff90cd6fb64,48897484,0,0x0,8
tick,0x7ff90cd6fb64,48913357,0,0x0,8
tick,0x7ff90cd6fb64,48929352,0,0x0,8
tick,0x7ff90cd6fb64,48945285,0,0x0,8
tick,0x7ff90cd6fb64,48961439,0,0x0,8
tick,0x7ff90cd6fb64,48977387,0,0x0,8
tick,0x7ff90cd6fb64,48993164,0,0x0,8
tick,0x7ff90cd6fb64,49008204,0,0x0,8
tick,0x7ff90cd6fb64,49024033,0,0x0,8
tick,0x7ff90cd6fb64,49039992,0,0x0,8
tick,0x7ff90cd6fb64,49055951,0,0x0,8
tick,0x7ff90cd6fb64,49070808,0,0x0,8
tick,0x7ff90cd6fb64,49086849,0,0x0,8
tick,0x7ff90cd6fb64,49102786,0,0x0,8
tick,0x7ff90cd6fb64,49118769,0,0x0,8
tick,0x7ff90cd6fb64,49134882,0,0x0,8
tick,0x7ff90cd6fb64,49150676,0,0x0,8
tick,0x7ff90cd6fb64,49166593,0,0x0,8
tick,0x7ff90cd6fb64,49182612,0,0x0,8
tick,0x7ff90cd6fb64,49197634,0,0x0,8
tick,0x7ff90cd6fb64,49213614,0,0x0,8
tick,0x7ff90cd6fb64,49229542,0,0x0,8
tick,0x7ff90cd6fb64,49245516,0,0x0,8
tick,0x7ff90cd6fb64,49261595,0,0x0,8
tick,0x7ff90cd6fb64,49277519,0,0x0,8
tick,0x7ff90cd6fb64,49293257,0,0x0,8
tick,0x7ff90cd6fb64,49309383,0,0x0,8
tick,0x7ff90cd6fb64,49325394,0,0x0,8
tick,0x7ff90cd6fb64,49341635,0,0x0,8
tick,0x7ff90cd6fb64,49357296,0,0x0,8
tick,0x7ff90cd6fb64,49373146,0,0x0,8
tick,0x7ff90cd6fb64,49389314,0,0x0,8
tick,0x7ff90cd6fb64,49404094,0,0x0,8
tick,0x7ff90cd6fb64,49420023,0,0x0,8
tick,0x7ff90cd6fb64,49435946,0,0x0,8
tick,0x7ff90cd6fb64,49452041,0,0x0,8
tick,0x7ff90cd6fb64,49467883,0,0x0,8
tick,0x7ff90cd6fb64,49483818,0,0x0,8
tick,0x7ff90cd6fb64,49499782,0,0x0,8
tick,0x7ff90cd6fb64,49515781,0,0x0,8
tick,0x7ff90cd6fb64,49531759,0,0x0,8
tick,0x7ff90cd6fb64,49547586,0,0x0,8
tick,0x7ff90cd6fb64,49563648,0,0x0,8
tick,0x7ff90cd6fb64,49579661,0,0x0,8
tick,0x7ff90cd6fb64,49595559,0,0x0,8
tick,0x7ff90cd6fb64,49610825,0,0x0,8
tick,0x7ff90cd6fb64,49626684,0,0x0,8
tick,0x7ff90cd6fb64,49642867,0,0x0,8
tick,0x7ff90cd6fb64,49658775,0,0x0,8
tick,0x7ff90cd6fb64,49674723,0,0x0,8
tick,0x7ff90cd6fb64,49689506,0,0x0,8
tick,0x7ff90cd6fb64,49705660,0,0x0,8
tick,0x7ff90cd6fb64,49721705,0,0x0,8
tick,0x7ff90cd6fb64,49737513,0,0x0,8
tick,0x7ff90cd6fb64,49753461,0,0x0,8
tick,0x7ff90cd6fb64,49768437,0,0x0,8
tick,0x7ff90cd6fb64,49784278,0,0x0,8
tick,0x7ff90cd6fb64,49800212,0,0x0,8
tick,0x7ff90cd6fb64,49816168,0,0x0,8
tick,0x7ff90cd6fb64,49832128,0,0x0,8
tick,0x7ff90cd6fb64,49848136,0,0x0,8
tick,0x7ff90cd6fb64,49863212,0,0x0,8
tick,0x7ff90cd6fb64,49879088,0,0x0,8
tick,0x7ff90cd6fb64,49895122,0,0x0,8
tick,0x7ff90cd6fb64,49910966,0,0x0,8
tick,0x7ff90cd6fb64,49926965,0,0x0,8
tick,0x7ff90cd6fb64,49943011,0,0x0,8
tick,0x7ff90cd6fb64,49958965,0,0x0,8
tick,0x7ff90cd6fb64,49973767,0,0x0,8
tick,0x7ff90cd6fb64,49988807,0,0x0,8
tick,0x7ff90cd6fb64,50003777,0,0x0,8
tick,0x7ff90cd6fb64,50019828,0,0x0,8
tick,0x7ff90cd6fb64,50035613,0,0x0,8
tick,0x7ff90cd6fb64,50050575,0,0x0,8
tick,0x7ff90cd6fb64,50066474,0,0x0,8
tick,0x7ff90cd6fb64,50082420,0,0x0,8
tick,0x7ff90cd6fb64,50097457,0,0x0,8
tick,0x7ff90cd6fb64,50113373,0,0x0,8
tick,0x7ff90cd6fb64,50129388,0,0x0,8
tick,0x7ff90cd6fb64,50144287,0,0x0,8
tick,0x7ff90cd6fb64,50160417,0,0x0,8
tick,0x7ff90cd6fb64,50176202,0,0x0,8
tick,0x7ff90cd6fb64,50192200,0,0x0,8
tick,0x7ff90cd6fb64,50208285,0,0x0,8
tick,0x7ff90cd6fb64,50224097,0,0x0,8
tick,0x7ff90cd6fb64,50240229,0,0x0,8
tick,0x7ff90cd6fb64,50256059,0,0x0,8
tick,0x7ff90cd6fb64,50271047,0,0x0,8
tick,0x7ff90cd6fb64,50287024,0,0x0,8
tick,0x7ff90cd6fb64,50302949,0,0x0,8
tick,0x7ff90cd6fb64,50318973,0,0x0,8
tick,0x7ff90cd6fb64,50334929,0,0x0,8
tick,0x7ff90cd6fb64,50350899,0,0x0,8
tick,0x7ff90cd6fb64,50366847,0,0x0,8
tick,0x7ff90cd6fb64,50383075,0,0x0,8
tick,0x7ff90cd6fb64,50398597,0,0x0,8
tick,0x7ff90cd6fb64,50414610,0,0x0,8
tick,0x7ff90cd6fb64,50430567,0,0x0,8
tick,0x7ff90cd6fb64,50446472,0,0x0,8
tick,0x7ff90cd6fb64,50462497,0,0x0,8
tick,0x7ff90cd6fb64,50478513,0,0x0,8
tick,0x7ff90cd6fb64,50494395,0,0x0,8
tick,0x7ff90cd6fb64,50510291,0,0x0,8
tick,0x7ff90cd6fb64,50526342,0,0x0,8
tick,0x7ff90cd6fb64,50542364,0,0x0,8
tick,0x7ff90cd6fb64,50558127,0,0x0,8
tick,0x7ff90cd6fb64,50574195,0,0x0,8
tick,0x7ff90cd6fb64,50590181,0,0x0,8
tick,0x7ff90cd6fb64,50606048,0,0x0,8
tick,0x7ff90cd6fb64,50622120,0,0x0,8
tick,0x7ff90cd6fb64,50637099,0,0x0,8
tick,0x7ff90cd6fb64,50652878,0,0x0,8
tick,0x7ff90cd6fb64,50669257,0,0x0,8
tick,0x7ff90cd6fb64,50685035,0,0x0,8
tick,0x7ff90cd6fb64,50699829,0,0x0,8
tick,0x7ff90cd6fb64,50715800,0,0x0,8
tick,0x7ff90cd6fb64,50731633,0,0x0,8
tick,0x7ff90cd6fb64,50747665,0,0x0,8
tick,0x7ff90cd6fb64,50763468,0,0x0,8
tick,0x7ff90cd6fb64,50779587,0,0x0,8
tick,0x7ff90cd6fb64,50795602,0,0x0,8
tick,0x7ff90cd6fb64,50811511,0,0x0,8
tick,0x7ff90cd6fb64,50827420,0,0x0,8
tick,0x7ff90cd6fb64,50843321,0,0x0,8
tick,0x7ff90cd6fb64,50859413,0,0x0,8
tick,0x7ff90cd6fb64,50875176,0,0x0,8
tick,0x7ff90cd6fb64,50891372,0,0x0,8
tick,0x7ff90cd6fb64,50907185,0,0x0,8
tick,0x7ff90cd6fb64,50922333,0,0x0,8
tick,0x7ff90cd6fb64,50938042,0,0x0,8
tick,0x7ff90cd6fb64,50953143,0,0x0,8
tick,0x7ff90cd6fb64,50967967,0,0x0,8
tick,0x7ff90cd6fb64,50983990,0,0x0,8
tick,0x7ff90cd6fb64,50999877,0,0x0,8
tick,0x7ff90cd6fb64,51015778,0,0x0,8
tick,0x7ff90cd6fb64,51031449,0,0x0,8
tick,0x7ff90cd6fb64,51047407,0,0x0,8
tick,0x7ff90cd6fb64,51063419,0,0x0,8
tick,0x7ff90cd6fb64,51079414,0,0x0,8
tick,0x7ff90cd6fb64,51095341,0,0x0,8
tick,0x7ff90cd6fb64,51111361,0,0x0,8
tick,0x7ff90cd6fb64,51127262,0,0x0,8
tick,0x7ff90cd6fb64,51142395,0,0x0,8
tick,0x7ff90cd6fb64,51158119,0,0x0,8
tick,0x7ff90cd6fb64,51174060,0,0x0,8
tick,0x7ff90cd6fb64,51190035,0,0x0,8
tick,0x7ff90cd6fb64,51205969,0,0x0,8
tick,0x7ff90cd6fb64,51220989,0,0x0,8
tick,0x7ff90cd6fb64,51236908,0,0x0,8
tick,0x7ff90cd6fb64,51252846,0,0x0,8
tick,0x7ff90cd6fb64,51268782,0,0x0,8
tick,0x7ff90cd6fb64,51284922,0,0x0,8
tick,0x7ff90cd6fb64,51300864,0,0x0,8
tick,0x7ff90cd6fb64,51316789,0,0x0,8
tick,0x7ff90cd6fb64,51332727,0,0x0,8
tick,0x7ff90cd6fb64,51348619,0,0x0,8
tick,0x7ff90cd6fb64,51364598,0,0x0,8
tick,0x7ff90cd6fb64,51380623,0,0x0,8
tick,0x7ff90cd6fb64,51396476,0,0x0,8
tick,0x7ff90cd6fb64,51412493,0,0x0,8
tick,0x7ff90cd6fb64,51427575,0,0x0,8
tick,0x7ff90cd6fb64,51443363,0,0x0,8
tick,0x7ff90cd6fb64,51459267,0,0x0,8
tick,0x7ff90cd6fb64,51475190,0,0x0,8
tick,0x7ff90cd6fb64,51491277,0,0x0,8
tick,0x7ff90cd6fb64,51507083,0,0x0,8
tick,0x7ff90cd6fb64,51522077,0,0x0,8
tick,0x7ff90cd6fb64,51537084,0,0x0,8
tick,0x7ff90cd6fb64,51553062,0,0x0,8
tick,0x7ff90cd6fb64,51568947,0,0x0,8
tick,0x7ff90cd6fb64,51584985,0,0x0,8
tick,0x7ff90cd6fb64,51601005,0,0x0,8
tick,0x7ff90cd6fb64,51617146,0,0x0,8
tick,0x7ff90cd6fb64,51632783,0,0x0,8
tick,0x7ff90cd6fb64,51648821,0,0x0,8
tick,0x7ff90cd6fb64,51664868,0,0x0,8
tick,0x7ff90cd6fb64,51680729,0,0x0,8
tick,0x7ff90cd6fb64,51696761,0,0x0,8
tick,0x7ff90cd6fb64,51711694,0,0x0,8
tick,0x7ff90cd6fb64,51727759,0,0x0,8
tick,0x7ff90cd6fb64,51743593,0,0x0,8
tick,0x7ff90cd6fb64,51759578,0,0x0,8
tick,0x7ff90cd6fb64,51774406,0,0x0,8
tick,0x7ff90cd6fb64,51789411,0,0x0,8
tick,0x7ff90cd6fb64,51804541,0,0x0,8
tick,0x7ff90cd6fb64,51820471,0,0x0,8
tick,0x7ff90cd6fb64,51836396,0,0x0,8
tick,0x7ff90cd6fb64,51852257,0,0x0,8
tick,0x7ff90cd6fb64,51868312,0,0x0,8
tick,0x7ff90cd6fb64,51884166,0,0x0,8
tick,0x7ff90cd6fb64,51900247,0,0x0,8
tick,0x7ff90cd6fb64,51915178,0,0x0,8
tick,0x7ff90cd6fb64,51931127,0,0x0,8
tick,0x7ff90cd6fb64,51946073,0,0x0,8
tick,0x7ff90cd6fb64,51962146,0,0x0,8
tick,0x7ff90cd6fb64,51977921,0,0x0,8
tick,0x7ff90cd6fb64,51993881,0,0x0,8
tick,0x7ff90cd6fb64,52009930,0,0x0,8
tick,0x7ff90cd6fb64,52025783,0,0x0,8
tick,0x7ff90cd6fb64,52041743,0,0x0,8
tick,0x7ff90cd6fb64,52057674,0,0x0,8
tick,0x7ff90cd6fb64,52072618,0,0x0,8
tick,0x7ff90cd6fb64,52087615,0,0x0,8
tick,0x7ff90cd6fb64,52103660,0,0x0,8
tick,0x7ff90cd6fb64,52119599,0,0x0,8
tick,0x7ff90cd6fb64,52135389,0,0x0,8
tick,0x7ff90cd6fb64,52151491,0,0x0,8
tick,0x7ff90cd6fb64,52167348,0,0x0,8
tick,0x7ff90cd6fb64,52183178,0,0x0,8
tick,0x7ff90cd6fb64,52199193,0,0x0,8
tick,0x7ff90cd6fb64,52215078,0,0x0,8
tick,0x7ff90cd6fb64,52231022,0,0x0,8
tick,0x7ff90cd6fb64,52247148,0,0x0,8
tick,0x7ff90cd6fb64,52262984,0,0x0,8
tick,0x7ff90cd6fb64,52278999,0,0x0,8
tick,0x7ff90cd6fb64,52294849,0,0x0,8
tick,0x7ff90cd6fb64,52310946,0,0x0,8
tick,0x7ff90cd6fb64,52326852,0,0x0,8
tick,0x7ff90cd6fb64,52342953,0,0x0,8
tick,0x7ff90cd6fb64,52358749,0,0x0,8
tick,0x7ff90cd6fb64,52375259,0,0x0,8
tick,0x7ff90cd6fb64,52389809,0,0x0,8
tick,0x7ff90cd6fb64,52405606,0,0x0,8
tick,0x7ff90cd6fb64,52421468,0,0x0,8
tick,0x7ff90cd6fb64,52436264,0,0x0,8
tick,0x7ff90cd6fb64,52452318,0,0x0,8
tick,0x7ff90cd6fb64,52468164,0,0x0,8
tick,0x7ff90cd6fb64,52484271,0,0x0,8
tick,0x7ff90cd6fb64,52500338,0,0x0,8
tick,0x7ff90cd6fb64,52516246,0,0x0,8
tick,0x7ff90cd6fb64,52532155,0,0x0,8
tick,0x7ff90cd6fb64,52547031,0,0x0,8
tick,0x7ff90cd6fb64,52562990,0,0x0,8
tick,0x7ff90cd6fb64,52578923,0,0x0,8
tick,0x7ff90cd6fb64,52594842,0,0x0,8
tick,0x7ff90cd6fb64,52610894,0,0x0,8
tick,0x7ff90cd6fb64,52626872,0,0x0,8
tick,0x7ff90cd6fb64,52642973,0,0x0,8
tick,0x7ff90cd6fb64,52658734,0,0x0,8
tick,0x7ff90cd6fb64,52674898,0,0x0,8
tick,0x7ff90cd6fb64,52690766,0,0x0,8
tick,0x7ff90cd6fb64,52706771,0,0x0,8
tick,0x7ff90cd6fb64,52721590,0,0x0,8
tick,0x7ff90cd6fb64,52737523,0,0x0,8
tick,0x7ff90cd6fb64,52753564,0,0x0,8
tick,0x7ff90cd6fb64,52769453,0,0x0,8
tick,0x7ff90cd6fb64,52785347,0,0x0,8
tick,0x7ff90cd6fb64,52801296,0,0x0,8
tick,0x7ff90cd6fb64,52817400,0,0x0,8
tick,0x7ff90cd6fb64,52833212,0,0x0,8
tick,0x7ff90cd6fb64,52848222,0,0x0,8
tick,0x7ff90cd6fb64,52864205,0,0x0,8
tick,0x7ff90cd6fb64,52879129,0,0x0,8
tick,0x7ff90cd6fb64,52895226,0,0x0,8
tick,0x7ff90cd6fb64,52911051,0,0x0,8
tick,0x7ff90cd6fb64,52927148,0,0x0,8
tick,0x7ff90cd6fb64,52943019,0,0x0,8
tick,0x7ff90cd6fb64,52959080,0,0x0,8
tick,0x7ff90cd6fb64,52974923,0,0x0,8
tick,0x7ff90cd6fb64,52989828,0,0x0,8
tick,0x7ff90cd6fb64,53004952,0,0x0,8
tick,0x7ff90cd6fb64,53019842,0,0x0,8
tick,0x7ff90cd6fb64,53035744,0,0x0,8
tick,0x7ff90cd6fb64,53050805,0,0x0,8
tick,0x7ff90cd6fb64,53066969,0,0x0,8
tick,0x7ff90cd6fb64,53082616,0,0x0,8
tick,0x7ff90cd6fb64,53098549,0,0x0,8
tick,0x7ff90cd6fb64,53114646,0,0x0,8
tick,0x7ff90cd6fb64,53130624,0,0x0,8
tick,0x7ff90cd6fb64,53146517,0,0x0,8
tick,0x7ff90cd6fb64,53162436,0,0x0,8
tick,0x7ff90cd6fb64,53178337,0,0x0,8
tick,0x7ff90cd6fb64,53194290,0,0x0,8
tick,0x7ff90cd6fb64,53210256,0,0x0,8
tick,0x7ff90cd6fb64,53226193,0,0x0,8
tick,0x7ff90cd6fb64,53242332,0,0x0,8
tick,0x7ff90cd6fb64,53258136,0,0x0,8
tick,0x7ff90cd6fb64,53274216,0,0x0,8
tick,0x7ff90cd6fb64,53290116,0,0x0,8
tick,0x7ff90cd6fb64,53305105,0,0x0,8
tick,0x7ff90cd6fb64,53320994,0,0x0,8
tick,0x7ff90cd6fb64,53335955,0,0x0,8
tick,0x7ff90cd6fb64,53351879,0,0x0,8
tick,0x7ff90cd6fb64,53367856,0,0x0,8
tick,0x7ff90cd6fb64,53383027,0,0x0,8
tick,0x7ff90cd6fb64,53398818,0,0x0,8
tick,0x7ff90cd6fb64,53414898,0,0x0,8
tick,0x7ff90cd6fb64,53430743,0,0x0,8
tick,0x7ff90cd6fb64,53446774,0,0x0,8
tick,0x7ff90cd6fb64,53462662,0,0x0,8
tick,0x7ff90cd6fb64,53478559,0,0x0,8
tick,0x7ff90cd6fb64,53494631,0,0x0,8
tick,0x7ff90cd6fb64,53510472,0,0x0,8
tick,0x7ff90cd6fb64,53526534,0,0x0,8
tick,0x7ff90cd6fb64,53542451,0,0x0,8
tick,0x7ff90cd6fb64,53558420,0,0x0,8
tick,0x7ff90cd6fb64,53574522,0,0x0,8
tick,0x7ff90cd6fb64,53589668,0,0x0,8
tick,0x7ff90cd6fb64,53605263,0,0x0,8
tick,0x7ff90cd6fb64,53620338,0,0x0,8
tick,0x7ff90cd6fb64,53635405,0,0x0,8
tick,0x7ff90cd6fb64,53651476,0,0x0,8
tick,0x7ff90cd6fb64,53667186,0,0x0,8
tick,0x7ff90cd6fb64,53683366,0,0x0,8
tick,0x7ff90cd6fb64,53698198,0,0x0,8
tick,0x7ff90cd6fb64,53714198,0,0x0,8
tick,0x7ff90cd6fb64,53729971,0,0x0,8
tick,0x7ff90cd6fb64,53745000,0,0x0,8
tick,0x7ff90cd6fb64,53761104,0,0x0,8
tick,0x7ff90cd6fb64,53776894,0,0x0,8
tick,0x7ff90cd6fb64,53792891,0,0x0,8
tick,0x7ff90cd6fb64,53808866,0,0x0,8
tick,0x7ff90cd6fb64,53824833,0,0x0,8
tick,0x7ff90cd6fb64,53840809,0,0x0,8
tick,0x7ff90cd6fb64,53856728,0,0x0,8
tick,0x7ff90cd6fb64,53872931,0,0x0,8
tick,0x7ff90cd6fb64,53888701,0,0x0,8
tick,0x7ff90cd6fb64,53903767,0,0x0,8
tick,0x7ff90cd6fb64,53919762,0,0x0,8
tick,0x7ff90cd6fb64,53936095,0,0x0,8
tick,0x7ff90cd6fb64,53950717,0,0x0,8
tick,0x7ff90cd6fb64,53966441,0,0x0,8
tick,0x7ff90cd6fb64,53981489,0,0x0,8
tick,0x7ff90cd6fb64,53997462,0,0x0,8
tick,0x7ff90cd6fb64,54013338,0,0x0,8
tick,0x7ff90cd6fb64,54029274,0,0x0,8
tick,0x7ff90cd6fb64,54045268,0,0x0,8
tick,0x7ff90cd6fb64,54061342,0,0x0,8
tick,0x7ff90cd6fb64,54077550,0,0x0,8
tick,0x7ff90cd6fb64,54093156,0,0x0,8
tick,0x7ff90cd6fb64,54109054,0,0x0,8
tick,0x7ff90cd6fb64,54124972,0,0x0,8
tick,0x7ff90cd6fb64,54141013,0,0x0,8
tick,0x7ff90cd6fb64,54156918,0,0x0,8
tick,0x7ff90cd6fb64,54171978,0,0x0,8
tick,0x7ff90cd6fb64,54186932,0,0x0,8
tick,0x7ff90cd6fb64,54201819,0,0x0,8
tick,0x7ff90cd6fb64,54217774,0,0x0,8
tick,0x7ff90cd6fb64,54233919,0,0x0,8
tick,0x7ff90cd6fb64,54249812,0,0x0,8
tick,0x7ff90cd6fb64,54266268,0,0x0,8
tick,0x7ff90cd6fb64,54281771,0,0x0,8
tick,0x7ff90cd6fb64,54297666,0,0x0,8
tick,0x7ff90cd6fb64,54313621,0,0x0,8
tick,0x7ff90cd6fb64,54329593,0,0x0,8
tick,0x7ff90cd6fb64,54345478,0,0x0,8
tick,0x7ff90cd6fb64,54361607,0,0x0,8
tick,0x7ff90cd6fb64,54377356,0,0x0,8
tick,0x7ff90cd6fb64,54393612,0,0x0,8
tick,0x7ff90cd6fb64,54409421,0,0x0,8
tick,0x7ff90cd6fb64,54425342,0,0x0,8
tick,0x7ff90cd6fb64,54441180,0,0x0,8
tick,0x7ff90cd6fb64,54456253,0,0x0,8
tick,0x7ff90cd6fb64,54472153,0,0x0,8
tick,0x7ff90cd6fb64,54487054,0,0x0,8
tick,0x7ff90cd6fb64,54503023,0,0x0,8
tick,0x7ff90cd6fb64,54519069,0,0x0,8
tick,0x7ff90cd6fb64,54535397,0,0x0,8
tick,0x7ff90cd6fb64,54551186,0,0x0,8
tick,0x7ff90cd6fb64,54566999,0,0x0,8
tick,0x7ff90cd6fb64,54582969,0,0x0,8
tick,0x7ff90cd6fb64,54598842,0,0x0,8
tick,0x7ff90cd6fb64,54613713,0,0x0,8
tick,0x7ff90cd6fb64,54629671,0,0x0,8
tick,0x7ff90cd6fb64,54645772,0,0x0,8
tick,0x7ff90cd6fb64,54661555,0,0x0,8
tick,0x7ff90cd6fb64,54677560,0,0x0,8
tick,0x7ff90cd6fb64,54692468,0,0x0,8
tick,0x7ff90cd6fb64,54708645,0,0x0,8
tick,0x7ff90cd6fb64,54724538,0,0x0,8
tick,0x7ff90cd6fb64,54740653,0,0x0,8
tick,0x7ff90cd6fb64,54756445,0,0x0,8
tick,0x7ff90cd6fb64,54772491,0,0x0,8
tick,0x7ff90cd6fb64,54788210,0,0x0,8
tick,0x7ff90cd6fb64,54804175,0,0x0,8
tick,0x7ff90cd6fb64,54820258,0,0x0,8
tick,0x7ff90cd6fb64,54836311,0,0x0,8
tick,0x7ff90cd6fb64,54852220,0,0x0,8
tick,0x7ff90cd6fb64,54868096,0,0x0,8
tick,0x7ff90cd6fb64,54884218,0,0x0,8
tick,0x7ff90cd6fb64,54900015,0,0x0,8
tick,0x7ff90cd6fb64,54915934,0,0x0,8
tick,0x7ff90cd6fb64,54931905,0,0x0,8
tick,0x7ff90cd6fb64,54947992,0,0x0,8
tick,0x7ff90cd6fb64,54963972,0,0x0,8
tick,0x7ff90cd6fb64,54979886,0,0x0,8
tick,0x7ff90cd6fb64,54995691,0,0x0,8
tick,0x7ff90cd6fb64,55011747,0,0x0,8
tick,0x7ff90cd6fb64,55027626,0,0x0,8
tick,0x7ff90cd6fb64,55043674,0,0x0,8
tick,0x7ff90cd6fb64,55059412,0,0x0,8
tick,0x7ff90cd6fb64,55075365,0,0x0,8
tick,0x7ff90cd6fb64,55091051,0,0x0,8
tick,0x7ff90cd6fb64,55106083,0,0x0,8
tick,0x7ff90cd6fb64,55121012,0,0x0,8
tick,0x7ff90cd6fb64,55136237,0,0x0,8
tick,0x7ff90cd6fb64,55152179,0,0x0,8
tick,0x7ff90cd6fb64,55168448,0,0x0,8
tick,0x7ff90cd6fb64,55182834,0,0x0,8
tick,0x7ff90cd6fb64,55198970,0,0x0,8
tick,0x7ff90cd6fb64,55214907,0,0x0,8
tick,0x7ff90cd6fb64,55229737,0,0x0,8
tick,0x7ff90cd6fb64,55244776,0,0x0,8
tick,0x7ff90cd6fb64,55260998,0,0x0,8
tick,0x7ff90cd6fb64,55276003,0,0x0,8
tick,0x7ff90cd6fb64,55290558,0,0x0,8
tick,0x7ff90cd6fb64,55306466,0,0x0,8
tick,0x7ff90cd6fb64,55322412,0,0x0,8
tick,0x7ff90cd6fb64,55337406,0,0x0,8
tick,0x7ff90cd6fb64,55353020,0,0x0,8
tick,0x7ff90cd6fb64,55369111,0,0x0,8
tick,0x7ff90cd6fb64,55385680,0,0x0,8
tick,0x7ff90cd6fb64,55400190,0,0x0,8
tick,0x7ff90cd6fb64,55415883,0,0x0,8
tick,0x7ff90cd6fb64,55430945,0,0x0,8
tick,0x7ff90cd6fb64,55447212,0,0x0,8
tick,0x7ff90cd6fb64,55462894,0,0x0,8
tick,0x7ff90cd6fb64,55478851,0,0x0,8
tick,0x7ff90cd6fb64,55494693,0,0x0,8
tick,0x7ff90cd6fb64,55509792,0,0x0,8
tick,0x7ff90cd6fb64,55525735,0,0x0,8
tick,0x7ff90cd6fb64,55541556,0,0x0,8
tick,0x7ff90cd6fb64,55557484,0,0x0,8
tick,0x7ff90cd6fb64,55572483,0,0x0,8
tick,0x7ff90cd6fb64,55588904,0,0x0,8
tick,0x7ff90cd6fb64,55603385,0,0x0,8
tick,0x7ff90cd6fb64,55619553,0,0x0,8
tick,0x7ff90cd6fb64,55634712,0,0x0,8
tick,0x7ff90cd6fb64,55649377,0,0x0,8
tick,0x7ff90cd6fb64,55665268,0,0x0,8
tick,0x7ff90cd6fb64,55681330,0,0x0,8
tick,0x7ff90cd6fb64,55697285,0,0x0,8
tick,0x7ff90cd6fb64,55713174,0,0x0,8
tick,0x7ff90cd6fb64,55729121,0,0x0,8
tick,0x7ff90cd6fb64,55744985,0,0x0,8
tick,0x7ff90cd6fb64,55761942,0,0x0,8
tick,0x7ff90cd6fb64,55777148,0,0x0,8
tick,0x7ff90cd6fb64,55792892,0,0x0,8
tick,0x7ff90cd6fb64,55808747,0,0x0,8
tick,0x7ff90cd6fb64,55824800,0,0x0,8
tick,0x7ff90cd6fb64,55840773,0,0x0,8
tick,0x7ff90cd6fb64,55856704,0,0x0,8
tick,0x7ff90cd6fb64,55872610,0,0x0,8
tick,0x7ff90cd6fb64,55887674,0,0x0,8
tick,0x7ff90cd6fb64,55902524,0,0x0,8
tick,0x7ff90cd6fb64,55918500,0,0x0,8
tick,0x7ff90cd6fb64,55934500,0,0x0,8
tick,0x7ff90cd6fb64,55951114,0,0x0,8
tick,0x7ff90cd6fb64,55966350,0,0x0,8
tick,0x7ff90cd6fb64,55981328,0,0x0,8
tick,0x7ff90cd6fb64,55997277,0,0x0,8
tick,0x7ff90cd6fb64,56012299,0,0x0,8
tick,0x7ff90cd6fb64,56028176,0,0x0,8
tick,0x7ff90cd6fb64,56044173,0,0x0,8
tick,0x7ff90cd6fb64,56059136,0,0x0,8
tick,0x7ff90cd6fb64,56074122,0,0x0,8
tick,0x7ff90cd6fb64,56089041,0,0x0,8
tick,0x7ff90cd6fb64,56104007,0,0x0,8
tick,0x7ff90cd6fb64,56120018,0,0x0,8
tick,0x7ff90cd6fb64,56135942,0,0x0,8
tick,0x7ff90cd6fb64,56151911,0,0x0,8
tick,0x7ff90cd6fb64,56167990,0,0x0,8
tick,0x7ff90cd6fb64,56183764,0,0x0,8
tick,0x7ff90cd6fb64,56199740,0,0x0,8
tick,0x7ff90cd6fb64,56215820,0,0x0,8
tick,0x7ff90cd6fb64,56231664,0,0x0,8
tick,0x7ff90cd6fb64,56247614,0,0x0,8
tick,0x7ff90cd6fb64,56263814,0,0x0,8
tick,0x7ff90cd6fb64,56278506,0,0x0,8
tick,0x7ff90cd6fb64,56294520,0,0x0,8
tick,0x7ff90cd6fb64,56310487,0,0x0,8
tick,0x7ff90cd6fb64,56326467,0,0x0,8
tick,0x7ff90cd6fb64,56342594,0,0x0,8
tick,0x7ff90cd6fb64,56358320,0,0x0,8
tick,0x7ff90cd6fb64,56374319,0,0x0,8
tick,0x7ff90cd6fb64,56389451,0,0x0,8
tick,0x7ff90cd6fb64,56405292,0,0x0,8
tick,0x7ff90cd6fb64,56421383,0,0x0,8
tick,0x7ff90cd6fb64,56436185,0,0x0,8
tick,0x7ff90cd6fb64,56452333,0,0x0,8
tick,0x7ff90cd6fb64,56468274,0,0x0,8
tick,0x7ff90cd6fb64,56484037,0,0x0,8
tick,0x7ff90cd6fb64,56500121,0,0x0,8
tick,0x7ff90cd6fb64,56515197,0,0x0,8
tick,0x7ff90cd6fb64,56531015,0,0x0,8
tick,0x7ff90cd6fb64,56546861,0,0x0,8
tick,0x7ff90cd6fb64,56562320,0,0x0,8
tick,0x7ff90cd6fb64,56578128,0,0x0,8
tick,0x7ff90cd6fb64,56594315,0,0x0,8
tick,0x7ff90cd6fb64,56610091,0,0x0,8
tick,0x7ff90cd6fb64,56626178,0,0x0,8
tick,0x7ff90cd6fb64,56642030,0,0x0,8
tick,0x7ff90cd6fb64,56658170,0,0x0,8
tick,0x7ff90cd6fb64,56673945,0,0x0,8
tick,0x7ff90cd6fb64,56689017,0,0x0,8
tick,0x7ff90cd6fb64,56703969,0,0x0,8
tick,0x7ff90cd6fb64,56719809,0,0x0,8
tick,0x7ff90cd6fb64,56735716,0,0x0,8
tick,0x7ff90cd6fb64,56751850,0,0x0,8
tick,0x7ff90cd6fb64,56767950,0,0x0,8
tick,0x7ff90cd6fb64,56783654,0,0x0,8
tick,0x7ff90cd6fb64,56799747,0,0x0,8
tick,0x7ff90cd6fb64,56815536,0,0x0,8
tick,0x7ff90cd6fb64,56831458,0,0x0,8
tick,0x7ff90cd6fb64,56847478,0,0x0,8
tick,0x7ff90cd6fb64,56863441,0,0x0,8
tick,0x7ff90cd6fb64,56879483,0,0x0,8
tick,0x7ff90cd6fb64,56895428,0,0x0,8
tick,0x7ff90cd6fb64,56911335,0,0x0,8
tick,0x7ff90cd6fb64,56927285,0,0x0,8
tick,0x7ff90cd6fb64,56942239,0,0x0,8
tick,0x7ff90cd6fb64,56958139,0,0x0,8
tick,0x7ff90cd6fb64,56974096,0,0x0,8
tick,0x7ff90cd6fb64,56990094,0,0x0,8
tick,0x7ff90cd6fb64,57006038,0,0x0,8
tick,0x7ff90cd6fb64,57021154,0,0x0,8
tick,0x7ff90cd6fb64,57036142,0,0x0,8
tick,0x7ff90cd6fb64,57052168,0,0x0,8
tick,0x7ff90cd6fb64,57068030,0,0x0,8
tick,0x7ff90cd6fb64,57083751,0,0x0,8
tick,0x7ff90cd6fb64,57099681,0,0x0,8
tick,0x7ff90cd6fb64,57115685,0,0x0,8
tick,0x7ff90cd6fb64,57131702,0,0x0,8
tick,0x7ff90cd6fb64,57147749,0,0x0,8
tick,0x7ff90cd6fb64,57163638,0,0x0,8
tick,0x7ff90cd6fb64,57179703,0,0x0,8
tick,0x7ff90cd6fb64,57195640,0,0x0,8
tick,0x7ff90cd6fb64,57211594,0,0x0,8
tick,0x7ff90cd6fb64,57227525,0,0x0,8
tick,0x7ff90cd6fb64,57243644,0,0x0,8
tick,0x7ff90cd6fb64,57259345,0,0x0,8
tick,0x7ff90cd6fb64,57275449,0,0x0,8
tick,0x7ff90cd6fb64,57291540,0,0x0,8
tick,0x7ff90cd6fb64,57306276,0,0x0,8
tick,0x7ff90cd6fb64,57321212,0,0x0,8
tick,0x7ff90cd6fb64,57337263,0,0x0,8
tick,0x7ff90cd6fb64,57353097,0,0x0,8
tick,0x7ff90cd6fb64,57368021,0,0x0,8
tick,0x7ff90cd6fb64,57384070,0,0x0,8
tick,0x7ff90cd6fb64,57399928,0,0x0,8
tick,0x7ff90cd6fb64,57415940,0,0x0,8
tick,0x7ff90cd6fb64,57431939,0,0x0,8
tick,0x7ff90cd6fb64,57446963,0,0x0,8
tick,0x7ff90cd6fb64,57462997,0,0x0,8
tick,0x7ff90cd6fb64,57478971,0,0x0,8
tick,0x7ff90cd6fb64,57494683,0,0x0,8
tick,0x7ff90cd6fb64,57510798,0,0x0,8
tick,0x7ff90cd6fb64,57526633,0,0x0,8
tick,0x7ff90cd6fb64,57542624,0,0x0,8
tick,0x7ff90cd6fb64,57558757,0,0x0,8
tick,0x7ff90cd6fb64,57574751,0,0x0,8
tick,0x7ff90cd6fb64,57590619,0,0x0,8
tick,0x7ff90cd6fb64,57606602,0,0x0,8
tick,0x7ff90cd6fb64,57621400,0,0x0,8
tick,0x7ff90cd6fb64,57637397,0,0x0,8
tick,0x7ff90cd6fb64,57653589,0,0x0,8
tick,0x7ff90cd6fb64,57669400,0,0x0,8
tick,0x7ff90cd6fb64,57685318,0,0x0,8
tick,0x7ff90cd6fb64,57701470,0,0x0,8
tick,0x7ff90cd6fb64,57717565,0,0x0,8
tick,0x7ff90cd6fb64,57733246,0,0x0,8
tick,0x7ff90cd6fb64,57749152,0,0x0,8
tick,0x7ff90cd6fb64,57765117,0,0x0,8
tick,0x7ff90cd6fb64,57780071,0,0x0,8
tick,0x7ff90cd6fb64,57795948,0,0x0,8
tick,0x7ff90cd6fb64,57811982,0,0x0,8
tick,0x7ff90cd6fb64,57827832,0,0x0,8
tick,0x7ff90cd6fb64,57843960,0,0x0,8
tick,0x7ff90cd6fb64,57859935,0,0x0,8
tick,0x7ff90cd6fb64,57875192,0,0x0,8
tick,0x7ff90cd6fb64,57891346,0,0x0,8
tick,0x7ff90cd6fb64,57906294,0,0x0,8
tick,0x7ff90cd6fb64,57922104,0,0x0,8
tick,0x7ff90cd6fb64,57938177,0,0x0,8
tick,0x7ff90cd6fb64,57953175,0,0x0,8
tick,0x7ff90cd6fb64,57969159,0,0x0,8
tick,0x7ff90cd6fb64,57984014,0,0x0,8
tick,0x7ff90cd6fb64,58000041,0,0x0,8
tick,0x7ff90cd6fb64,58015998,0,0x0,8
tick,0x7ff90cd6fb64,58031832,0,0x0,8
tick,0x7ff90cd6fb64,58047825,0,0x0,8
tick,0x7ff90cd6fb64,58063803,0,0x0,8
tick,0x7ff90cd6fb64,58079985,0,0x0,8
tick,0x7ff90cd6fb64,58095877,0,0x0,8
tick,0x7ff90cd6fb64,58111828,0,0x0,8
tick,0x7ff90cd6fb64,58127725,0,0x0,8
tick,0x7ff90cd6fb64,58143722,0,0x0,8
tick,0x7ff90cd6fb64,58158947,0,0x0,8
tick,0x7ff90cd6fb64,58174144,0,0x0,8
tick,0x7ff90cd6fb64,58189931,0,0x0,8
tick,0x7ff90cd6fb64,58204893,0,0x0,8
tick,0x7ff90cd6fb64,58220883,0,0x0,8
tick,0x7ff90cd6fb64,58236938,0,0x0,8
tick,0x7ff90cd6fb64,58252771,0,0x0,8
tick,0x7ff90cd6fb64,58268660,0,0x0,8
tick,0x7ff90cd6fb64,58285005,0,0x0,8
tick,0x7ff90cd6fb64,58301031,0,0x0,8
tick,0x7ff90cd6fb64,58315572,0,0x0,8
tick,0x7ff90cd6fb64,58330565,0,0x0,8
tick,0x7ff90cd6fb64,58346682,0,0x0,8
tick,0x7ff90cd6fb64,58362474,0,0x0,8
tick,0x7ff90cd6fb64,58378373,0,0x0,8
tick,0x7ff90cd6fb64,58394361,0,0x0,8
tick,0x7ff90cd6fb64,58410335,0,0x0,8
tick,0x7ff90cd6fb64,58426270,0,0x0,8
tick,0x7ff90cd6fb64,58442347,0,0x0,8
tick,0x7ff90cd6fb64,58458107,0,0x0,8
tick,0x7ff90cd6fb64,58473806,0,0x0,8
tick,0x7ff90cd6fb64,58489730,0,0x0,8
tick,0x7ff90cd6fb64,58504655,0,0x0,8
tick,0x7ff90cd6fb64,58519873,0,0x0,8
tick,0x7ff90cd6fb64,58535723,0,0x0,8
tick,0x7ff90cd6fb64,58550716,0,0x0,8
tick,0x7ff90cd6fb64,58566742,0,0x0,8
tick,0x7ff90cd6fb64,58581974,0,0x0,8
tick,0x7ff90cd6fb64,58597918,0,0x0,8
tick,0x7ff90cd6fb64,58614031,0,0x0,8
tick,0x7ff90cd6fb64,58629921,0,0x0,8
tick,0x7ff90cd6fb64,58645791,0,0x0,8
tick,0x7ff90cd6fb64,58661980,0,0x0,8
tick,0x7ff90cd6fb64,58676801,0,0x0,8
tick,0x7ff90cd6fb64,58692784,0,0x0,8
tick,0x7ff90cd6fb64,58708632,0,0x0,8
tick,0x7ff90cd6fb64,58724770,0,0x0,8
tick,0x7ff90cd6fb64,58740547,0,0x0,8
tick,0x7ff90cd6fb64,58756615,0,0x0,8
tick,0x7ff90cd6fb64,58772541,0,0x0,8
tick,0x7ff90cd6fb64,58788399,0,0x0,8
tick,0x7ff90cd6fb64,58803393,0,0x0,8
tick,0x7ff90cd6fb64,58819421,0,0x0,8
tick,0x7ff90cd6fb64,58835398,0,0x0,8
tick,0x7ff90cd6fb64,58851246,0,0x0,8
tick,0x7ff90cd6fb64,58867124,0,0x0,8
tick,0x7ff90cd6fb64,58883172,0,0x0,8
tick,0x7ff90cd6fb64,58899142,0,0x0,8
tick,0x7ff90cd6fb64,58915055,0,0x0,8
tick,0x7ff90cd6fb64,58931027,0,0x0,8
tick,0x7ff90cd6fb64,58946979,0,0x0,8
tick,0x7ff90cd6fb64,58963029,0,0x0,8
tick,0x7ff90cd6fb64,58979051,0,0x0,8
tick,0x7ff90cd6fb64,58994884,0,0x0,8
tick,0x7ff90cd6fb64,59010797,0,0x0,8
tick,0x7ff90cd6fb64,59026822,0,0x0,8
tick,0x7ff90cd6fb64,59042759,0,0x0,8
tick,0x7ff90cd6fb64,59058853,0,0x0,8
tick,0x7ff90cd6fb64,59074762,0,0x0,8
tick,0x7ff90cd6fb64,59090771,0,0x0,8
tick,0x7ff90cd6fb64,59106995,0,0x0,8
tick,0x7ff90cd6fb64,59122756,0,0x0,8
tick,0x7ff90cd6fb64,59137486,0,0x0,8
tick,0x7ff90cd6fb64,59153374,0,0x0,8
tick,0x7ff90cd6fb64,59169406,0,0x0,8
tick,0x7ff90cd6fb64,59185272,0,0x0,8
tick,0x7ff90cd6fb64,59201373,0,0x0,8
tick,0x7ff90cd6fb64,59216294,0,0x0,8
tick,0x7ff90cd6fb64,59232348,0,0x0,8
tick,0x7ff90cd6fb64,59248411,0,0x0,8
tick,0x7ff90cd6fb64,59264229,0,0x0,8
tick,0x7ff90cd6fb64,59280088,0,0x0,8
tick,0x7ff90cd6fb64,59296002,0,0x0,8
tick,0x7ff90cd6fb64,59312019,0,0x0,8
tick,0x7ff90cd6fb64,59327957,0,0x0,8
tick,0x7ff90cd6fb64,59343918,0,0x0,8
tick,0x7ff90cd6fb64,59359949,0,0x0,8
tick,0x7ff90cd6fb64,59375917,0,0x0,8
tick,0x7ff90cd6fb64,59391895,0,0x0,8
tick,0x7ff90cd6fb64,59407932,0,0x0,8
tick,0x7ff90cd6fb64,59423945,0,0x0,8
tick,0x7ff90cd6fb64,59438799,0,0x0,8
tick,0x7ff90cd6fb64,59454623,0,0x0,8
tick,0x7ff90cd6fb64,59469688,0,0x0,8
tick,0x7ff90cd6fb64,59485721,0,0x0,8
tick,0x7ff90cd6fb64,59501809,0,0x0,8
tick,0x7ff90cd6fb64,59517622,0,0x0,8
tick,0x7ff90cd6fb64,59533357,0,0x0,8
tick,0x7ff90cd6fb64,59549408,0,0x0,8
tick,0x7ff90cd6fb64,59565440,0,0x0,8
tick,0x7ff90cd6fb64,59581333,0,0x0,8
tick,0x7ff90cd6fb64,59597249,0,0x0,8
tick,0x7ff90cd6fb64,59613195,0,0x0,8
tick,0x7ff90cd6fb64,59629242,0,0x0,8
tick,0x7ff90cd6fb64,59645190,0,0x0,8
tick,0x7ff90cd6fb64,59661095,0,0x0,8
tick,0x7ff90cd6fb64,59677006,0,0x0,8
tick,0x7ff90cd6fb64,59692979,0,0x0,8
tick,0x7ff90cd6fb64,59708971,0,0x0,8
tick,0x7ff90cd6fb64,59724959,0,0x0,8
tick,0x7ff90cd6fb64,59741071,0,0x0,8
tick,0x7ff90cd6fb64,59756968,0,0x0,8
tick,0x7ff90cd6fb64,59772888,0,0x0,8
tick,0x7ff90cd6fb64,59788852,0,0x0,8
tick,0x7ff90cd6fb64,59803793,0,0x0,8
tick,0x7ff90cd6fb64,59819825,0,0x0,8
tick,0x7ff90cd6fb64,59835644,0,0x0,8
tick,0x7ff90cd6fb64,59850560,0,0x0,8
tick,0x7ff90cd6fb64,59866679,0,0x0,8
tick,0x7ff90cd6fb64,59881509,0,0x0,8
tick,0x7ff90cd6fb64,59897442,0,0x0,8
tick,0x7ff90cd6fb64,59913323,0,0x0,8
tick,0x7ff90cd6fb64,59929425,0,0x0,8
tick,0x7ff90cd6fb64,59945245,0,0x0,8
tick,0x7ff90cd6fb64,59961239,0,0x0,8
tick,0x7ff90cd6fb64,59977309,0,0x0,8
tick,0x7ff90cd6fb64,59993066,0,0x0,8
tick,0x7ff90cd6fb64,60008563,0,0x0,8
tick,0x7ff90cd6fb64,60024545,0,0x0,8
tick,0x7ff90cd6fb64,60040532,0,0x0,8
tick,0x7ff90cd6fb64,60056526,0,0x0,8
tick,0x7ff90cd6fb64,60072449,0,0x0,8
tick,0x7ff90cd6fb64,60087522,0,0x0,8
tick,0x7ff90cd6fb64,60103393,0,0x0,8
tick,0x7ff90cd6fb64,60119441,0,0x0,8
tick,0x7ff90cd6fb64,60135301,0,0x0,8
tick,0x7ff90cd6fb64,60151364,0,0x0,8
tick,0x7ff90cd6fb64,60167179,0,0x0,8
tick,0x7ff90cd6fb64,60183381,0,0x0,8
tick,0x7ff90cd6fb64,60199229,0,0x0,8
tick,0x7ff90cd6fb64,60215152,0,0x0,8
tick,0x7ff90cd6fb64,60231140,0,0x0,8
tick,0x7ff90cd6fb64,60247104,0,0x0,8
tick,0x7ff90cd6fb64,60263138,0,0x0,8
tick,0x7ff90cd6fb64,60278997,0,0x0,8
tick,0x7ff90cd6fb64,60294878,0,0x0,8
tick,0x7ff90cd6fb64,60310909,0,0x0,8
tick,0x7ff90cd6fb64,60326844,0,0x0,8
tick,0x7ff90cd6fb64,60342733,0,0x0,8
tick,0x7ff90cd6fb64,60358819,0,0x0,8
tick,0x7ff90cd6fb64,60373640,0,0x0,8
tick,0x7ff90cd6fb64,60388749,0,0x0,8
tick,0x7ff90cd6fb64,60404576,0,0x0,8
tick,0x7ff90cd6fb64,60419704,0,0x0,8
tick,0x7ff90cd6fb64,60435568,0,0x0,8
tick,0x7ff90cd6fb64,60450531,0,0x0,8
tick,0x7ff90cd6fb64,60466458,0,0x0,8
tick,0x7ff90cd6fb64,60481378,0,0x0,8
tick,0x7ff90cd6fb64,60496330,0,0x0,8
tick,0x7ff90cd6fb64,60512400,0,0x0,8
tick,0x7ff90cd6fb64,60527381,0,0x0,8
tick,0x7ff90cd6fb64,60543431,0,0x0,8
tick,0x7ff90cd6fb64,60559310,0,0x0,8
tick,0x7ff90cd6fb64,60575288,0,0x0,8
tick,0x7ff90cd6fb64,60591068,0,0x0,8
tick,0x7ff90cd6fb64,60606049,0,0x0,8
tick,0x7ff90cd6fb64,60621155,0,0x0,8
tick,0x7ff90cd6fb64,60636934,0,0x0,8
tick,0x7ff90cd6fb64,60652859,0,0x0,8
tick,0x7ff90cd6fb64,60667749,0,0x0,8
tick,0x7ff90cd6fb64,60683764,0,0x0,8
tick,0x7ff90cd6fb64,60699932,0,0x0,8
tick,0x7ff90cd6fb64,60715831,0,0x0,8
tick,0x7ff90cd6fb64,60731695,0,0x0,8
tick,0x7ff90cd6fb64,60747762,0,0x0,8
tick,0x7ff90cd6fb64,60763766,0,0x0,8
tick,0x7ff90cd6fb64,60779701,0,0x0,8
tick,0x7ff90cd6fb64,60794550,0,0x0,8
tick,0x7ff90cd6fb64,60810583,0,0x0,8
tick,0x7ff90cd6fb64,60825473,0,0x0,8
tick,0x7ff90cd6fb64,60841441,0,0x0,8
tick,0x7ff90cd6fb64,60857593,0,0x0,8
tick,0x7ff90cd6fb64,60873477,0,0x0,8
tick,0x7ff90cd6fb64,60889389,0,0x0,8
tick,0x7ff90cd6fb64,60904264,0,0x0,8
tick,0x7ff90cd6fb64,60920284,0,0x0,8
tick,0x7ff90cd6fb64,60935153,0,0x0,8
tick,0x7ff90cd6fb64,60951205,0,0x0,8
tick,0x7ff90cd6fb64,60967108,0,0x0,8
tick,0x7ff90cd6fb64,60982989,0,0x0,8
tick,0x7ff90cd6fb64,60999133,0,0x0,8
tick,0x7ff90cd6fb64,61015037,0,0x0,8
tick,0x7ff90cd6fb64,61031001,0,0x0,8
tick,0x7ff90cd6fb64,61046954,0,0x0,8
tick,0x7ff90cd6fb64,61062817,0,0x0,8
tick,0x7ff90cd6fb64,61078855,0,0x0,8
tick,0x7ff90cd6fb64,61094556,0,0x0,8
tick,0x7ff90cd6fb64,61110529,0,0x0,8
tick,0x7ff90cd6fb64,61126597,0,0x0,8
tick,0x7ff90cd6fb64,61142407,0,0x0,8
tick,0x7ff90cd6fb64,61158381,0,0x0,8
tick,0x7ff90cd6fb64,61174325,0,0x0,8
tick,0x7ff90cd6fb64,61190445,0,0x0,8
tick,0x7ff90cd6fb64,61206360,0,0x0,8
tick,0x7ff90cd6fb64,61221196,0,0x0,8
tick,0x7ff90cd6fb64,61236221,0,0x0,8
tick,0x7ff90cd6fb64,61252279,0,0x0,8
tick,0x7ff90cd6fb64,61268105,0,0x0,8
tick,0x7ff90cd6fb64,61284182,0,0x0,8
tick,0x7ff90cd6fb64,61299743,0,0x0,8
tick,0x7ff90cd6fb64,61315698,0,0x0,8
tick,0x7ff90cd6fb64,61331501,0,0x0,8
tick,0x7ff90cd6fb64,61347480,0,0x0,8
tick,0x7ff90cd6fb64,61363561,0,0x0,8
tick,0x7ff90cd6fb64,61379396,0,0x0,8
tick,0x7ff90cd6fb64,61394936,0,0x0,8
tick,0x7ff90cd6fb64,61410998,0,0x0,8
tick,0x7ff90cd6fb64,61427025,0,0x0,8
tick,0x7ff90cd6fb64,61442814,0,0x0,8
tick,0x7ff90cd6fb64,61458983,0,0x0,8
tick,0x7ff90cd6fb64,61474953,0,0x0,8
tick,0x7ff90cd6fb64,61490466,0,0x0,8
tick,0x7ff90cd6fb64,61506262,0,0x0,8
tick,0x7ff90cd6fb64,61522228,0,0x0,8
tick,0x7ff90cd6fb64,61537304,0,0x0,8
tick,0x7ff90cd6fb64,61553155,0,0x0,8
tick,0x7ff90cd6fb64,61569026,0,0x0,8
tick,0x7ff90cd6fb64,61584948,0,0x0,8
tick,0x7ff90cd6fb64,61601053,0,0x0,8
tick,0x7ff90cd6fb64,61617002,0,0x0,8
tick,0x7ff90cd6fb64,61632877,0,0x0,8
tick,0x7ff90cd6fb64,61648970,0,0x0,8
tick,0x7ff90cd6fb64,61664788,0,0x0,8
tick,0x7ff90cd6fb64,61681082,0,0x0,8
tick,0x7ff90cd6fb64,61696627,0,0x0,8
tick,0x7ff90cd6fb64,61712497,0,0x0,8
tick,0x7ff90cd6fb64,61728511,0,0x0,8
tick,0x7ff90cd6fb64,61743529,0,0x0,8
tick,0x7ff90cd6fb64,61759417,0,0x0,8
tick,0x7ff90cd6fb64,61774355,0,0x0,8
tick,0x7ff90cd6fb64,61789281,0,0x0,8
tick,0x7ff90cd6fb64,61804387,0,0x0,8
tick,0x7ff90cd6fb64,61820290,0,0x0,8
tick,0x7ff90cd6fb64,61835347,0,0x0,8
tick,0x7ff90cd6fb64,61850370,0,0x0,8
tick,0x7ff90cd6fb64,61866383,0,0x0,8
tick,0x7ff90cd6fb64,61881928,0,0x0,8
tick,0x7ff90cd6fb64,61897873,0,0x0,8
tick,0x7ff90cd6fb64,61913817,0,0x0,8
tick,0x7ff90cd6fb64,61929775,0,0x0,8
tick,0x7ff90cd6fb64,61945734,0,0x0,8
tick,0x7ff90cd6fb64,61961714,0,0x0,8
tick,0x7ff90cd6fb64,61976751,0,0x0,8
tick,0x7ff90cd6fb64,61992643,0,0x0,8
tick,0x7ff90cd6fb64,62008685,0,0x0,8
tick,0x7ff90cd6fb64,62024773,0,0x0,8
tick,0x7ff90cd6fb64,62040549,0,0x0,8
tick,0x7ff90cd6fb64,62056517,0,0x0,8
tick,0x7ff90cd6fb64,62072491,0,0x0,8
tick,0x7ff90cd6fb64,62087464,0,0x0,8
tick,0x7ff90cd6fb64,62103390,0,0x0,8
tick,0x7ff90cd6fb64,62119496,0,0x0,8
tick,0x7ff90cd6fb64,62134477,0,0x0,8
tick,0x7ff90cd6fb64,62150271,0,0x0,8
tick,0x7ff90cd6fb64,62166274,0,0x0,8
tick,0x7ff90cd6fb64,62182193,0,0x0,8
tick,0x7ff90cd6fb64,62198064,0,0x0,8
tick,0x7ff90cd6fb64,62213143,0,0x0,8
tick,0x7ff90cd6fb64,62228082,0,0x0,8
tick,0x7ff90cd6fb64,62244119,0,0x0,8
tick,0x7ff90cd6fb64,62260180,0,0x0,8
tick,0x7ff90cd6fb64,62275893,0,0x0,8
tick,0x7ff90cd6fb64,62291823,0,0x0,8
tick,0x7ff90cd6fb64,62307788,0,0x0,8
tick,0x7ff90cd6fb64,62323726,0,0x0,8
tick,0x7ff90cd6fb64,62339707,0,0x0,8
tick,0x7ff90cd6fb64,62354729,0,0x0,8
tick,0x7ff90cd6fb64,62370680,0,0x0,8
tick,0x7ff90cd6fb64,62386655,0,0x0,8
tick,0x7ff90cd6fb64,62402597,0,0x0,8
tick,0x7ff90cd6fb64,62418577,0,0x0,8
tick,0x7ff90cd6fb64,62434710,0,0x0,8
tick,0x7ff90cd6fb64,62450682,0,0x0,8
tick,0x7ff90cd6fb64,62466604,0,0x0,8
tick,0x7ff90cd6fb64,62481571,0,0x0,8
tick,0x7ff90cd6fb64,62497451,0,0x0,8
tick,0x7ff90cd6fb64,62512395,0,0x0,8
tick,0x7ff90cd6fb64,62528385,0,0x0,8
tick,0x7ff90cd6fb64,62543337,0,0x0,8
tick,0x7ff90cd6fb64,62558241,0,0x0,8
tick,0x7ff90cd6fb64,62574101,0,0x0,8
tick,0x7ff90cd6fb64,62590138,0,0x0,8
tick,0x7ff90cd6fb64,62606026,0,0x0,8
tick,0x7ff90cd6fb64,62622051,0,0x0,8
tick,0x7ff90cd6fb64,62637045,0,0x0,8
tick,0x7ff90cd6fb64,62653113,0,0x0,8
tick,0x7ff90cd6fb64,62669110,0,0x0,8
tick,0x7ff90cd6fb64,62685099,0,0x0,8
tick,0x7ff90cd6fb64,62701043,0,0x0,8
tick,0x7ff90cd6fb64,62716752,0,0x0,8
tick,0x7ff90cd6fb64,62732828,0,0x0,8
tick,0x7ff90cd6fb64,62747635,0,0x0,8
tick,0x7ff90cd6fb64,62763653,0,0x0,8
tick,0x7ff90cd6fb64,62779632,0,0x0,8
tick,0x7ff90cd6fb64,62795575,0,0x0,8
tick,0x7ff90cd6fb64,62810955,0,0x0,8
tick,0x7ff90cd6fb64,62826913,0,0x0,8
tick,0x7ff90cd6fb64,62842934,0,0x0,8
tick,0x7ff90cd6fb64,62858834,0,0x0,8
tick,0x7ff90cd6fb64,62874795,0,0x0,8
tick,0x7ff90cd6fb64,62890755,0,0x0,8
tick,0x7ff90cd6fb64,62905752,0,0x0,8
tick,0x7ff90cd6fb64,62920716,0,0x0,8
tick,0x7ff90cd6fb64,62936684,0,0x0,8
tick,0x7ff90cd6fb64,62952754,0,0x0,8
tick,0x7ff90cd6fb64,62968642,0,0x0,8
tick,0x7ff90cd6fb64,62984626,0,0x0,8
tick,0x7ff90cd6fb64,63000613,0,0x0,8
tick,0x7ff90cd6fb64,63015542,0,0x0,8
tick,0x7ff90cd6fb64,63031528,0,0x0,8
tick,0x7ff90cd6fb64,63047395,0,0x0,8
tick,0x7ff90cd6fb64,63063365,0,0x0,8
tick,0x7ff90cd6fb64,63079284,0,0x0,8
tick,0x7ff90cd6fb64,63095316,0,0x0,8
tick,0x7ff90cd6fb64,63110883,0,0x0,8
tick,0x7ff90cd6fb64,63126905,0,0x0,8
tick,0x7ff90cd6fb64,63142905,0,0x0,8
tick,0x7ff90cd6fb64,63159023,0,0x0,8
tick,0x7ff90cd6fb64,63174825,0,0x0,8
tick,0x7ff90cd6fb64,63189709,0,0x0,8
tick,0x7ff90cd6fb64,63205184,0,0x0,8
tick,0x7ff90cd6fb64,63220011,0,0x0,8
tick,0x7ff90cd6fb64,63235906,0,0x0,8
tick,0x7ff90cd6fb64,63251873,0,0x0,8
tick,0x7ff90cd6fb64,63267914,0,0x0,8
tick,0x7ff90cd6fb64,63283897,0,0x0,8
tick,0x7ff90cd6fb64,63299664,0,0x0,8
tick,0x7ff90cd6fb64,63315795,0,0x0,8
tick,0x7ff90cd6fb64,63331642,0,0x0,8
tick,0x7ff90cd6fb64,63347643,0,0x0,8
tick,0x7ff90cd6fb64,63363530,0,0x0,8
tick,0x7ff90cd6fb64,63379497,0,0x0,8
tick,0x7ff90cd6fb64,63395662,0,0x0,8
tick,0x7ff90cd6fb64,63411593,0,0x0,8
tick,0x7ff90cd6fb64,63427432,0,0x0,8
tick,0x7ff90cd6fb64,63443647,0,0x0,8
tick,0x7ff90cd6fb64,63459445,0,0x0,8
tick,0x7ff90cd6fb64,63475353,0,0x0,8
tick,0x7ff90cd6fb64,63491321,0,0x0,8
tick,0x7ff90cd6fb64,63507186,0,0x0,8
tick,0x7ff90cd6fb64,63523442,0,0x0,8
tick,0x7ff90cd6fb64,63539383,0,0x0,8
tick,0x7ff90cd6fb64,63554217,0,0x0,8
tick,0x7ff90cd6fb64,63569084,0,0x0,8
tick,0x7ff90cd6fb64,63584024,0,0x0,8
tick,0x7ff90cd6fb64,63600239,0,0x0,8
tick,0x7ff90cd6fb64,63616035,0,0x0,8
tick,0x7ff90cd6fb64,63631858,0,0x0,8
tick,0x7ff90cd6fb64,63647890,0,0x0,8
tick,0x7ff90cd6fb64,63663759,0,0x0,8
tick,0x7ff90cd6fb64,63678802,0,0x0,8
tick,0x7ff90cd6fb64,63694741,0,0x0,8
tick,0x7ff90cd6fb64,63710634,0,0x0,8
tick,0x7ff90cd6fb64,63726661,0,0x0,8
tick,0x7ff90cd6fb64,63742583,0,0x0,8
tick,0x7ff90cd6fb64,63757632,0,0x0,8
tick,0x7ff90cd6fb64,63773658,0,0x0,8
tick,0x7ff90cd6fb64,63789511,0,0x0,8
tick,0x7ff90cd6fb64,63804387,0,0x0,8
tick,0x7ff90cd6fb64,63819551,0,0x0,8
tick,0x7ff90cd6fb64,63835607,0,0x0,8
tick,0x7ff90cd6fb64,63850599,0,0x0,8
tick,0x7ff90cd6fb64,63866295,0,0x0,8
tick,0x7ff90cd6fb64,63882549,0,0x0,8
tick,0x7ff90cd6fb64,63898316,0,0x0,8
tick,0x7ff90cd6fb64,63914158,0,0x0,8
tick,0x7ff90cd6fb64,63929192,0,0x0,8
tick,0x7ff90cd6fb64,63945082,0,0x0,8
tick,0x7ff90cd6fb64,63961119,0,0x0,8
tick,0x7ff90cd6fb64,63977024,0,0x0,8
tick,0x7ff90cd6fb64,63993006,0,0x0,8
tick,0x7ff90cd6fb64,64008894,0,0x0,8
tick,0x7ff90cd6fb64,64024825,0,0x0,8
tick,0x7ff90cd6fb64,64040877,0,0x0,8
tick,0x7ff90cd6fb64,64056786,0,0x0,8
tick,0x7ff90cd6fb64,64072645,0,0x0,8
tick,0x7ff90cd6fb64,64087606,0,0x0,8
tick,0x7ff90cd6fb64,64103688,0,0x0,8
tick,0x7ff90cd6fb64,64119465,0,0x0,8
tick,0x7ff90cd6fb64,64135546,0,0x0,8
tick,0x7ff90cd6fb64,64150508,0,0x0,8
tick,0x7ff90cd6fb64,64166443,0,0x0,8
tick,0x7ff90cd6fb64,64182425,0,0x0,8
tick,0x7ff90cd6fb64,64198354,0,0x0,8
tick,0x7ff90cd6fb64,64214383,0,0x0,8
tick,0x7ff90cd6fb64,64230280,0,0x0,8
tick,0x7ff90cd6fb64,64246160,0,0x0,8
tick,0x7ff90cd6fb64,64262155,0,0x0,8
tick,0x7ff90cd6fb64,64278069,0,0x0,8
tick,0x7ff90cd6fb64,64294054,0,0x0,8
tick,0x7ff90cd6fb64,64309956,0,0x0,8
tick,0x7ff90cd6fb64,64325913,0,0x0,8
tick,0x7ff90cd6fb64,64341912,0,0x0,8
tick,0x7ff90cd6fb64,64357844,0,0x0,8
tick,0x7ff90cd6fb64,64373798,0,0x0,8
tick,0x7ff90cd6fb64,64389750,0,0x0,8
tick,0x7ff90cd6fb64,64405704,0,0x0,8
tick,0x7ff90cd6fb64,64421443,0,0x0,8
tick,0x7ff90cd6fb64,64436369,0,0x0,8
tick,0x7ff90cd6fb64,64452379,0,0x0,8
tick,0x7ff90cd6fb64,64468227,0,0x0,8
tick,0x7ff90cd6fb64,64484578,0,0x0,8
tick,0x7ff90cd6fb64,64499809,0,0x0,8
tick,0x7ff90cd6fb64,64514906,0,0x0,8
tick,0x7ff90cd6fb64,64530311,0,0x0,8
tick,0x7ff90cd6fb64,64546026,0,0x0,8
tick,0x7ff90cd6fb64,64561492,0,0x0,8
tick,0x7ff90cd6fb64,64610232,0,0x0,8
tick,0x7ff90cd6fb64,64625313,0,0x0,8
tick,0x7ff90cd6fb64,64644093,0,0x0,8
tick,0x7ff90cd6fb64,64656784,0,0x0,8
tick,0x7ff90cd6fb64,64671775,0,0x0,8
tick,0x7ff90cd6fb64,64686740,0,0x0,8
tick,0x7ff90cd6fb64,64701611,0,0x0,8
tick,0x7ff90cd6fb64,64717685,0,0x0,8
tick,0x7ff90cd6fb64,64733604,0,0x0,8
tick,0x7ff90cd6fb64,64749561,0,0x0,8
tick,0x7ff90cd6fb64,64765582,0,0x0,8
tick,0x7ff90cd6fb64,64780558,0,0x0,8
tick,0x7ff90cd6fb64,64796545,0,0x0,8
tick,0x7ff90cd6fb64,64812501,0,0x0,8
tick,0x7ff90cd6fb64,64828404,0,0x0,8
tick,0x7ff90cd6fb64,64844438,0,0x0,8
tick,0x7ff90cd6fb64,64860364,0,0x0,8
tick,0x7ff90cd6fb64,64876323,0,0x0,8
tick,0x7ff90cd6fb64,64892165,0,0x0,8
tick,0x7ff90cd6fb64,64908202,0,0x0,8
tick,0x7ff90cd6fb64,64924166,0,0x0,8
tick,0x7ff90cd6fb64,64940082,0,0x0,8
tick,0x7ff90cd6fb64,64956031,0,0x0,8
tick,0x7ff90cd6fb64,64971953,0,0x0,8
tick,0x7ff90cd6fb64,64987938,0,0x0,8
tick,0x7ff90cd6fb64,65002956,0,0x0,8
tick,0x7ff90cd6fb64,65018955,0,0x0,8
tick,0x7ff90cd6fb64,65033892,0,0x0,8
tick,0x7ff90cd6fb64,65049840,0,0x0,8
tick,0x7ff90cd6fb64,65065821,0,0x0,8
tick,0x7ff90cd6fb64,65081921,0,0x0,8
tick,0x7ff90cd6fb64,65097799,0,0x0,8
tick,0x7ff90cd6fb64,65113798,0,0x0,8
tick,0x7ff90cd6fb64,65129743,0,0x0,8
tick,0x7ff90cd6fb64,65145709,0,0x0,8
tick,0x7ff90cd6fb64,65161713,0,0x0,8
tick,0x7ff90cd6fb64,65177543,0,0x0,8
tick,0x7ff90cd6fb64,65193530,0,0x0,8
tick,0x7ff90cd6fb64,65208442,0,0x0,8
tick,0x7ff90cd6fb64,65224521,0,0x0,8
tick,0x7ff90cd6fb64,65240573,0,0x0,8
tick,0x7ff90cd6fb64,65256463,0,0x0,8
tick,0x7ff90cd6fb64,65272313,0,0x0,8
tick,0x7ff90cd6fb64,65288459,0,0x0,8
tick,0x7ff90cd6fb64,65304411,0,0x0,8
tick,0x7ff90cd6fb64,65320160,0,0x0,8
tick,0x7ff90cd6fb64,65335171,0,0x0,8
tick,0x7ff90cd6fb64,65351389,0,0x0,8
tick,0x7ff90cd6fb64,65367103,0,0x0,8
tick,0x7ff90cd6fb64,65383467,0,0x0,8
tick,0x7ff90cd6fb64,65398928,0,0x0,8
tick,0x7ff90cd6fb64,65415151,0,0x0,8
tick,0x7ff90cd6fb64,65430940,0,0x0,8
tick,0x7ff90cd6fb64,65446845,0,0x0,8
tick,0x7ff90cd6fb64,65461808,0,0x0,8
tick,0x7ff90cd6fb64,65477748,0,0x0,8
tick,0x7ff90cd6fb64,65493727,0,0x0,8
tick,0x7ff90cd6fb64,65509802,0,0x0,8
tick,0x7ff90cd6fb64,65524575,0,0x0,8
tick,0x7ff90cd6fb64,65540615,0,0x0,8
tick,0x7ff90cd6fb64,65555518,0,0x0,8
tick,0x7ff90cd6fb64,65570512,0,0x0,8
tick,0x7ff90cd6fb64,65586535,0,0x0,8
tick,0x7ff90cd6fb64,65602579,0,0x0,8
tick,0x7ff90cd6fb64,65619163,0,0x0,8
tick,0x7ff90cd6fb64,65634296,0,0x0,8
tick,0x7ff90cd6fb64,65650402,0,0x0,8
tick,0x7ff90cd6fb64,65666617,0,0x0,8
tick,0x7ff90cd6fb64,65682235,0,0x0,8
tick,0x7ff90cd6fb64,65698230,0,0x0,8
tick,0x7ff90cd6fb64,65714191,0,0x0,8
tick,0x7ff90cd6fb64,65730084,0,0x0,8
tick,0x7ff90cd6fb64,65746117,0,0x0,8
tick,0x7ff90cd6fb64,65762135,0,0x0,8
tick,0x7ff90cd6fb64,65777927,0,0x0,8
tick,0x7ff90cd6fb64,65793858,0,0x0,8
tick,0x7ff90cd6fb64,65809869,0,0x0,8
tick,0x7ff90cd6fb64,65825637,0,0x0,8
tick,0x7ff90cd6fb64,65841832,0,0x0,8
tick,0x7ff90cd6fb64,65857497,0,0x0,8
tick,0x7ff90cd6fb64,65872668,0,0x0,8
tick,0x7ff90cd6fb64,65888422,0,0x0,8
tick,0x7ff90cd6fb64,65903438,0,0x0,8
tick,0x7ff90cd6fb64,65919489,0,0x0,8
tick,0x7ff90cd6fb64,65934380,0,0x0,8
tick,0x7ff90cd6fb64,65950535,0,0x0,8
tick,0x7ff90cd6fb64,65966216,0,0x0,8
tick,0x7ff90cd6fb64,65982280,0,0x0,8
tick,0x7ff90cd6fb64,65998180,0,0x0,8
tick,0x7ff90cd6fb64,66014216,0,0x0,8
tick,0x7ff90cd6fb64,66029098,0,0x0,8
tick,0x7ff90cd6fb64,66045133,0,0x0,8
tick,0x7ff90cd6fb64,66059810,0,0x0,8
tick,0x7ff90cd6fb64,66075813,0,0x0,8
tick,0x7ff90cd6fb64,66091755,0,0x0,8
tick,0x7ff90cd6fb64,66107848,0,0x0,8
tick,0x7ff90cd6fb64,66122503,0,0x0,8
tick,0x7ff90cd6fb64,66137622,0,0x0,8
tick,0x7ff90cd6fb64,66153423,0,0x0,8
tick,0x7ff90cd6fb64,66169503,0,0x0,8
tick,0x7ff90cd6fb64,66184580,0,0x0,8
tick,0x7ff90cd6fb64,66200279,0,0x0,8
tick,0x7ff90cd6fb64,66216823,0,0x0,8
tick,0x7ff90cd6fb64,66231817,0,0x0,8
tick,0x7ff90cd6fb64,66247765,0,0x0,8
tick,0x7ff90cd6fb64,66263725,0,0x0,8
tick,0x7ff90cd6fb64,66278728,0,0x0,8
tick,0x7ff90cd6fb64,66294617,0,0x0,8
tick,0x7ff90cd6fb64,66310586,0,0x0,8
tick,0x7ff90cd6fb64,66326638,0,0x0,8
tick,0x7ff90cd6fb64,66342466,0,0x0,8
tick,0x7ff90cd6fb64,66358494,0,0x0,8
tick,0x7ff90cd6fb64,66374706,0,0x0,8
tick,0x7ff90cd6fb64,66389475,0,0x0,8
tick,0x7ff90cd6fb64,66405269,0,0x0,8
tick,0x7ff90cd6fb64,66421315,0,0x0,8
tick,0x7ff90cd6fb64,66437350,0,0x0,8
tick,0x7ff90cd6fb64,66453270,0,0x0,8
tick,0x7ff90cd6fb64,66468190,0,0x0,8
tick,0x7ff90cd6fb64,66483375,0,0x0,8
tick,0x7ff90cd6fb64,66499170,0,0x0,8
tick,0x7ff90cd6fb64,66515037,0,0x0,8
tick,0x7ff90cd6fb64,66531047,0,0x0,8
tick,0x7ff90cd6fb64,66546052,0,0x0,8
tick,0x7ff90cd6fb64,66561953,0,0x0,8
tick,0x7ff90cd6fb64,66577884,0,0x0,8
tick,0x7ff90cd6fb64,66593902,0,0x0,8
tick,0x7ff90cd6fb64,66609754,0,0x0,8
tick,0x7ff90cd6fb64,66625830,0,0x0,8
tick,0x7ff90cd6fb64,66641671,0,0x0,8
tick,0x7ff90cd6fb64,66657818,0,0x0,8
tick,0x7ff90cd6fb64,66673603,0,0x0,8
tick,0x7ff90cd6fb64,66689808,0,0x0,8
tick,0x7ff90cd6fb64,66705497,0,0x0,8
tick,0x7ff90cd6fb64,66720552,0,0x0,8
tick,0x7ff90cd6fb64,66736439,0,0x0,8
tick,0x7ff90cd6fb64,66751609,0,0x0,8
tick,0x7ff90cd6fb64,66767463,0,0x0,8
tick,0x7ff90cd6fb64,66783291,0,0x0,8
tick,0x7ff90cd6fb64,66799362,0,0x0,8
tick,0x7ff90cd6fb64,66815304,0,0x0,8
tick,0x7ff90cd6fb64,66830118,0,0x0,8
tick,0x7ff90cd6fb64,66846223,0,0x0,8
tick,0x7ff90cd6fb64,66861197,0,0x0,8
tick,0x7ff90cd6fb64,66877054,0,0x0,8
tick,0x7ff90cd6fb64,66893283,0,0x0,8
tick,0x7ff90cd6fb64,66909112,0,0x0,8
tick,0x7ff90cd6fb64,66925106,0,0x0,8
tick,0x7ff90cd6fb64,66939920,0,0x0,8
tick,0x7ff90cd6fb64,66955850,0,0x0,8
tick,0x7ff90cd6fb64,66970925,0,0x0,8
tick,0x7ff90cd6fb64,66986962,0,0x0,8
tick,0x7ff90cd6fb64,67001983,0,0x0,8
tick,0x7ff90cd6fb64,67017955,0,0x0,8
tick,0x7ff90cd6fb64,67034049,0,0x0,8
tick,0x7ff90cd6fb64,67049722,0,0x0,8
tick,0x7ff90cd6fb64,67065570,0,0x0,8
tick,0x7ff90cd6fb64,67080598,0,0x0,8
tick,0x7ff90cd6fb64,67096587,0,0x0,8
tick,0x7ff90cd6fb64,67112425,0,0x0,8
tick,0x7ff90cd6fb64,67128472,0,0x0,8
tick,0x7ff90cd6fb64,67144502,0,0x0,8
tick,0x7ff90cd6fb64,67160414,0,0x0,8
tick,0x7ff90cd6fb64,67176709,0,0x0,8
tick,0x7ff90cd6fb64,67192459,0,0x0,8
tick,0x7ff90cd6fb64,67208345,0,0x0,8
tick,0x7ff90cd6fb64,67224374,0,0x0,8
tick,0x7ff90cd6fb64,67240229,0,0x0,8
tick,0x7ff90cd6fb64,67256292,0,0x0,8
tick,0x7ff90cd6fb64,67271989,0,0x0,8
tick,0x7ff90cd6fb64,67287951,0,0x0,8
tick,0x7ff90cd6fb64,67303985,0,0x0,8
tick,0x7ff90cd6fb64,67319998,0,0x0,8
tick,0x7ff90cd6fb64,67335862,0,0x0,8
tick,0x7ff90cd6fb64,67351841,0,0x0,8
tick,0x7ff90cd6fb64,67367775,0,0x0,8
tick,0x7ff90cd6fb64,67383763,0,0x0,8
tick,0x7ff90cd6fb64,67399990,0,0x0,8
tick,0x7ff90cd6fb64,67415744,0,0x0,8
tick,0x7ff90cd6fb64,67431303,0,0x0,8
tick,0x7ff90cd6fb64,67447169,0,0x0,8
tick,0x7ff90cd6fb64,67463141,0,0x0,8
tick,0x7ff90cd6fb64,67479187,0,0x0,8
tick,0x7ff90cd6fb64,67494167,0,0x0,8
tick,0x7ff90cd6fb64,67510034,0,0x0,8
tick,0x7ff90cd6fb64,67526065,0,0x0,8
tick,0x7ff90cd6fb64,67541985,0,0x0,8
tick,0x7ff90cd6fb64,67557888,0,0x0,8
tick,0x7ff90cd6fb64,67572982,0,0x0,8
tick,0x7ff90cd6fb64,67588872,0,0x0,8
tick,0x7ff90cd6fb64,67603758,0,0x0,8
tick,0x7ff90cd6fb64,67619819,0,0x0,8
tick,0x7ff90cd6fb64,67635692,0,0x0,8
tick,0x7ff90cd6fb64,67650899,0,0x0,8
tick,0x7ff90cd6fb64,67666671,0,0x0,8
tick,0x7ff90cd6fb64,67682788,0,0x0,8
tick,0x7ff90cd6fb64,67698680,0,0x0,8
tick,0x7ff90cd6fb64,67714383,0,0x0,8
tick,0x7ff90cd6fb64,67730384,0,0x0,8
tick,0x7ff90cd6fb64,67746345,0,0x0,8
tick,0x7ff90cd6fb64,67762370,0,0x0,8
tick,0x7ff90cd6fb64,67778278,0,0x0,8
tick,0x7ff90cd6fb64,67794354,0,0x0,8
tick,0x7ff90cd6fb64,67810262,0,0x0,8
tick,0x7ff90cd6fb64,67826259,0,0x0,8
tick,0x7ff90cd6fb64,67841748,0,0x0,8
tick,0x7ff90cd6fb64,67858018,0,0x0,8
tick,0x7ff90cd6fb64,67872755,0,0x0,8
tick,0x7ff90cd6fb64,67887646,0,0x0,8
tick,0x7ff90cd6fb64,67903547,0,0x0,8
tick,0x7ff90cd6fb64,67919641,0,0x0,8
tick,0x7ff90cd6fb64,67935319,0,0x0,8
tick,0x7ff90cd6fb64,67951235,0,0x0,8
tick,0x7ff90cd6fb64,67967212,0,0x0,8
tick,0x7ff90cd6fb64,67983076,0,0x0,8
tick,0x7ff90cd6fb64,67999225,0,0x0,8
tick,0x7ff90cd6fb64,68014097,0,0x0,8
tick,0x7ff90cd6fb64,68029278,0,0x0,8
tick,0x7ff90cd6fb64,68045189,0,0x0,8
tick,0x7ff90cd6fb64,68061149,0,0x0,8
tick,0x7ff90cd6fb64,68077075,0,0x0,8
tick,0x7ff90cd6fb64,68093129,0,0x0,8
tick,0x7ff90cd6fb64,68108957,0,0x0,8
tick,0x7ff90cd6fb64,68125006,0,0x0,8
tick,0x7ff90cd6fb64,68140919,0,0x0,8
tick,0x7ff90cd6fb64,68155879,0,0x0,8
tick,0x7ff90cd6fb64,68171874,0,0x0,8
tick,0x7ff90cd6fb64,68186870,0,0x0,8
tick,0x7ff90cd6fb64,68203172,0,0x0,8
tick,0x7ff90cd6fb64,68218817,0,0x0,8
tick,0x7ff90cd6fb64,68234851,0,0x0,8
tick,0x7ff90cd6fb64,68250650,0,0x0,8
tick,0x7ff90cd6fb64,68266660,0,0x0,8
tick,0x7ff90cd6fb64,68281515,0,0x0,8
tick,0x7ff90cd6fb64,68297452,0,0x0,8
tick,0x7ff90cd6fb64,68313415,0,0x0,8
tick,0x7ff90cd6fb64,68329429,0,0x0,8
tick,0x7ff90cd6fb64,68345414,0,0x0,8
tick,0x7ff90cd6fb64,68361386,0,0x0,8
tick,0x7ff90cd6fb64,68377232,0,0x0,8
tick,0x7ff90cd6fb64,68393405,0,0x0,8
tick,0x7ff90cd6fb64,68409530,0,0x0,8
tick,0x7ff90cd6fb64,68424278,0,0x0,8
tick,0x7ff90cd6fb64,68439222,0,0x0,8
tick,0x7ff90cd6fb64,68455000,0,0x0,8
tick,0x7ff90cd6fb64,68470048,0,0x0,8
tick,0x7ff90cd6fb64,68485043,0,0x0,8
tick,0x7ff90cd6fb64,68500040,0,0x0,8
tick,0x7ff90cd6fb64,68516027,0,0x0,8
tick,0x7ff90cd6fb64,68531976,0,0x0,8
tick,0x7ff90cd6fb64,68547794,0,0x0,8
tick,0x7ff90cd6fb64,68563866,0,0x0,8
tick,0x7ff90cd6fb64,68579783,0,0x0,8
tick,0x7ff90cd6fb64,68595721,0,0x0,8
tick,0x7ff90cd6fb64,68611632,0,0x0,8
tick,0x7ff90cd6fb64,68627707,0,0x0,8
tick,0x7ff90cd6fb64,68643689,0,0x0,8
tick,0x7ff90cd6fb64,68658491,0,0x0,8
tick,0x7ff90cd6fb64,68674754,0,0x0,8
tick,0x7ff90cd6fb64,68690474,0,0x0,8
tick,0x7ff90cd6fb64,68705411,0,0x0,8
tick,0x7ff90cd6fb64,68720329,0,0x0,8
tick,0x7ff90cd6fb64,68735687,0,0x0,8
tick,0x7ff90cd6fb64,68751397,0,0x0,8
tick,0x7ff90cd6fb64,68767267,0,0x0,8
tick,0x7ff90cd6fb64,68783465,0,0x0,8
tick,0x7ff90cd6fb64,68798128,0,0x0,8
tick,0x7ff90cd6fb64,68814004,0,0x0,8
tick,0x7ff90cd6fb64,68830002,0,0x0,8
tick,0x7ff90cd6fb64,68845953,0,0x0,8
tick,0x7ff90cd6fb64,68861954,0,0x0,8
tick,0x7ff90cd6fb64,68877876,0,0x0,8
tick,0x7ff90cd6fb64,68893842,0,0x0,8
tick,0x7ff90cd6fb64,68909789,0,0x0,8
tick,0x7ff90cd6fb64,68925736,0,0x0,8
tick,0x7ff90cd6fb64,68941753,0,0x0,8
tick,0x7ff90cd6fb64,68957679,0,0x0,8
tick,0x7ff90cd6fb64,68973664,0,0x0,8
tick,0x7ff90cd6fb64,68989615,0,0x0,8
tick,0x7ff90cd6fb64,69004547,0,0x0,8
tick,0x7ff90cd6fb64,69020585,0,0x0,8
tick,0x7ff90cd6fb64,69035543,0,0x0,8
tick,0x7ff90cd6fb64,69050463,0,0x0,8
tick,0x7ff90cd6fb64,69066422,0,0x0,8
tick,0x7ff90cd6fb64,69082443,0,0x0,8
tick,0x7ff90cd6fb64,69098266,0,0x0,8
tick,0x7ff90cd6fb64,69114350,0,0x0,8
tick,0x7ff90cd6fb64,69129283,0,0x0,8
tick,0x7ff90cd6fb64,69145003,0,0x0,8
tick,0x7ff90cd6fb64,69160962,0,0x0,8
tick,0x7ff90cd6fb64,69176820,0,0x0,8
tick,0x7ff90cd6fb64,69192785,0,0x0,8
tick,0x7ff90cd6fb64,69207807,0,0x0,8
tick,0x7ff90cd6fb64,69222815,0,0x0,8
tick,0x7ff90cd6fb64,69237682,0,0x0,8
tick,0x7ff90cd6fb64,69253677,0,0x0,8
tick,0x7ff90cd6fb64,69269643,0,0x0,8
tick,0x7ff90cd6fb64,69285618,0,0x0,8
tick,0x7ff90cd6fb64,69301558,0,0x0,8
tick,0x7ff90cd6fb64,69317482,0,0x0,8
tick,0x7ff90cd6fb64,69333631,0,0x0,8
tick,0x7ff90cd6fb64,69349490,0,0x0,8
tick,0x7ff90cd6fb64,69365411,0,0x0,8
tick,0x7ff90cd6fb64,69381340,0,0x0,8
tick,0x7ff90cd6fb64,69397343,0,0x0,8
tick,0x7ff90cd6fb64,69413310,0,0x0,8
tick,0x7ff90cd6fb64,69428260,0,0x0,8
tick,0x7ff90cd6fb64,69444260,0,0x0,8
tick,0x7ff90cd6fb64,69459644,0,0x0,8
tick,0x7ff90cd6fb64,69474663,0,0x0,8
tick,0x7ff90cd6fb64,69490566,0,0x0,8
tick,0x7ff90cd6fb64,69506692,0,0x0,8
tick,0x7ff90cd6fb64,69522680,0,0x0,8
tick,0x7ff90cd6fb64,69538574,0,0x0,8
tick,0x7ff90cd6fb64,69554491,0,0x0,8
tick,0x7ff90cd6fb64,69569367,0,0x0,8
tick,0x7ff90cd6fb64,69585355,0,0x0,8
tick,0x7ff90cd6fb64,69600228,0,0x0,8
tick,0x7ff90cd6fb64,69616174,0,0x0,8
tick,0x7ff90cd6fb64,69632200,0,0x0,8
tick,0x7ff90cd6fb64,69647819,0,0x0,8
tick,0x7ff90cd6fb64,69663792,0,0x0,8
tick,0x7ff90cd6fb64,69678770,0,0x0,8
tick,0x7ff90cd6fb64,69694725,0,0x0,8
tick,0x7ff90cd6fb64,69709663,0,0x0,8
tick,0x7ff90cd6fb64,69725656,0,0x0,8
tick,0x7ff90cd6fb64,69741189,0,0x0,8
tick,0x7ff90cd6fb64,69757142,0,0x0,8
tick,0x7ff90cd6fb64,69772179,0,0x0,8
tick,0x7ff90cd6fb64,69787095,0,0x0,8
tick,0x7ff90cd6fb64,69803142,0,0x0,8
tick,0x7ff90cd6fb64,69818155,0,0x0,8
tick,0x7ff90cd6fb64,69833988,0,0x0,8
tick,0x7ff90cd6fb64,69850074,0,0x0,8
tick,0x7ff90cd6fb64,69865977,0,0x0,8
tick,0x7ff90cd6fb64,69881997,0,0x0,8
tick,0x7ff90cd6fb64,69897826,0,0x0,8
tick,0x7ff90cd6fb64,69913895,0,0x0,8
tick,0x7ff90cd6fb64,69929695,0,0x0,8
tick,0x7ff90cd6fb64,69945031,0,0x0,8
tick,0x7ff90cd6fb64,69961103,0,0x0,8
tick,0x7ff90cd6fb64,69977016,0,0x0,8
tick,0x7ff90cd6fb64,69992943,0,0x0,8
tick,0x7ff90cd6fb64,70008943,0,0x0,8
tick,0x7ff90cd6fb64,70025003,0,0x0,8
tick,0x7ff90cd6fb64,70040720,0,0x0,8
tick,0x7ff90cd6fb64,70055754,0,0x0,8
tick,0x7ff90cd6fb64,70071690,0,0x0,8
tick,0x7ff90cd6fb64,70086667,0,0x0,8
tick,0x7ff90cd6fb64,70102704,0,0x0,8
tick,0x7ff90cd6fb64,70118573,0,0x0,8
tick,0x7ff90cd6fb64,70134375,0,0x0,8
tick,0x7ff90cd6fb64,70150392,0,0x0,8
tick,0x7ff90cd6fb64,70166307,0,0x0,8
tick,0x7ff90cd6fb64,70182467,0,0x0,8
tick,0x7ff90cd6fb64,70198296,0,0x0,8
tick,0x7ff90cd6fb64,70214230,0,0x0,8
tick,0x7ff90cd6fb64,70230175,0,0x0,8
tick,0x7ff90cd6fb64,70246206,0,0x0,8
tick,0x7ff90cd6fb64,70262065,0,0x0,8
tick,0x7ff90cd6fb64,70278152,0,0x0,8
tick,0x7ff90cd6fb64,70293011,0,0x0,8
tick,0x7ff90cd6fb64,70308920,0,0x0,8
tick,0x7ff90cd6fb64,70324912,0,0x0,8
tick,0x7ff90cd6fb64,70340078,0,0x0,8
tick,0x7ff90cd6fb64,70354858,0,0x0,8
tick,0x7ff90cd6fb64,70370796,0,0x0,8
tick,0x7ff90cd6fb64,70385642,0,0x0,8
tick,0x7ff90cd6fb64,70400663,0,0x0,8
tick,0x7ff90cd6fb64,70416677,0,0x0,8
tick,0x7ff90cd6fb64,70432607,0,0x0,8
tick,0x7ff90cd6fb64,70448525,0,0x0,8
tick,0x7ff90cd6fb64,70464510,0,0x0,8
tick,0x7ff90cd6fb64,70480494,0,0x0,8
tick,0x7ff90cd6fb64,70495410,0,0x0,8
tick,0x7ff90cd6fb64,70511458,0,0x0,8
tick,0x7ff90cd6fb64,70527299,0,0x0,8
tick,0x7ff90cd6fb64,70542621,0,0x0,8
tick,0x7ff90cd6fb64,70558230,0,0x0,8
tick,0x7ff90cd6fb64,70573228,0,0x0,8
tick,0x7ff90cd6fb64,70589260,0,0x0,8
tick,0x7ff90cd6fb64,70605216,0,0x0,8
tick,0x7ff90cd6fb64,70621037,0,0x0,8
tick,0x7ff90cd6fb64,70636115,0,0x0,8
tick,0x7ff90cd6fb64,70652016,0,0x0,8
tick,0x7ff90cd6fb64,70667179,0,0x0,8
tick,0x7ff90cd6fb64,70683122,0,0x0,8
tick,0x7ff90cd6fb64,70699020,0,0x0,8
tick,0x7ff90cd6fb64,70715014,0,0x0,8
tick,0x7ff90cd6fb64,70730837,0,0x0,8
tick,0x7ff90cd6fb64,70746908,0,0x0,8
tick,0x7ff90cd6fb64,70761738,0,0x0,8
tick,0x7ff90cd6fb64,70777750,0,0x0,8
tick,0x7ff90cd6fb64,70793646,0,0x0,8
tick,0x7ff90cd6fb64,70809252,0,0x0,8
tick,0x7ff90cd6fb64,70824637,0,0x0,8
tick,0x7ff90cd6fb64,70839558,0,0x0,8
tick,0x7ff90cd6fb64,70854654,0,0x0,8
tick,0x7ff90cd6fb64,70869496,0,0x0,8
tick,0x7ff90cd6fb64,70885456,0,0x0,8
tick,0x7ff90cd6fb64,70901577,0,0x0,8
tick,0x7ff90cd6fb64,70917849,0,0x0,8
tick,0x7ff90cd6fb64,70933346,0,0x0,8
tick,0x7ff90cd6fb64,70948180,0,0x0,8
tick,0x7ff90cd6fb64,70964223,0,0x0,8
tick,0x7ff90cd6fb64,70979209,0,0x0,8
tick,0x7ff90cd6fb64,70995112,0,0x0,8
tick,0x7ff90cd6fb64,71011025,0,0x0,8
tick,0x7ff90cd6fb64,71027056,0,0x0,8
tick,0x7ff90cd6fb64,71043189,0,0x0,8
tick,0x7ff90cd6fb64,71058954,0,0x0,8
tick,0x7ff90cd6fb64,71074912,0,0x0,8
tick,0x7ff90cd6fb64,71090987,0,0x0,8
tick,0x7ff90cd6fb64,71105819,0,0x0,8
tick,0x7ff90cd6fb64,71121876,0,0x0,8
tick,0x7ff90cd6fb64,71137758,0,0x0,8
tick,0x7ff90cd6fb64,71153828,0,0x0,8
tick,0x7ff90cd6fb64,71169733,0,0x0,8
tick,0x7ff90cd6fb64,71185636,0,0x0,8
tick,0x7ff90cd6fb64,71201772,0,0x0,8
tick,0x7ff90cd6fb64,71217507,0,0x0,8
tick,0x7ff90cd6fb64,71233474,0,0x0,8
tick,0x7ff90cd6fb64,71248839,0,0x0,8
tick,0x7ff90cd6fb64,71265020,0,0x0,8
tick,0x7ff90cd6fb64,71280714,0,0x0,8
tick,0x7ff90cd6fb64,71296596,0,0x0,8
tick,0x7ff90cd6fb64,71312527,0,0x0,8
tick,0x7ff90cd6fb64,71328475,0,0x0,8
tick,0x7ff90cd6fb64,71344498,0,0x0,8
tick,0x7ff90cd6fb64,71360426,0,0x0,8
tick,0x7ff90cd6fb64,71376365,0,0x0,8
tick,0x7ff90cd6fb64,71392454,0,0x0,8
tick,0x7ff90cd6fb64,71407442,0,0x0,8
tick,0x7ff90cd6fb64,71423862,0,0x0,8
tick,0x7ff90cd6fb64,71439360,0,0x0,8
tick,0x7ff90cd6fb64,71455197,0,0x0,8
tick,0x7ff90cd6fb64,71471148,0,0x0,8
tick,0x7ff90cd6fb64,71487053,0,0x0,8
tick,0x7ff90cd6fb64,71503050,0,0x0,8
tick,0x7ff90cd6fb64,71519020,0,0x0,8
tick,0x7ff90cd6fb64,71535070,0,0x0,8
tick,0x7ff90cd6fb64,71551180,0,0x0,8
tick,0x7ff90cd6fb64,71566953,0,0x0,8
tick,0x7ff90cd6fb64,71582841,0,0x0,8
tick,0x7ff90cd6fb64,71598757,0,0x0,8
tick,0x7ff90cd6fb64,71613776,0,0x0,8
tick,0x7ff90cd6fb64,71629732,0,0x0,8
tick,0x7ff90cd6fb64,71645535,0,0x0,8
tick,0x7ff90cd6fb64,71661602,0,0x0,8
tick,0x7ff90cd6fb64,71677657,0,0x0,8
tick,0x7ff90cd6fb64,71692718,0,0x0,8
tick,0x7ff90cd6fb64,71708393,0,0x0,8
tick,0x7ff90cd6fb64,71723424,0,0x0,8
tick,0x7ff90cd6fb64,71739512,0,0x0,8
tick,0x7ff90cd6fb64,71755409,0,0x0,8
tick,0x7ff90cd6fb64,71770336,0,0x0,8
tick,0x7ff90cd6fb64,71785423,0,0x0,8
tick,0x7ff90cd6fb64,71801624,0,0x0,8
tick,0x7ff90cd6fb64,71817385,0,0x0,8
tick,0x7ff90cd6fb64,71833132,0,0x0,8
tick,0x7ff90cd6fb64,71849338,0,0x0,8
tick,0x7ff90cd6fb64,71865141,0,0x0,8
tick,0x7ff90cd6fb64,71881052,0,0x0,8
tick,0x7ff90cd6fb64,71897051,0,0x0,8
tick,0x7ff90cd6fb64,71912958,0,0x0,8
tick,0x7ff90cd6fb64,71928878,0,0x0,8
tick,0x7ff90cd6fb64,71944933,0,0x0,8
tick,0x7ff90cd6fb64,71960885,0,0x0,8
tick,0x7ff90cd6fb64,71975976,0,0x0,8
tick,0x7ff90cd6fb64,71990936,0,0x0,8
tick,0x7ff90cd6fb64,72006906,0,0x0,8
tick,0x7ff90cd6fb64,72021745,0,0x0,8
tick,0x7ff90cd6fb64,72036617,0,0x0,8
tick,0x7ff90cd6fb64,72052564,0,0x0,8
tick,0x7ff90cd6fb64,72068564,0,0x0,8
tick,0x7ff90cd6fb64,72084485,0,0x0,8
tick,0x7ff90cd6fb64,72100563,0,0x0,8
tick,0x7ff90cd6fb64,72116393,0,0x0,8
tick,0x7ff90cd6fb64,72132476,0,0x0,8
tick,0x7ff90cd6fb64,72148351,0,0x0,8
tick,0x7ff90cd6fb64,72164454,0,0x0,8
tick,0x7ff90cd6fb64,72180197,0,0x0,8
tick,0x7ff90cd6fb64,72196240,0,0x0,8
tick,0x7ff90cd6fb64,72212234,0,0x0,8
tick,0x7ff90cd6fb64,72228108,0,0x0,8
tick,0x7ff90cd6fb64,72244316,0,0x0,8
tick,0x7ff90cd6fb64,72259237,0,0x0,8
tick,0x7ff90cd6fb64,72274932,0,0x0,8
tick,0x7ff90cd6fb64,72291070,0,0x0,8
tick,0x7ff90cd6fb64,72306993,0,0x0,8
tick,0x7ff90cd6fb64,72322851,0,0x0,8
tick,0x7ff90cd6fb64,72338848,0,0x0,8
tick,0x7ff90cd6fb64,72354725,0,0x0,8
tick,0x7ff90cd6fb64,72369731,0,0x0,8
tick,0x7ff90cd6fb64,72385706,0,0x0,8
tick,0x7ff90cd6fb64,72401627,0,0x0,8
tick,0x7ff90cd6fb64,72417660,0,0x0,8
tick,0x7ff90cd6fb64,72434038,0,0x0,8
tick,0x7ff90cd6fb64,72449563,0,0x0,8
tick,0x7ff90cd6fb64,72465592,0,0x0,8
tick,0x7ff90cd6fb64,72481613,0,0x0,8
tick,0x7ff90cd6fb64,72497614,0,0x0,8
tick,0x7ff90cd6fb64,72513402,0,0x0,8
tick,0x7ff90cd6fb64,72529481,0,0x0,8
tick,0x7ff90cd6fb64,72545566,0,0x0,8
tick,0x7ff90cd6fb64,72560820,0,0x0,8
tick,0x7ff90cd6fb64,72576642,0,0x0,8
tick,0x7ff90cd6fb64,72592535,0,0x0,8
tick,0x7ff90cd6fb64,72608822,0,0x0,8
tick,0x7ff90cd6fb64,72624755,0,0x0,8
tick,0x7ff90cd6fb64,72639587,0,0x0,8
tick,0x7ff90cd6fb64,72654473,0,0x0,8
tick,0x7ff90cd6fb64,72669882,0,0x0,8
tick,0x7ff90cd6fb64,72685994,0,0x0,8
tick,0x7ff90cd6fb64,72702141,0,0x0,8
tick,0x7ff90cd6fb64,72718011,0,0x0,8
tick,0x7ff90cd6fb64,72733907,0,0x0,8
tick,0x7ff90cd6fb64,72748840,0,0x0,8
tick,0x7ff90cd6fb64,72764664,0,0x0,8
tick,0x7ff90cd6fb64,72780651,0,0x0,8
tick,0x7ff90cd6fb64,72796612,0,0x0,8
tick,0x7ff90cd6fb64,72812645,0,0x0,8
tick,0x7ff90cd6fb64,72828490,0,0x0,8
tick,0x7ff90cd6fb64,72844637,0,0x0,8
tick,0x7ff90cd6fb64,72860395,0,0x0,8
tick,0x7ff90cd6fb64,72876393,0,0x0,8
tick,0x7ff90cd6fb64,72892361,0,0x0,8
tick,0x7ff90cd6fb64,72908258,0,0x0,8
tick,0x7ff90cd6fb64,72924531,0,0x0,8
tick,0x7ff90cd6fb64,72939452,0,0x0,8
tick,0x7ff90cd6fb64,72954163,0,0x0,8
tick,0x7ff90cd6fb64,72970187,0,0x0,8
tick,0x7ff90cd6fb64,72986054,0,0x0,8
tick,0x7ff90cd6fb64,73002220,0,0x0,8
tick,0x7ff90cd6fb64,73017092,0,0x0,8
tick,0x7ff90cd6fb64,73032971,0,0x0,8
tick,0x7ff90cd6fb64,73049022,0,0x0,8
tick,0x7ff90cd6fb64,73064952,0,0x0,8
tick,0x7ff90cd6fb64,73080777,0,0x0,8
tick,0x7ff90cd6fb64,73096885,0,0x0,8
tick,0x7ff90cd6fb64,73112773,0,0x0,8
tick,0x7ff90cd6fb64,73128812,0,0x0,8
tick,0x7ff90cd6fb64,73144675,0,0x0,8
tick,0x7ff90cd6fb64,73160552,0,0x0,8
tick,0x7ff90cd6fb64,73176607,0,0x0,8
tick,0x7ff90cd6fb64,73192532,0,0x0,8
tick,0x7ff90cd6fb64,73208605,0,0x0,8
tick,0x7ff90cd6fb64,73224702,0,0x0,8
tick,0x7ff90cd6fb64,73240616,0,0x0,8
tick,0x7ff90cd6fb64,73255772,0,0x0,8
tick,0x7ff90cd6fb64,73271414,0,0x0,8
tick,0x7ff90cd6fb64,73287373,0,0x0,8
tick,0x7ff90cd6fb64,73303189,0,0x0,8
tick,0x7ff90cd6fb64,73319300,0,0x0,8
tick,0x7ff90cd6fb64,73335295,0,0x0,8
tick,0x7ff90cd6fb64,73351062,0,0x0,8
tick,0x7ff90cd6fb64,73367234,0,0x0,8
tick,0x7ff90cd6fb64,73383488,0,0x0,8
tick,0x7ff90cd6fb64,73399034,0,0x0,8
tick,0x7ff90cd6fb64,73413955,0,0x0,8
tick,0x7ff90cd6fb64,73429913,0,0x0,8
tick,0x7ff90cd6fb64,73445875,0,0x0,8
tick,0x7ff90cd6fb64,73461816,0,0x0,8
tick,0x7ff90cd6fb64,73477782,0,0x0,8
tick,0x7ff90cd6fb64,73493675,0,0x0,8
tick,0x7ff90cd6fb64,73509664,0,0x0,8
tick,0x7ff90cd6fb64,73524717,0,0x0,8
tick,0x7ff90cd6fb64,73539848,0,0x0,8
tick,0x7ff90cd6fb64,73555925,0,0x0,8
tick,0x7ff90cd6fb64,73571183,0,0x0,8
tick,0x7ff90cd6fb64,73586132,0,0x0,8
tick,0x7ff90cd6fb64,73601004,0,0x0,8
tick,0x7ff90cd6fb64,73617390,0,0x0,8
tick,0x7ff90cd6fb64,73632945,0,0x0,8
tick,0x7ff90cd6fb64,73647968,0,0x0,8
tick,0x7ff90cd6fb64,73662816,0,0x0,8
tick,0x7ff90cd6fb64,73678897,0,0x0,8
tick,0x7ff90cd6fb64,73693873,0,0x0,8
tick,0x7ff90cd6fb64,73708823,0,0x0,8
tick,0x7ff90cd6fb64,73724700,0,0x0,8
tick,0x7ff90cd6fb64,73740627,0,0x0,8
tick,0x7ff90cd6fb64,73756601,0,0x0,8
tick,0x7ff90cd6fb64,73772492,0,0x0,8
tick,0x7ff90cd6fb64,73788481,0,0x0,8
tick,0x7ff90cd6fb64,73803463,0,0x0,8
tick,0x7ff90cd6fb64,73819546,0,0x0,8
tick,0x7ff90cd6fb64,73835561,0,0x0,8
tick,0x7ff90cd6fb64,73851299,0,0x0,8
tick,0x7ff90cd6fb64,73867429,0,0x0,8
tick,0x7ff90cd6fb64,73882401,0,0x0,8
tick,0x7ff90cd6fb64,73898290,0,0x0,8
tick,0x7ff90cd6fb64,73914173,0,0x0,8
tick,0x7ff90cd6fb64,73930086,0,0x0,8
tick,0x7ff90cd6fb64,73946058,0,0x0,8
tick,0x7ff90cd6fb64,73961006,0,0x0,8
tick,0x7ff90cd6fb64,73977009,0,0x0,8
tick,0x7ff90cd6fb64,73991892,0,0x0,8
tick,0x7ff90cd6fb64,74007887,0,0x0,8
tick,0x7ff90cd6fb64,74024234,0,0x0,8
tick,0x7ff90cd6fb64,74038906,0,0x0,8
tick,0x7ff90cd6fb64,74054800,0,0x0,8
tick,0x7ff90cd6fb64,74070801,0,0x0,8
tick,0x7ff90cd6fb64,74086711,0,0x0,8
tick,0x7ff90cd6fb64,74102594,0,0x0,8
tick,0x7ff90cd6fb64,74117953,0,0x0,8
tick,0x7ff90cd6fb64,74132591,0,0x0,8
tick,0x7ff90cd6fb64,74148576,0,0x0,8
tick,0x7ff90cd6fb64,74164481,0,0x0,8
tick,0x7ff90cd6fb64,74180360,0,0x0,8
tick,0x7ff90cd6fb64,74196406,0,0x0,8
tick,0x7ff90cd6fb64,74212164,0,0x0,8
tick,0x7ff90cd6fb64,74228114,0,0x0,8
tick,0x7ff90cd6fb64,74244104,0,0x0,8
tick,0x7ff90cd6fb64,74260078,0,0x0,8
tick,0x7ff90cd6fb64,74275903,0,0x0,8
tick,0x7ff90cd6fb64,74291936,0,0x0,8
tick,0x7ff90cd6fb64,74307948,0,0x0,8
tick,0x7ff90cd6fb64,74323847,0,0x0,8
tick,0x7ff90cd6fb64,74340025,0,0x0,8
tick,0x7ff90cd6fb64,74354917,0,0x0,8
tick,0x7ff90cd6fb64,74370798,0,0x0,8
tick,0x7ff90cd6fb64,74386788,0,0x0,8
tick,0x7ff90cd6fb64,74402681,0,0x0,8
tick,0x7ff90cd6fb64,74418794,0,0x0,8
tick,0x7ff90cd6fb64,74434580,0,0x0,8
tick,0x7ff90cd6fb64,74450707,0,0x0,8
tick,0x7ff90cd6fb64,74466483,0,0x0,8
tick,0x7ff90cd6fb64,74481408,0,0x0,8
tick,0x7ff90cd6fb64,74497390,0,0x0,8
tick,0x7ff90cd6fb64,74513348,0,0x0,8
tick,0x7ff90cd6fb64,74529262,0,0x0,8
tick,0x7ff90cd6fb64,74545269,0,0x0,8
tick,0x7ff90cd6fb64,74561374,0,0x0,8
tick,0x7ff90cd6fb64,74576297,0,0x0,8
tick,0x7ff90cd6fb64,74592347,0,0x0,8
tick,0x7ff90cd6fb64,74608302,0,0x0,8
tick,0x7ff90cd6fb64,74624093,0,0x0,8
tick,0x7ff90cd6fb64,74640029,0,0x0,8
tick,0x7ff90cd6fb64,74654927,0,0x0,8
tick,0x7ff90cd6fb64,74670019,0,0x0,8
tick,0x7ff90cd6fb64,74686012,0,0x0,8
tick,0x7ff90cd6fb64,74702163,0,0x0,8
tick,0x7ff90cd6fb64,74717806,0,0x0,8
tick,0x7ff90cd6fb64,74733793,0,0x0,8
tick,0x7ff90cd6fb64,74749726,0,0x0,8
tick,0x7ff90cd6fb64,74765858,0,0x0,8
tick,0x7ff90cd6fb64,74781934,0,0x0,8
tick,0x7ff90cd6fb64,74796677,0,0x0,8
tick,0x7ff90cd6fb64,74812648,0,0x0,8
tick,0x7ff90cd6fb64,74828508,0,0x0,8
tick,0x7ff90cd6fb64,74844603,0,0x0,8
tick,0x7ff90cd6fb64,74860603,0,0x0,8
tick,0x7ff90cd6fb64,74876509,0,0x0,8
tick,0x7ff90cd6fb64,74892330,0,0x0,8
tick,0x7ff90cd6fb64,74908236,0,0x0,8
tick,0x7ff90cd6fb64,74924566,0,0x0,8
tick,0x7ff90cd6fb64,74940444,0,0x0,8
tick,0x7ff90cd6fb64,74955234,0,0x0,8
tick,0x7ff90cd6fb64,74971267,0,0x0,8
tick,0x7ff90cd6fb64,74987042,0,0x0,8
tick,0x7ff90cd6fb64,75003026,0,0x0,8
tick,0x7ff90cd6fb64,75019098,0,0x0,8
tick,0x7ff90cd6fb64,75035133,0,0x0,8
tick,0x7ff90cd6fb64,75051104,0,0x0,8
tick,0x7ff90cd6fb64,75066860,0,0x0,8
tick,0x7ff90cd6fb64,75083037,0,0x0,8
tick,0x7ff90cd6fb64,75098797,0,0x0,8
tick,0x7ff90cd6fb64,75114837,0,0x0,8
tick,0x7ff90cd6fb64,75130704,0,0x0,8
tick,0x7ff90cd6fb64,75146828,0,0x0,8
tick,0x7ff90cd6fb64,75164873,0,0x0,8
tick,0x7ff90cd6fb64,75178043,0,0x0,8
tick,0x7ff90cd6fb64,75194096,0,0x0,8
tick,0x7ff90cd6fb64,75208918,0,0x0,8
tick,0x7ff90cd6fb64,75224858,0,0x0,8
tick,0x7ff90cd6fb64,75239873,0,0x0,8
tick,0x7ff90cd6fb64,75255873,0,0x0,8
tick,0x7ff90cd6fb64,75271788,0,0x0,8
tick,0x7ff90cd6fb64,75297374,0,0x0,8
tick,0x7ff90cd6fb64,75312687,0,0x0,8
tick,0x7ff90cd6fb64,75317138,0,0x0,8
tick,0x7ff90cd6fb64,75333146,0,0x0,8
tick,0x7ff90cd6fb64,75348031,0,0x0,8
tick,0x7ff90cd6fb64,75364059,0,0x0,8
tick,0x7ff90cd6fb64,75379016,0,0x0,8
tick,0x7ff90cd6fb64,75395013,0,0x0,8
tick,0x7ff90cd6fb64,75410908,0,0x0,8
tick,0x7ff90cd6fb64,75425997,0,0x0,8
tick,0x7ff90cd6fb64,75442236,0,0x0,8
tick,0x7ff90cd6fb64,75456815,0,0x0,8
tick,0x7ff90cd6fb64,75471816,0,0x0,8
tick,0x7ff90cd6fb64,75487046,0,0x0,8
tick,0x7ff90cd6fb64,75503045,0,0x0,8
tick,0x7ff90cd6fb64,75519085,0,0x0,8
tick,0x7ff90cd6fb64,75534946,0,0x0,8
tick,0x7ff90cd6fb64,75550884,0,0x0,8
tick,0x7ff90cd6fb64,75566965,0,0x0,8
tick,0x7ff90cd6fb64,75583091,0,0x0,8
tick,0x7ff90cd6fb64,75598985,0,0x0,8
tick,0x7ff90cd6fb64,75614848,0,0x0,8
tick,0x7ff90cd6fb64,75630810,0,0x0,8
tick,0x7ff90cd6fb64,75646764,0,0x0,8
tick,0x7ff90cd6fb64,75662719,0,0x0,8
tick,0x7ff90cd6fb64,75678417,0,0x0,8
tick,0x7ff90cd6fb64,75694331,0,0x0,8
tick,0x7ff90cd6fb64,75710289,0,0x0,8
tick,0x7ff90cd6fb64,75725261,0,0x0,8
tick,0x7ff90cd6fb64,75740184,0,0x0,8
tick,0x7ff90cd6fb64,75756144,0,0x0,8
tick,0x7ff90cd6fb64,75771056,0,0x0,8
tick,0x7ff90cd6fb64,75786056,0,0x0,8
tick,0x7ff90cd6fb64,75802118,0,0x0,8
tick,0x7ff90cd6fb64,75818166,0,0x0,8
tick,0x7ff90cd6fb64,75833950,0,0x0,8
tick,0x7ff90cd6fb64,75849906,0,0x0,8
tick,0x7ff90cd6fb64,75865913,0,0x0,8
tick,0x7ff90cd6fb64,75881558,0,0x0,8
tick,0x7ff90cd6fb64,75897423,0,0x0,8
tick,0x7ff90cd6fb64,75912421,0,0x0,8
tick,0x7ff90cd6fb64,75927390,0,0x0,8
tick,0x7ff90cd6fb64,75942302,0,0x0,8
tick,0x7ff90cd6fb64,75957277,0,0x0,8
tick,0x7ff90cd6fb64,75973224,0,0x0,8
tick,0x7ff90cd6fb64,75988639,0,0x0,8
tick,0x7ff90cd6fb64,76003731,0,0x0,8
tick,0x7ff90cd6fb64,76019556,0,0x0,8
tick,0x7ff90cd6fb64,76035550,0,0x0,8
tick,0x7ff90cd6fb64,76050645,0,0x0,8
tick,0x7ff90cd6fb64,76065528,0,0x0,8
tick,0x7ff90cd6fb64,76080562,0,0x0,8
tick,0x7ff90cd6fb64,76095518,0,0x0,8
tick,0x7ff90cd6fb64,76111491,0,0x0,8
tick,0x7ff90cd6fb64,76127626,0,0x0,8
tick,0x7ff90cd6fb64,76142645,0,0x0,8
tick,0x7ff90cd6fb64,76158318,0,0x0,8
tick,0x7ff90cd6fb64,76174331,0,0x0,8
tick,0x7ff90cd6fb64,76188964,0,0x0,8
tick,0x7ff90cd6fb64,76203924,0,0x0,8
tick,0x7ff90cd6fb64,76218946,0,0x0,8
tick,0x7ff90cd6fb64,76234880,0,0x0,8
tick,0x7ff90cd6fb64,76249885,0,0x0,8
tick,0x7ff90cd6fb64,76265803,0,0x0,8
tick,0x7ff90cd6fb64,76281849,0,0x0,8
tick,0x7ff90cd6fb64,76297754,0,0x0,8
tick,0x7ff90cd6fb64,76312640,0,0x0,8
tick,0x7ff90cd6fb64,76327708,0,0x0,8
tick,0x7ff90cd6fb64,76343714,0,0x0,8
tick,0x7ff90cd6fb64,76359579,0,0x0,8
tick,0x7ff90cd6fb64,76375601,0,0x0,8
tick,0x7ff90cd6fb64,76391586,0,0x0,8
tick,0x7ff90cd6fb64,76407651,0,0x0,8
tick,0x7ff90cd6fb64,76423482,0,0x0,8
tick,0x7ff90cd6fb64,76439393,0,0x0,8
tick,0x7ff90cd6fb64,76455331,0,0x0,8
tick,0x7ff90cd6fb64,76471293,0,0x0,8
tick,0x7ff90cd6fb64,76487393,0,0x0,8
tick,0x7ff90cd6fb64,76503142,0,0x0,8
tick,0x7ff90cd6fb64,76519379,0,0x0,8
tick,0x7ff90cd6fb64,76535202,0,0x0,8
tick,0x7ff90cd6fb64,76551186,0,0x0,8
tick,0x7ff90cd6fb64,76567187,0,0x0,8
tick,0x7ff90cd6fb64,76583278,0,0x0,8
tick,0x7ff90cd6fb64,76598134,0,0x0,8
tick,0x7ff90cd6fb64,76613998,0,0x0,8
tick,0x7ff90cd6fb64,76629954,0,0x0,8
tick,0x7ff90cd6fb64,76645800,0,0x0,8
tick,0x7ff90cd6fb64,76661695,0,0x0,8
tick,0x7ff90cd6fb64,76677745,0,0x0,8
tick,0x7ff90cd6fb64,76693778,0,0x0,8
tick,0x7ff90cd6fb64,76709694,0,0x0,8
tick,0x7ff90cd6fb64,76725627,0,0x0,8
tick,0x7ff90cd6fb64,76740682,0,0x0,8
tick,0x7ff90cd6fb64,76756625,0,0x0,8
tick,0x7ff90cd6fb64,76772546,0,0x0,8
tick,0x7ff90cd6fb64,76788506,0,0x0,8
tick,0x7ff90cd6fb64,76804485,0,0x0,8
tick,0x7ff90cd6fb64,76819526,0,0x0,8
tick,0x7ff90cd6fb64,76835333,0,0x0,8
tick,0x7ff90cd6fb64,76851307,0,0x0,8
tick,0x7ff90cd6fb64,76867480,0,0x0,8
tick,0x7ff90cd6fb64,76883361,0,0x0,8
tick,0x7ff90cd6fb64,76899404,0,0x0,8
tick,0x7ff90cd6fb64,76915282,0,0x0,8
tick,0x7ff90cd6fb64,76931110,0,0x0,8
tick,0x7ff90cd6fb64,76947163,0,0x0,8
tick,0x7ff90cd6fb64,76962967,0,0x0,8
tick,0x7ff90cd6fb64,76979136,0,0x0,8
tick,0x7ff90cd6fb64,76994914,0,0x0,8
tick,0x7ff90cd6fb64,77010958,0,0x0,8
tick,0x7ff90cd6fb64,77026932,0,0x0,8
tick,0x7ff90cd6fb64,77042910,0,0x0,8
tick,0x7ff90cd6fb64,77058750,0,0x0,8
tick,0x7ff90cd6fb64,77074898,0,0x0,8
tick,0x7ff90cd6fb64,77090673,0,0x0,8
tick,0x7ff90cd6fb64,77105637,0,0x0,8
tick,0x7ff90cd6fb64,77120564,0,0x0,8
tick,0x7ff90cd6fb64,77136565,0,0x0,8
tick,0x7ff90cd6fb64,77151548,0,0x0,8
tick,0x7ff90cd6fb64,77167730,0,0x0,8
tick,0x7ff90cd6fb64,77183386,0,0x0,8
tick,0x7ff90cd6fb64,77199408,0,0x0,8
tick,0x7ff90cd6fb64,77214349,0,0x0,8
tick,0x7ff90cd6fb64,77230275,0,0x0,8
tick,0x7ff90cd6fb64,77246275,0,0x0,8
tick,0x7ff90cd6fb64,77262425,0,0x0,8
tick,0x7ff90cd6fb64,77278061,0,0x0,8
tick,0x7ff90cd6fb64,77294059,0,0x0,8
tick,0x7ff90cd6fb64,77310065,0,0x0,8
tick,0x7ff90cd6fb64,77326040,0,0x0,8
tick,0x7ff90cd6fb64,77341992,0,0x0,8
tick,0x7ff90cd6fb64,77357863,0,0x0,8
tick,0x7ff90cd6fb64,77372871,0,0x0,8
tick,0x7ff90cd6fb64,77388387,0,0x0,8
tick,0x7ff90cd6fb64,77404290,0,0x0,8
tick,0x7ff90cd6fb64,77420250,0,0x0,8
tick,0x7ff90cd6fb64,77436180,0,0x0,8
tick,0x7ff90cd6fb64,77452144,0,0x0,8
tick,0x7ff90cd6fb64,77468109,0,0x0,8
tick,0x7ff90cd6fb64,77484084,0,0x0,8
tick,0x7ff90cd6fb64,77500126,0,0x0,8
tick,0x7ff90cd6fb64,77516108,0,0x0,8
tick,0x7ff90cd6fb64,77531935,0,0x0,8
tick,0x7ff90cd6fb64,77547993,0,0x0,8
tick,0x7ff90cd6fb64,77563880,0,0x0,8
tick,0x7ff90cd6fb64,77579845,0,0x0,8
tick,0x7ff90cd6fb64,77595915,0,0x0,8
tick,0x7ff90cd6fb64,77611843,0,0x0,8
tick,0x7ff90cd6fb64,77627814,0,0x0,8
tick,0x7ff90cd6fb64,77643639,0,0x0,8
tick,0x7ff90cd6fb64,77658705,0,0x0,8
tick,0x7ff90cd6fb64,77673630,0,0x0,8
tick,0x7ff90cd6fb64,77689399,0,0x0,8
tick,0x7ff90cd6fb64,77705203,0,0x0,8
tick,0x7ff90cd6fb64,77721201,0,0x0,8
tick,0x7ff90cd6fb64,77737116,0,0x0,8
tick,0x7ff90cd6fb64,77753066,0,0x0,8
tick,0x7ff90cd6fb64,77769080,0,0x0,8
tick,0x7ff90cd6fb64,77785027,0,0x0,8
tick,0x7ff90cd6fb64,77801031,0,0x0,8
tick,0x7ff90cd6fb64,77816917,0,0x0,8
tick,0x7ff90cd6fb64,77832849,0,0x0,8
tick,0x7ff90cd6fb64,77848938,0,0x0,8
tick,0x7ff90cd6fb64,77864884,0,0x0,8
tick,0x7ff90cd6fb64,77880857,0,0x0,8
tick,0x7ff90cd6fb64,77896019,0,0x0,8
tick,0x7ff90cd6fb64,77911880,0,0x0,8
tick,0x7ff90cd6fb64,77926766,0,0x0,8
tick,0x7ff90cd6fb64,77941779,0,0x0,8
tick,0x7ff90cd6fb64,77957720,0,0x0,8
tick,0x7ff90cd6fb64,77973779,0,0x0,8
tick,0x7ff90cd6fb64,77988674,0,0x0,8
tick,0x7ff90cd6fb64,78004645,0,0x0,8
tick,0x7ff90cd6fb64,78019572,0,0x0,8
tick,0x7ff90cd6fb64,78035701,0,0x0,8
tick,0x7ff90cd6fb64,78050590,0,0x0,8
tick,0x7ff90cd6fb64,78066533,0,0x0,8
tick,0x7ff90cd6fb64,78082490,0,0x0,8
tick,0x7ff90cd6fb64,78098435,0,0x0,8
tick,0x7ff90cd6fb64,78114416,0,0x0,8
tick,0x7ff90cd6fb64,78130284,0,0x0,8
tick,0x7ff90cd6fb64,78146289,0,0x0,8
tick,0x7ff90cd6fb64,78162224,0,0x0,8
tick,0x7ff90cd6fb64,78178186,0,0x0,8
tick,0x7ff90cd6fb64,78194157,0,0x0,8
tick,0x7ff90cd6fb64,78210118,0,0x0,8
tick,0x7ff90cd6fb64,78226140,0,0x0,8
tick,0x7ff90cd6fb64,78242198,0,0x0,8
tick,0x7ff90cd6fb64,78257993,0,0x0,8
tick,0x7ff90cd6fb64,78273114,0,0x0,8
tick,0x7ff90cd6fb64,78288944,0,0x0,8
tick,0x7ff90cd6fb64,78305020,0,0x0,8
tick,0x7ff90cd6fb64,78319946,0,0x0,8
tick,0x7ff90cd6fb64,78335905,0,0x0,8
tick,0x7ff90cd6fb64,78351924,0,0x0,8
tick,0x7ff90cd6fb64,78368139,0,0x0,8
tick,0x7ff90cd6fb64,78383709,0,0x0,8
tick,0x7ff90cd6fb64,78399504,0,0x0,8
tick,0x7ff90cd6fb64,78415511,0,0x0,8
tick,0x7ff90cd6fb64,78431539,0,0x0,8
tick,0x7ff90cd6fb64,78447485,0,0x0,8
tick,0x7ff90cd6fb64,78463420,0,0x0,8
tick,0x7ff90cd6fb64,78479412,0,0x0,8
tick,0x7ff90cd6fb64,78495341,0,0x0,8
tick,0x7ff90cd6fb64,78511436,0,0x0,8
tick,0x7ff90cd6fb64,78527385,0,0x0,8
tick,0x7ff90cd6fb64,78543235,0,0x0,8
tick,0x7ff90cd6fb64,78559373,0,0x0,8
tick,0x7ff90cd6fb64,78575231,0,0x0,8
tick,0x7ff90cd6fb64,78591109,0,0x0,8
tick,0x7ff90cd6fb64,78606251,0,0x0,8
tick,0x7ff90cd6fb64,78622016,0,0x0,8
tick,0x7ff90cd6fb64,78637009,0,0x0,8
tick,0x7ff90cd6fb64,78652851,0,0x0,8
tick,0x7ff90cd6fb64,78667850,0,0x0,8
tick,0x7ff90cd6fb64,78682811,0,0x0,8
tick,0x7ff90cd6fb64,78698719,0,0x0,8
tick,0x7ff90cd6fb64,78713683,0,0x0,8
tick,0x7ff90cd6fb64,78728758,0,0x0,8
tick,0x7ff90cd6fb64,78744742,0,0x0,8
tick,0x7ff90cd6fb64,78759745,0,0x0,8
tick,0x7ff90cd6fb64,78775554,0,0x0,8
tick,0x7ff90cd6fb64,78791562,0,0x0,8
tick,0x7ff90cd6fb64,78807580,0,0x0,8
tick,0x7ff90cd6fb64,78823629,0,0x0,8
tick,0x7ff90cd6fb64,78839415,0,0x0,8
tick,0x7ff90cd6fb64,78854513,0,0x0,8
tick,0x7ff90cd6fb64,78870313,0,0x0,8
tick,0x7ff90cd6fb64,78886356,0,0x0,8
tick,0x7ff90cd6fb64,78902214,0,0x0,8
tick,0x7ff90cd6fb64,78918305,0,0x0,8
tick,0x7ff90cd6fb64,78934278,0,0x0,8
tick,0x7ff90cd6fb64,78950159,0,0x0,8
tick,0x7ff90cd6fb64,78966246,0,0x0,8
tick,0x7ff90cd6fb64,78982184,0,0x0,8
tick,0x7ff90cd6fb64,78998017,0,0x0,8
tick,0x7ff90cd6fb64,79014012,0,0x0,8
tick,0x7ff90cd6fb64,79029981,0,0x0,8
tick,0x7ff90cd6fb64,79045916,0,0x0,8
tick,0x7ff90cd6fb64,79061886,0,0x0,8
tick,0x7ff90cd6fb64,79077799,0,0x0,8
tick,0x7ff90cd6fb64,79093772,0,0x0,8
tick,0x7ff90cd6fb64,79109755,0,0x0,8
tick,0x7ff90cd6fb64,79125810,0,0x0,8
tick,0x7ff90cd6fb64,79141880,0,0x0,8
tick,0x7ff90cd6fb64,79157753,0,0x0,8
tick,0x7ff90cd6fb64,79173619,0,0x0,8
tick,0x7ff90cd6fb64,79189626,0,0x0,8
tick,0x7ff90cd6fb64,79205497,0,0x0,8
tick,0x7ff90cd6fb64,79221511,0,0x0,8
tick,0x7ff90cd6fb64,79237548,0,0x0,8
tick,0x7ff90cd6fb64,79253454,0,0x0,8
tick,0x7ff90cd6fb64,79269481,0,0x0,8
tick,0x7ff90cd6fb64,79285432,0,0x0,8
tick,0x7ff90cd6fb64,79300283,0,0x0,8
tick,0x7ff90cd6fb64,79316250,0,0x0,8
tick,0x7ff90cd6fb64,79332178,0,0x0,8
tick,0x7ff90cd6fb64,79348062,0,0x0,8
tick,0x7ff90cd6fb64,79364119,0,0x0,8
tick,0x7ff90cd6fb64,79379994,0,0x0,8
tick,0x7ff90cd6fb64,79396023,0,0x0,8
tick,0x7ff90cd6fb64,79412037,0,0x0,8
tick,0x7ff90cd6fb64,79427889,0,0x0,8
tick,0x7ff90cd6fb64,79443954,0,0x0,8
tick,0x7ff90cd6fb64,79459919,0,0x0,8
tick,0x7ff90cd6fb64,79475745,0,0x0,8
tick,0x7ff90cd6fb64,79491710,0,0x0,8
tick,0x7ff90cd6fb64,79507666,0,0x0,8
tick,0x7ff90cd6fb64,79523702,0,0x0,8
tick,0x7ff90cd6fb64,79539595,0,0x0,8
tick,0x7ff90cd6fb64,79555715,0,0x0,8
tick,0x7ff90cd6fb64,79570624,0,0x0,8
tick,0x7ff90cd6fb64,79586460,0,0x0,8
tick,0x7ff90cd6fb64,79602446,0,0x0,8
tick,0x7ff90cd6fb64,79618523,0,0x0,8
tick,0x7ff90cd6fb64,79633357,0,0x0,8
tick,0x7ff90cd6fb64,79649427,0,0x0,8
tick,0x7ff90cd6fb64,79665285,0,0x0,8
tick,0x7ff90cd6fb64,79681311,0,0x0,8
tick,0x7ff90cd6fb64,79697302,0,0x0,8
tick,0x7ff90cd6fb64,79713115,0,0x0,8
tick,0x7ff90cd6fb64,79729184,0,0x0,8
tick,0x7ff90cd6fb64,79744050,0,0x0,8
tick,0x7ff90cd6fb64,79760028,0,0x0,8
tick,0x7ff90cd6fb64,79775992,0,0x0,8
tick,0x7ff90cd6fb64,79792090,0,0x0,8
tick,0x7ff90cd6fb64,79807853,0,0x0,8
tick,0x7ff90cd6fb64,79822845,0,0x0,8
tick,0x7ff90cd6fb64,79838970,0,0x0,8
tick,0x7ff90cd6fb64,79854934,0,0x0,8
tick,0x7ff90cd6fb64,79870923,0,0x0,8
tick,0x7ff90cd6fb64,79886746,0,0x0,8
tick,0x7ff90cd6fb64,79902969,0,0x0,8
tick,0x7ff90cd6fb64,79918552,0,0x0,8
tick,0x7ff90cd6fb64,79934511,0,0x0,8
tick,0x7ff90cd6fb64,79950520,0,0x0,8
tick,0x7ff90cd6fb64,79966580,0,0x0,8
tick,0x7ff90cd6fb64,79981442,0,0x0,8
tick,0x7ff90cd6fb64,79996385,0,0x0,8
tick,0x7ff90cd6fb64,80012435,0,0x0,8
tick,0x7ff90cd6fb64,80028389,0,0x0,8
tick,0x7ff90cd6fb64,80044399,0,0x0,8
tick,0x7ff90cd6fb64,80060377,0,0x0,8
tick,0x7ff90cd6fb64,80076253,0,0x0,8
tick,0x7ff90cd6fb64,80092108,0,0x0,8
tick,0x7ff90cd6fb64,80108269,0,0x0,8
tick,0x7ff90cd6fb64,80124237,0,0x0,8
tick,0x7ff90cd6fb64,80140166,0,0x0,8
tick,0x7ff90cd6fb64,80155064,0,0x0,8
tick,0x7ff90cd6fb64,80171010,0,0x0,8
tick,0x7ff90cd6fb64,80187162,0,0x0,8
tick,0x7ff90cd6fb64,80202805,0,0x0,8
tick,0x7ff90cd6fb64,80218298,0,0x0,8
tick,0x7ff90cd6fb64,80233330,0,0x0,8
tick,0x7ff90cd6fb64,80249299,0,0x0,8
tick,0x7ff90cd6fb64,80265225,0,0x0,8
tick,0x7ff90cd6fb64,80281198,0,0x0,8
tick,0x7ff90cd6fb64,80297114,0,0x0,8
tick,0x7ff90cd6fb64,80313310,0,0x0,8
tick,0x7ff90cd6fb64,80329233,0,0x0,8
tick,0x7ff90cd6fb64,80345186,0,0x0,8
tick,0x7ff90cd6fb64,80361215,0,0x0,8
tick,0x7ff90cd6fb64,80377053,0,0x0,8
tick,0x7ff90cd6fb64,80392959,0,0x0,8
tick,0x7ff90cd6fb64,80408889,0,0x0,8
tick,0x7ff90cd6fb64,80424980,0,0x0,8
tick,0x7ff90cd6fb64,80440948,0,0x0,8
tick,0x7ff90cd6fb64,80456667,0,0x0,8
tick,0x7ff90cd6fb64,80471695,0,0x0,8
tick,0x7ff90cd6fb64,80486823,0,0x0,8
tick,0x7ff90cd6fb64,80502747,0,0x0,8
tick,0x7ff90cd6fb64,80518617,0,0x0,8
tick,0x7ff90cd6fb64,80534507,0,0x0,8
tick,0x7ff90cd6fb64,80550537,0,0x0,8
tick,0x7ff90cd6fb64,80566409,0,0x0,8
tick,0x7ff90cd6fb64,80582455,0,0x0,8
tick,0x7ff90cd6fb64,80598353,0,0x0,8
tick,0x7ff90cd6fb64,80614185,0,0x0,8
tick,0x7ff90cd6fb64,80630228,0,0x0,8
tick,0x7ff90cd6fb64,80646191,0,0x0,8
tick,0x7ff90cd6fb64,80662250,0,0x0,8
tick,0x7ff90cd6fb64,80678012,0,0x0,8
tick,0x7ff90cd6fb64,80694102,0,0x0,8
tick,0x7ff90cd6fb64,80709952,0,0x0,8
tick,0x7ff90cd6fb64,80725924,0,0x0,8
tick,0x7ff90cd6fb64,80741839,0,0x0,8
tick,0x7ff90cd6fb64,80757865,0,0x0,8
tick,0x7ff90cd6fb64,80773761,0,0x0,8
tick,0x7ff90cd6fb64,80789742,0,0x0,8
tick,0x7ff90cd6fb64,80805748,0,0x0,8
tick,0x7ff90cd6fb64,80821811,0,0x0,8
tick,0x7ff90cd6fb64,80836764,0,0x0,8
tick,0x7ff90cd6fb64,80851671,0,0x0,8
tick,0x7ff90cd6fb64,80867486,0,0x0,8
tick,0x7ff90cd6fb64,80882728,0,0x0,8
tick,0x7ff90cd6fb64,80898494,0,0x0,8
tick,0x7ff90cd6fb64,80914496,0,0x0,8
tick,0x7ff90cd6fb64,80930315,0,0x0,8
tick,0x7ff90cd6fb64,80946291,0,0x0,8
tick,0x7ff90cd6fb64,80962408,0,0x0,8
tick,0x7ff90cd6fb64,80978283,0,0x0,8
tick,0x7ff90cd6fb64,80994170,0,0x0,8
tick,0x7ff90cd6fb64,81010248,0,0x0,8
tick,0x7ff90cd6fb64,81026182,0,0x0,8
tick,0x7ff90cd6fb64,81042056,0,0x0,8
tick,0x7ff90cd6fb64,81057965,0,0x0,8
tick,0x7ff90cd6fb64,81073083,0,0x0,8
tick,0x7ff90cd6fb64,81089040,0,0x0,8
tick,0x7ff90cd6fb64,81104101,0,0x0,8
tick,0x7ff90cd6fb64,81119915,0,0x0,8
tick,0x7ff90cd6fb64,81135793,0,0x0,8
tick,0x7ff90cd6fb64,81151947,0,0x0,8
tick,0x7ff90cd6fb64,81168037,0,0x0,8
tick,0x7ff90cd6fb64,81183616,0,0x0,8
tick,0x7ff90cd6fb64,81200398,0,0x0,8
tick,0x7ff90cd6fb64,81215566,0,0x0,8
tick,0x7ff90cd6fb64,81231521,0,0x0,8
tick,0x7ff90cd6fb64,81247440,0,0x0,8
tick,0x7ff90cd6fb64,81263414,0,0x0,8
tick,0x7ff90cd6fb64,81279441,0,0x0,8
tick,0x7ff90cd6fb64,81295364,0,0x0,8
tick,0x7ff90cd6fb64,81311368,0,0x0,8
tick,0x7ff90cd6fb64,81327359,0,0x0,8
tick,0x7ff90cd6fb64,81342253,0,0x0,8
tick,0x7ff90cd6fb64,81358289,0,0x0,8
tick,0x7ff90cd6fb64,81374356,0,0x0,8
tick,0x7ff90cd6fb64,81390138,0,0x0,8
tick,0x7ff90cd6fb64,81406091,0,0x0,8
tick,0x7ff90cd6fb64,81422093,0,0x0,8
tick,0x7ff90cd6fb64,81438027,0,0x0,8
tick,0x7ff90cd6fb64,81452961,0,0x0,8
tick,0x7ff90cd6fb64,81468896,0,0x0,8
tick,0x7ff90cd6fb64,81484789,0,0x0,8
tick,0x7ff90cd6fb64,81500789,0,0x0,8
tick,0x7ff90cd6fb64,81516763,0,0x0,8
tick,0x7ff90cd6fb64,81532686,0,0x0,8
tick,0x7ff90cd6fb64,81548818,0,0x0,8
tick,0x7ff90cd6fb64,81564640,0,0x0,8
tick,0x7ff90cd6fb64,81580598,0,0x0,8
tick,0x7ff90cd6fb64,81596540,0,0x0,8
tick,0x7ff90cd6fb64,81612640,0,0x0,8
tick,0x7ff90cd6fb64,81628119,0,0x0,8
tick,0x7ff90cd6fb64,81644163,0,0x0,8
tick,0x7ff90cd6fb64,81660050,0,0x0,8
tick,0x7ff90cd6fb64,81675901,0,0x0,8
tick,0x7ff90cd6fb64,81692177,0,0x0,8
tick,0x7ff90cd6fb64,81708399,0,0x0,8
tick,0x7ff90cd6fb64,81723250,0,0x0,8
tick,0x7ff90cd6fb64,81739218,0,0x0,8
tick,0x7ff90cd6fb64,81755128,0,0x0,8
tick,0x7ff90cd6fb64,81771283,0,0x0,8
tick,0x7ff90cd6fb64,81786054,0,0x0,8
tick,0x7ff90cd6fb64,81802046,0,0x0,8
tick,0x7ff90cd6fb64,81817995,0,0x0,8
tick,0x7ff90cd6fb64,81834011,0,0x0,8
tick,0x7ff90cd6fb64,81849992,0,0x0,8
tick,0x7ff90cd6fb64,81866027,0,0x0,8
tick,0x7ff90cd6fb64,81882070,0,0x0,8
tick,0x7ff90cd6fb64,81897814,0,0x0,8
tick,0x7ff90cd6fb64,81912921,0,0x0,8
tick,0x7ff90cd6fb64,81928873,0,0x0,8
tick,0x7ff90cd6fb64,81944749,0,0x0,8
tick,0x7ff90cd6fb64,81960690,0,0x0,8
tick,0x7ff90cd6fb64,81976602,0,0x0,8
tick,0x7ff90cd6fb64,81992586,0,0x0,8
tick,0x7ff90cd6fb64,82008558,0,0x0,8
tick,0x7ff90cd6fb64,82024531,0,0x0,8
tick,0x7ff90cd6fb64,82040492,0,0x0,8
tick,0x7ff90cd6fb64,82055525,0,0x0,8
tick,0x7ff90cd6fb64,82071400,0,0x0,8
tick,0x7ff90cd6fb64,82087459,0,0x0,8
tick,0x7ff90cd6fb64,82102304,0,0x0,8
tick,0x7ff90cd6fb64,82118099,0,0x0,8
tick,0x7ff90cd6fb64,82134388,0,0x0,8
tick,0x7ff90cd6fb64,82150063,0,0x0,8
tick,0x7ff90cd6fb64,82166185,0,0x0,8
tick,0x7ff90cd6fb64,82182067,0,0x0,8
tick,0x7ff90cd6fb64,82198088,0,0x0,8
tick,0x7ff90cd6fb64,82214006,0,0x0,8
tick,0x7ff90cd6fb64,82229157,0,0x0,8
tick,0x7ff90cd6fb64,82245107,0,0x0,8
tick,0x7ff90cd6fb64,82261017,0,0x0,8
tick,0x7ff90cd6fb64,82277023,0,0x0,8
tick,0x7ff90cd6fb64,82292923,0,0x0,8
tick,0x7ff90cd6fb64,82308936,0,0x0,8
tick,0x7ff90cd6fb64,82324949,0,0x0,8
tick,0x7ff90cd6fb64,82340933,0,0x0,8
tick,0x7ff90cd6fb64,82356892,0,0x0,8
tick,0x7ff90cd6fb64,82372736,0,0x0,8
tick,0x7ff90cd6fb64,82388582,0,0x0,8
tick,0x7ff90cd6fb64,82403708,0,0x0,8
tick,0x7ff90cd6fb64,82418498,0,0x0,8
tick,0x7ff90cd6fb64,82434475,0,0x0,8
tick,0x7ff90cd6fb64,82450421,0,0x0,8
tick,0x7ff90cd6fb64,82466517,0,0x0,8
tick,0x7ff90cd6fb64,82482360,0,0x0,8
tick,0x7ff90cd6fb64,82498277,0,0x0,8
tick,0x7ff90cd6fb64,82514276,0,0x0,8
tick,0x7ff90cd6fb64,82530263,0,0x0,8
tick,0x7ff90cd6fb64,82546186,0,0x0,8
tick,0x7ff90cd6fb64,82562124,0,0x0,8
tick,0x7ff90cd6fb64,82578080,0,0x0,8
tick,0x7ff90cd6fb64,82594151,0,0x0,8
tick,0x7ff90cd6fb64,82609987,0,0x0,8
tick,0x7ff90cd6fb64,82626026,0,0x0,8
tick,0x7ff90cd6fb64,82641939,0,0x0,8
tick,0x7ff90cd6fb64,82657870,0,0x0,8
tick,0x7ff90cd6fb64,82672944,0,0x0,8
tick,0x7ff90cd6fb64,82688885,0,0x0,8
tick,0x7ff90cd6fb64,82704796,0,0x0,8
tick,0x7ff90cd6fb64,82719986,0,0x0,8
tick,0x7ff90cd6fb64,82734987,0,0x0,8
tick,0x7ff90cd6fb64,82750751,0,0x0,8
tick,0x7ff90cd6fb64,82766628,0,0x0,8
tick,0x7ff90cd6fb64,82782488,0,0x0,8
tick,0x7ff90cd6fb64,82798591,0,0x0,8
tick,0x7ff90cd6fb64,82814413,0,0x0,8
tick,0x7ff90cd6fb64,82830558,0,0x0,8
tick,0x7ff90cd6fb64,82845446,0,0x0,8
tick,0x7ff90cd6fb64,82860423,0,0x0,8
tick,0x7ff90cd6fb64,82876429,0,0x0,8
tick,0x7ff90cd6fb64,82892267,0,0x0,8
tick,0x7ff90cd6fb64,82908174,0,0x0,8
tick,0x7ff90cd6fb64,82924185,0,0x0,8
tick,0x7ff90cd6fb64,82940311,0,0x0,8
tick,0x7ff90cd6fb64,82955170,0,0x0,8
tick,0x7ff90cd6fb64,82971111,0,0x0,8
tick,0x7ff90cd6fb64,82987076,0,0x0,8
tick,0x7ff90cd6fb64,83002939,0,0x0,8
tick,0x7ff90cd6fb64,83019100,0,0x0,8
tick,0x7ff90cd6fb64,83034886,0,0x0,8
tick,0x7ff90cd6fb64,83050968,0,0x0,8
tick,0x7ff90cd6fb64,83065851,0,0x0,8
tick,0x7ff90cd6fb64,83081894,0,0x0,8
tick,0x7ff90cd6fb64,83097652,0,0x0,8
tick,0x7ff90cd6fb64,83113730,0,0x0,8
tick,0x7ff90cd6fb64,83129719,0,0x0,8
tick,0x7ff90cd6fb64,83145587,0,0x0,8
tick,0x7ff90cd6fb64,83161532,0,0x0,8
tick,0x7ff90cd6fb64,83177516,0,0x0,8
tick,0x7ff90cd6fb64,83193531,0,0x0,8
tick,0x7ff90cd6fb64,83209555,0,0x0,8
tick,0x7ff90cd6fb64,83225423,0,0x0,8
tick,0x7ff90cd6fb64,83241126,0,0x0,8
tick,0x7ff90cd6fb64,83257184,0,0x0,8
tick,0x7ff90cd6fb64,83273195,0,0x0,8
tick,0x7ff90cd6fb64,83289134,0,0x0,8
tick,0x7ff90cd6fb64,83304896,0,0x0,8
tick,0x7ff90cd6fb64,83319993,0,0x0,8
tick,0x7ff90cd6fb64,83335838,0,0x0,8
tick,0x7ff90cd6fb64,83351856,0,0x0,8
tick,0x7ff90cd6fb64,83367772,0,0x0,8
tick,0x7ff90cd6fb64,83383802,0,0x0,8
tick,0x7ff90cd6fb64,83399616,0,0x0,8
tick,0x7ff90cd6fb64,83414664,0,0x0,8
tick,0x7ff90cd6fb64,83430671,0,0x0,8
tick,0x7ff90cd6fb64,83446659,0,0x0,8
tick,0x7ff90cd6fb64,83462653,0,0x0,8
tick,0x7ff90cd6fb64,83478397,0,0x0,8
tick,0x7ff90cd6fb64,83494491,0,0x0,8
tick,0x7ff90cd6fb64,83510387,0,0x0,8
tick,0x7ff90cd6fb64,83526364,0,0x0,8
tick,0x7ff90cd6fb64,83542274,0,0x0,8
tick,0x7ff90cd6fb64,83558114,0,0x0,8
tick,0x7ff90cd6fb64,83573044,0,0x0,8
tick,0x7ff90cd6fb64,83587972,0,0x0,8
tick,0x7ff90cd6fb64,83603132,0,0x0,8
tick,0x7ff90cd6fb64,83619074,0,0x0,8
tick,0x7ff90cd6fb64,83634085,0,0x0,8
tick,0x7ff90cd6fb64,83650142,0,0x0,8
tick,0x7ff90cd6fb64,83665968,0,0x0,8
tick,0x7ff90cd6fb64,83682118,0,0x0,8
tick,0x7ff90cd6fb64,83697853,0,0x0,8
tick,0x7ff90cd6fb64,83713858,0,0x0,8
tick,0x7ff90cd6fb64,83728969,0,0x0,8
tick,0x7ff90cd6fb64,83744821,0,0x0,8
tick,0x7ff90cd6fb64,83760688,0,0x0,8
tick,0x7ff90cd6fb64,83776842,0,0x0,8
tick,0x7ff90cd6fb64,83792589,0,0x0,8
tick,0x7ff90cd6fb64,83808649,0,0x0,8
tick,0x7ff90cd6fb64,83824543,0,0x0,8
tick,0x7ff90cd6fb64,83839444,0,0x0,8
tick,0x7ff90cd6fb64,83855584,0,0x0,8
tick,0x7ff90cd6fb64,83871426,0,0x0,8
tick,0x7ff90cd6fb64,83886413,0,0x0,8
tick,0x7ff90cd6fb64,83902546,0,0x0,8
tick,0x7ff90cd6fb64,83918357,0,0x0,8
tick,0x7ff90cd6fb64,83934299,0,0x0,8
tick,0x7ff90cd6fb64,83950108,0,0x0,8
tick,0x7ff90cd6fb64,83966171,0,0x0,8
tick,0x7ff90cd6fb64,83982060,0,0x0,8
tick,0x7ff90cd6fb64,83998037,0,0x0,8
tick,0x7ff90cd6fb64,84014001,0,0x0,8
tick,0x7ff90cd6fb64,84030015,0,0x0,8
tick,0x7ff90cd6fb64,84045989,0,0x0,8
tick,0x7ff90cd6fb64,84061943,0,0x0,8
tick,0x7ff90cd6fb64,84077791,0,0x0,8
tick,0x7ff90cd6fb64,84093821,0,0x0,8
tick,0x7ff90cd6fb64,84109792,0,0x0,8
tick,0x7ff90cd6fb64,84125852,0,0x0,8
tick,0x7ff90cd6fb64,84141807,0,0x0,8
tick,0x7ff90cd6fb64,84157663,0,0x0,8
tick,0x7ff90cd6fb64,84172787,0,0x0,8
tick,0x7ff90cd6fb64,84188704,0,0x0,8
tick,0x7ff90cd6fb64,84203735,0,0x0,8
tick,0x7ff90cd6fb64,84219552,0,0x0,8
tick,0x7ff90cd6fb64,84235485,0,0x0,8
tick,0x7ff90cd6fb64,84250554,0,0x0,8
tick,0x7ff90cd6fb64,84266362,0,0x0,8
tick,0x7ff90cd6fb64,84282304,0,0x0,8
tick,0x7ff90cd6fb64,84298274,0,0x0,8
tick,0x7ff90cd6fb64,84314209,0,0x0,8
tick,0x7ff90cd6fb64,84330285,0,0x0,8
tick,0x7ff90cd6fb64,84346447,0,0x0,8
tick,0x7ff90cd6fb64,84362135,0,0x0,8
tick,0x7ff90cd6fb64,84378137,0,0x0,8
tick,0x7ff90cd6fb64,84394034,0,0x0,8
tick,0x7ff90cd6fb64,84410001,0,0x0,8
tick,0x7ff90cd6fb64,84425962,0,0x0,8
tick,0x7ff90cd6fb64,84442056,0,0x0,8
tick,0x7ff90cd6fb64,84458032,0,0x0,8
tick,0x7ff90cd6fb64,84473835,0,0x0,8
tick,0x7ff90cd6fb64,84489834,0,0x0,8
tick,0x7ff90cd6fb64,84504761,0,0x0,8
tick,0x7ff90cd6fb64,84519662,0,0x0,8
tick,0x7ff90cd6fb64,84535686,0,0x0,8
tick,0x7ff90cd6fb64,84550669,0,0x0,8
tick,0x7ff90cd6fb64,84566714,0,0x0,8
tick,0x7ff90cd6fb64,84581551,0,0x0,8
tick,0x7ff90cd6fb64,84597541,0,0x0,8
tick,0x7ff90cd6fb64,84613521,0,0x0,8
tick,0x7ff90cd6fb64,84629514,0,0x0,8
tick,0x7ff90cd6fb64,84645378,0,0x0,8
tick,0x7ff90cd6fb64,84661483,0,0x0,8
tick,0x7ff90cd6fb64,84676255,0,0x0,8
tick,0x7ff90cd6fb64,84692530,0,0x0,8
tick,0x7ff90cd6fb64,84708369,0,0x0,8
tick,0x7ff90cd6fb64,84724632,0,0x0,8
tick,0x7ff90cd6fb64,84739393,0,0x0,8
tick,0x7ff90cd6fb64,84755190,0,0x0,8
tick,0x7ff90cd6fb64,84771086,0,0x0,8
tick,0x7ff90cd6fb64,84786228,0,0x0,8
tick,0x7ff90cd6fb64,84802245,0,0x0,8
tick,0x7ff90cd6fb64,84818089,0,0x0,8
tick,0x7ff90cd6fb64,84834015,0,0x0,8
tick,0x7ff90cd6fb64,84849854,0,0x0,8
tick,0x7ff90cd6fb64,84865893,0,0x0,8
tick,0x7ff90cd6fb64,84881638,0,0x0,8
tick,0x7ff90cd6fb64,84897634,0,0x0,8
tick,0x7ff90cd6fb64,84913678,0,0x0,8
tick,0x7ff90cd6fb64,84929662,0,0x0,8
tick,0x7ff90cd6fb64,84945612,0,0x0,8
tick,0x7ff90cd6fb64,84961725,0,0x0,8
tick,0x7ff90cd6fb64,84977831,0,0x0,8
tick,0x7ff90cd6fb64,84993457,0,0x0,8
tick,0x7ff90cd6fb64,85009539,0,0x0,8
tick,0x7ff90cd6fb64,85025591,0,0x0,8
tick,0x7ff90cd6fb64,85041017,0,0x0,8
tick,0x7ff90cd6fb64,85056890,0,0x0,8
tick,0x7ff90cd6fb64,85072984,0,0x0,8
tick,0x7ff90cd6fb64,85088941,0,0x0,8
tick,0x7ff90cd6fb64,85103917,0,0x0,8
tick,0x7ff90cd6fb64,85119848,0,0x0,8
tick,0x7ff90cd6fb64,85134665,0,0x0,8
tick,0x7ff90cd6fb64,85150628,0,0x0,8
tick,0x7ff90cd6fb64,85166810,0,0x0,8
tick,0x7ff90cd6fb64,85182531,0,0x0,8
tick,0x7ff90cd6fb64,85198610,0,0x0,8
tick,0x7ff90cd6fb64,85214550,0,0x0,8
tick,0x7ff90cd6fb64,85230543,0,0x0,8
tick,0x7ff90cd6fb64,85246467,0,0x0,8
tick,0x7ff90cd6fb64,85262355,0,0x0,8
tick,0x7ff90cd6fb64,85278208,0,0x0,8
tick,0x7ff90cd6fb64,85294302,0,0x0,8
tick,0x7ff90cd6fb64,85310265,0,0x0,8
tick,0x7ff90cd6fb64,85326270,0,0x0,8
tick,0x7ff90cd6fb64,85342310,0,0x0,8
tick,0x7ff90cd6fb64,85358184,0,0x0,8
tick,0x7ff90cd6fb64,85374065,0,0x0,8
tick,0x7ff90cd6fb64,85390021,0,0x0,8
tick,0x7ff90cd6fb64,85404992,0,0x0,8
tick,0x7ff90cd6fb64,85419894,0,0x0,8
tick,0x7ff90cd6fb64,85435976,0,0x0,8
tick,0x7ff90cd6fb64,85451808,0,0x0,8
tick,0x7ff90cd6fb64,85467825,0,0x0,8
tick,0x7ff90cd6fb64,85483851,0,0x0,8
tick,0x7ff90cd6fb64,85499877,0,0x0,8
tick,0x7ff90cd6fb64,85515706,0,0x0,8
tick,0x7ff90cd6fb64,85531579,0,0x0,8
tick,0x7ff90cd6fb64,85547666,0,0x0,8
tick,0x7ff90cd6fb64,85563681,0,0x0,8
tick,0x7ff90cd6fb64,85579604,0,0x0,8
tick,0x7ff90cd6fb64,85594424,0,0x0,8
tick,0x7ff90cd6fb64,85610748,0,0x0,8
tick,0x7ff90cd6fb64,85626647,0,0x0,8
tick,0x7ff90cd6fb64,85642347,0,0x0,8
tick,0x7ff90cd6fb64,85658278,0,0x0,8
tick,0x7ff90cd6fb64,85674223,0,0x0,8
tick,0x7ff90cd6fb64,85690244,0,0x0,8
tick,0x7ff90cd6fb64,85706254,0,0x0,8
tick,0x7ff90cd6fb64,85722069,0,0x0,8
tick,0x7ff90cd6fb64,85738237,0,0x0,8
tick,0x7ff90cd6fb64,85754033,0,0x0,8
tick,0x7ff90cd6fb64,85770030,0,0x0,8
tick,0x7ff90cd6fb64,85786386,0,0x0,8
tick,0x7ff90cd6fb64,85802171,0,0x0,8
tick,0x7ff90cd6fb64,85817968,0,0x0,8
tick,0x7ff90cd6fb64,85833869,0,0x0,8
tick,0x7ff90cd6fb64,85848761,0,0x0,8
tick,0x7ff90cd6fb64,85864729,0,0x0,8
tick,0x7ff90cd6fb64,85880611,0,0x0,8
tick,0x7ff90cd6fb64,85896577,0,0x0,8
tick,0x7ff90cd6fb64,85912710,0,0x0,8
tick,0x7ff90cd6fb64,85928782,0,0x0,8
tick,0x7ff90cd6fb64,85944557,0,0x0,8
tick,0x7ff90cd6fb64,85959495,0,0x0,8
tick,0x7ff90cd6fb64,85975442,0,0x0,8
tick,0x7ff90cd6fb64,85991343,0,0x0,8
tick,0x7ff90cd6fb64,86007307,0,0x0,8
tick,0x7ff90cd6fb64,86023323,0,0x0,8
tick,0x7ff90cd6fb64,86039403,0,0x0,8
tick,0x7ff90cd6fb64,86055439,0,0x0,8
tick,0x7ff90cd6fb64,86071216,0,0x0,8
tick,0x7ff90cd6fb64,86087157,0,0x0,8
tick,0x7ff90cd6fb64,86103076,0,0x0,8
tick,0x7ff90cd6fb64,86119070,0,0x0,8
tick,0x7ff90cd6fb64,86135116,0,0x0,8
tick,0x7ff90cd6fb64,86151167,0,0x0,8
tick,0x7ff90cd6fb64,86167066,0,0x0,8
tick,0x7ff90cd6fb64,86183123,0,0x0,8
tick,0x7ff90cd6fb64,86198935,0,0x0,8
tick,0x7ff90cd6fb64,86214746,0,0x0,8
tick,0x7ff90cd6fb64,86230840,0,0x0,8
tick,0x7ff90cd6fb64,86245883,0,0x0,8
tick,0x7ff90cd6fb64,86261965,0,0x0,8
tick,0x7ff90cd6fb64,86277736,0,0x0,8
tick,0x7ff90cd6fb64,86293645,0,0x0,8
tick,0x7ff90cd6fb64,86309589,0,0x0,8
tick,0x7ff90cd6fb64,86325554,0,0x0,8
tick,0x7ff90cd6fb64,86341735,0,0x0,8
tick,0x7ff90cd6fb64,86357173,0,0x0,8
tick,0x7ff90cd6fb64,86372003,0,0x0,8
tick,0x7ff90cd6fb64,86387984,0,0x0,8
tick,0x7ff90cd6fb64,86404057,0,0x0,8
tick,0x7ff90cd6fb64,86420029,0,0x0,8
tick,0x7ff90cd6fb64,86435964,0,0x0,8
tick,0x7ff90cd6fb64,86451540,0,0x0,8
tick,0x7ff90cd6fb64,86467420,0,0x0,8
tick,0x7ff90cd6fb64,86483431,0,0x0,8
tick,0x7ff90cd6fb64,86499300,0,0x0,8
tick,0x7ff90cd6fb64,86515236,0,0x0,8
tick,0x7ff90cd6fb64,86531238,0,0x0,8
tick,0x7ff90cd6fb64,86547187,0,0x0,8
tick,0x7ff90cd6fb64,86563143,0,0x0,8
tick,0x7ff90cd6fb64,86579037,0,0x0,8
tick,0x7ff90cd6fb64,86595071,0,0x0,8
tick,0x7ff90cd6fb64,86610979,0,0x0,8
tick,0x7ff90cd6fb64,86627058,0,0x0,8
tick,0x7ff90cd6fb64,86643052,0,0x0,8
tick,0x7ff90cd6fb64,86659029,0,0x0,8
tick,0x7ff90cd6fb64,86674816,0,0x0,8
tick,0x7ff90cd6fb64,86689785,0,0x0,8
tick,0x7ff90cd6fb64,86705831,0,0x0,8
tick,0x7ff90cd6fb64,86720732,0,0x0,8
tick,0x7ff90cd6fb64,86735830,0,0x0,8
tick,0x7ff90cd6fb64,86751270,0,0x0,8
tick,0x7ff90cd6fb64,86767213,0,0x0,8
tick,0x7ff90cd6fb64,86782386,0,0x0,8
tick,0x7ff90cd6fb64,86798046,0,0x0,8
tick,0x7ff90cd6fb64,86814139,0,0x0,8
tick,0x7ff90cd6fb64,86830137,0,0x0,8
tick,0x7ff90cd6fb64,86845009,0,0x0,8
tick,0x7ff90cd6fb64,86860972,0,0x0,8
tick,0x7ff90cd6fb64,86877060,0,0x0,8
tick,0x7ff90cd6fb64,86891901,0,0x0,8
tick,0x7ff90cd6fb64,86907850,0,0x0,8
tick,0x7ff90cd6fb64,86923966,0,0x0,8
tick,0x7ff90cd6fb64,86939735,0,0x0,8
tick,0x7ff90cd6fb64,86954780,0,0x0,8
tick,0x7ff90cd6fb64,86970751,0,0x0,8
tick,0x7ff90cd6fb64,86986639,0,0x0,8
tick,0x7ff90cd6fb64,87002835,0,0x0,8
tick,0x7ff90cd6fb64,87018480,0,0x0,8
tick,0x7ff90cd6fb64,87034743,0,0x0,8
tick,0x7ff90cd6fb64,87050473,0,0x0,8
tick,0x7ff90cd6fb64,87066566,0,0x0,8
tick,0x7ff90cd6fb64,87082585,0,0x0,8
tick,0x7ff90cd6fb64,87098291,0,0x0,8
tick,0x7ff90cd6fb64,87114417,0,0x0,8
tick,0x7ff90cd6fb64,87130253,0,0x0,8
tick,0x7ff90cd6fb64,87146290,0,0x0,8
tick,0x7ff90cd6fb64,87162372,0,0x0,8
tick,0x7ff90cd6fb64,87178104,0,0x0,8
tick,0x7ff90cd6fb64,87194250,0,0x0,8
tick,0x7ff90cd6fb64,87210017,0,0x0,8
tick,0x7ff90cd6fb64,87226111,0,0x0,8
tick,0x7ff90cd6fb64,87241960,0,0x0,8
tick,0x7ff90cd6fb64,87256885,0,0x0,8
tick,0x7ff90cd6fb64,87272911,0,0x0,8
tick,0x7ff90cd6fb64,87288885,0,0x0,8
tick,0x7ff90cd6fb64,87304864,0,0x0,8
tick,0x7ff90cd6fb64,87320816,0,0x0,8
tick,0x7ff90cd6fb64,87336867,0,0x0,8
tick,0x7ff90cd6fb64,87352806,0,0x0,8
tick,0x7ff90cd6fb64,87368566,0,0x0,8
tick,0x7ff90cd6fb64,87383538,0,0x0,8
tick,0x7ff90cd6fb64,87399668,0,0x0,8
tick,0x7ff90cd6fb64,87415567,0,0x0,8
tick,0x7ff90cd6fb64,87431530,0,0x0,8
tick,0x7ff90cd6fb64,87447517,0,0x0,8
tick,0x7ff90cd6fb64,87463526,0,0x0,8
tick,0x7ff90cd6fb64,87479428,0,0x0,8
tick,0x7ff90cd6fb64,87495351,0,0x0,8
tick,0x7ff90cd6fb64,87511524,0,0x0,8
tick,0x7ff90cd6fb64,87527291,0,0x0,8
tick,0x7ff90cd6fb64,87543283,0,0x0,8
tick,0x7ff90cd6fb64,87559300,0,0x0,8
tick,0x7ff90cd6fb64,87575809,0,0x0,8
tick,0x7ff90cd6fb64,87591273,0,0x0,8
tick,0x7ff90cd6fb64,87607151,0,0x0,8
tick,0x7ff90cd6fb64,87623078,0,0x0,8
tick,0x7ff90cd6fb64,87639045,0,0x0,8
tick,0x7ff90cd6fb64,87654912,0,0x0,8
tick,0x7ff90cd6fb64,87670871,0,0x0,8
tick,0x7ff90cd6fb64,87685766,0,0x0,8
tick,0x7ff90cd6fb64,87702009,0,0x0,8
tick,0x7ff90cd6fb64,87717738,0,0x0,8
tick,0x7ff90cd6fb64,87733659,0,0x0,8
tick,0x7ff90cd6fb64,87749731,0,0x0,8
tick,0x7ff90cd6fb64,87765951,0,0x0,8
tick,0x7ff90cd6fb64,87781530,0,0x0,8
tick,0x7ff90cd6fb64,87797525,0,0x0,8
tick,0x7ff90cd6fb64,87813552,0,0x0,8
tick,0x7ff90cd6fb64,87829417,0,0x0,8
tick,0x7ff90cd6fb64,87845267,0,0x0,8
tick,0x7ff90cd6fb64,87861274,0,0x0,8
tick,0x7ff90cd6fb64,87877270,0,0x0,8
tick,0x7ff90cd6fb64,87893211,0,0x0,8
tick,0x7ff90cd6fb64,87909210,0,0x0,8
tick,0x7ff90cd6fb64,87924227,0,0x0,8
tick,0x7ff90cd6fb64,87940102,0,0x0,8
tick,0x7ff90cd6fb64,87956059,0,0x0,8
tick,0x7ff90cd6fb64,87971152,0,0x0,8
tick,0x7ff90cd6fb64,87986114,0,0x0,8
tick,0x7ff90cd6fb64,88001950,0,0x0,8
tick,0x7ff90cd6fb64,88018196,0,0x0,8
tick,0x7ff90cd6fb64,88033779,0,0x0,8
tick,0x7ff90cd6fb64,88049778,0,0x0,8
tick,0x7ff90cd6fb64,88065679,0,0x0,8
tick,0x7ff90cd6fb64,88081649,0,0x0,8
tick,0x7ff90cd6fb64,88097607,0,0x0,8
tick,0x7ff90cd6fb64,88113652,0,0x0,8
tick,0x7ff90cd6fb64,88129615,0,0x0,8
tick,0x7ff90cd6fb64,88144605,0,0x0,8
tick,0x7ff90cd6fb64,88160299,0,0x0,8
tick,0x7ff90cd6fb64,88176237,0,0x0,8
tick,0x7ff90cd6fb64,88192064,0,0x0,8
tick,0x7ff90cd6fb64,88208241,0,0x0,8
tick,0x7ff90cd6fb64,88224177,0,0x0,8
tick,0x7ff90cd6fb64,88239152,0,0x0,8
tick,0x7ff90cd6fb64,88254893,0,0x0,8
tick,0x7ff90cd6fb64,88269993,0,0x0,8
tick,0x7ff90cd6fb64,88285925,0,0x0,8
tick,0x7ff90cd6fb64,88300792,0,0x0,8
tick,0x7ff90cd6fb64,88317012,0,0x0,8
tick,0x7ff90cd6fb64,88332752,0,0x0,8
tick,0x7ff90cd6fb64,88348772,0,0x0,8
tick,0x7ff90cd6fb64,88364317,0,0x0,8
tick,0x7ff90cd6fb64,88379146,0,0x0,8
tick,0x7ff90cd6fb64,88395121,0,0x0,8
tick,0x7ff90cd6fb64,88411069,0,0x0,8
tick,0x7ff90cd6fb64,88427048,0,0x0,8
tick,0x7ff90cd6fb64,88442951,0,0x0,8
tick,0x7ff90cd6fb64,88459319,0,0x0,8
tick,0x7ff90cd6fb64,88474889,0,0x0,8
tick,0x7ff90cd6fb64,88490845,0,0x0,8
tick,0x7ff90cd6fb64,88506784,0,0x0,8
tick,0x7ff90cd6fb64,88522877,0,0x0,8
tick,0x7ff90cd6fb64,88538757,0,0x0,8
tick,0x7ff90cd6fb64,88554806,0,0x0,8
tick,0x7ff90cd6fb64,88569743,0,0x0,8
tick,0x7ff90cd6fb64,88585573,0,0x0,8
tick,0x7ff90cd6fb64,88601649,0,0x0,8
tick,0x7ff90cd6fb64,88617531,0,0x0,8
tick,0x7ff90cd6fb64,88634015,0,0x0,8
tick,0x7ff90cd6fb64,88649537,0,0x0,8
tick,0x7ff90cd6fb64,88665356,0,0x0,8
tick,0x7ff90cd6fb64,88681547,0,0x0,8
tick,0x7ff90cd6fb64,88697406,0,0x0,8
tick,0x7ff90cd6fb64,88713255,0,0x0,8
tick,0x7ff90cd6fb64,88729338,0,0x0,8
tick,0x7ff90cd6fb64,88744185,0,0x0,8
tick,0x7ff90cd6fb64,88760271,0,0x0,8
tick,0x7ff90cd6fb64,88776304,0,0x0,8
tick,0x7ff90cd6fb64,88791167,0,0x0,8
tick,0x7ff90cd6fb64,88806997,0,0x0,8
tick,0x7ff90cd6fb64,88823182,0,0x0,8
tick,0x7ff90cd6fb64,88837886,0,0x0,8
tick,0x7ff90cd6fb64,88853039,0,0x0,8
tick,0x7ff90cd6fb64,88868839,0,0x0,8
tick,0x7ff90cd6fb64,88884968,0,0x0,8
tick,0x7ff90cd6fb64,88900847,0,0x0,8
tick,0x7ff90cd6fb64,88916881,0,0x0,8
tick,0x7ff90cd6fb64,88932684,0,0x0,8
tick,0x7ff90cd6fb64,88948686,0,0x0,8
tick,0x7ff90cd6fb64,88964569,0,0x0,8
tick,0x7ff90cd6fb64,88980652,0,0x0,8
tick,0x7ff90cd6fb64,88996444,0,0x0,8
tick,0x7ff90cd6fb64,89012559,0,0x0,8
tick,0x7ff90cd6fb64,89028489,0,0x0,8
tick,0x7ff90cd6fb64,89044583,0,0x0,8
tick,0x7ff90cd6fb64,89060466,0,0x0,8
tick,0x7ff90cd6fb64,89076317,0,0x0,8
tick,0x7ff90cd6fb64,89092218,0,0x0,8
tick,0x7ff90cd6fb64,89108204,0,0x0,8
tick,0x7ff90cd6fb64,89124140,0,0x0,8
tick,0x7ff90cd6fb64,89140340,0,0x0,8
tick,0x7ff90cd6fb64,89155064,0,0x0,8
tick,0x7ff90cd6fb64,89169990,0,0x0,8
tick,0x7ff90cd6fb64,89185944,0,0x0,8
tick,0x7ff90cd6fb64,89201971,0,0x0,8
tick,0x7ff90cd6fb64,89217884,0,0x0,8
tick,0x7ff90cd6fb64,89234179,0,0x0,8
tick,0x7ff90cd6fb64,89249826,0,0x0,8
tick,0x7ff90cd6fb64,89266020,0,0x0,8
tick,0x7ff90cd6fb64,89281049,0,0x0,8
tick,0x7ff90cd6fb64,89297177,0,0x0,8
tick,0x7ff90cd6fb64,89313089,0,0x0,8
tick,0x7ff90cd6fb64,89329006,0,0x0,8
tick,0x7ff90cd6fb64,89344904,0,0x0,8
tick,0x7ff90cd6fb64,89360858,0,0x0,8
tick,0x7ff90cd6fb64,89376926,0,0x0,8
tick,0x7ff90cd6fb64,89392949,0,0x0,8
tick,0x7ff90cd6fb64,89408715,0,0x0,8
tick,0x7ff90cd6fb64,89424678,0,0x0,8
tick,0x7ff90cd6fb64,89439642,0,0x0,8
tick,0x7ff90cd6fb64,89455640,0,0x0,8
tick,0x7ff90cd6fb64,89471585,0,0x0,8
tick,0x7ff90cd6fb64,89486569,0,0x0,8
tick,0x7ff90cd6fb64,89502555,0,0x0,8
tick,0x7ff90cd6fb64,89518435,0,0x0,8
tick,0x7ff90cd6fb64,89534476,0,0x0,8
tick,0x7ff90cd6fb64,89550360,0,0x0,8
tick,0x7ff90cd6fb64,89566217,0,0x0,8
tick,0x7ff90cd6fb64,89582242,0,0x0,8
tick,0x7ff90cd6fb64,89598124,0,0x0,8
tick,0x7ff90cd6fb64,89614264,0,0x0,8
tick,0x7ff90cd6fb64,89630076,0,0x0,8
tick,0x7ff90cd6fb64,89646346,0,0x0,8
tick,0x7ff90cd6fb64,89662241,0,0x0,8
tick,0x7ff90cd6fb64,89678080,0,0x0,8
tick,0x7ff90cd6fb64,89694103,0,0x0,8
tick,0x7ff90cd6fb64,89709876,0,0x0,8
tick,0x7ff90cd6fb64,89725884,0,0x0,8
tick,0x7ff90cd6fb64,89741865,0,0x0,8
tick,0x7ff90cd6fb64,89757976,0,0x0,8
tick,0x7ff90cd6fb64,89772788,0,0x0,8
tick,0x7ff90cd6fb64,89787874,0,0x0,8
tick,0x7ff90cd6fb64,89803714,0,0x0,8
tick,0x7ff90cd6fb64,89819744,0,0x0,8
tick,0x7ff90cd6fb64,89835628,0,0x0,8
tick,0x7ff90cd6fb64,89850649,0,0x0,8
tick,0x7ff90cd6fb64,89866578,0,0x0,8
tick,0x7ff90cd6fb64,89882662,0,0x0,8
tick,0x7ff90cd6fb64,89898533,0,0x0,8
tick,0x7ff90cd6fb64,89914358,0,0x0,8
tick,0x7ff90cd6fb64,89930407,0,0x0,8
tick,0x7ff90cd6fb64,89946440,0,0x0,8
tick,0x7ff90cd6fb64,89962453,0,0x0,8
tick,0x7ff90cd6fb64,89978458,0,0x0,8
tick,0x7ff90cd6fb64,89994193,0,0x0,8
tick,0x7ff90cd6fb64,90010202,0,0x0,8
tick,0x7ff90cd6fb64,90026192,0,0x0,8
tick,0x7ff90cd6fb64,90042213,0,0x0,8
tick,0x7ff90cd6fb64,90058171,0,0x0,8
tick,0x7ff90cd6fb64,90073966,0,0x0,8
tick,0x7ff90cd6fb64,90089071,0,0x0,8
tick,0x7ff90cd6fb64,90104084,0,0x0,8
tick,0x7ff90cd6fb64,90119928,0,0x0,8
tick,0x7ff90cd6fb64,90135957,0,0x0,8
tick,0x7ff90cd6fb64,90151787,0,0x0,8
tick,0x7ff90cd6fb64,90167850,0,0x0,8
tick,0x7ff90cd6fb64,90184014,0,0x0,8
tick,0x7ff90cd6fb64,90198732,0,0x0,8
tick,0x7ff90cd6fb64,90214617,0,0x0,8
tick,0x7ff90cd6fb64,90230611,0,0x0,8
tick,0x7ff90cd6fb64,90246602,0,0x0,8
tick,0x7ff90cd6fb64,90262798,0,0x0,8
tick,0x7ff90cd6fb64,90278457,0,0x0,8
tick,0x7ff90cd6fb64,90294373,0,0x0,8
tick,0x7ff90cd6fb64,90310327,0,0x0,8
tick,0x7ff90cd6fb64,90326327,0,0x0,8
tick,0x7ff90cd6fb64,90342266,0,0x0,8
tick,0x7ff90cd6fb64,90358223,0,0x0,8
tick,0x7ff90cd6fb64,90374210,0,0x0,8
tick,0x7ff90cd6fb64,90389129,0,0x0,8
tick,0x7ff90cd6fb64,90404243,0,0x0,8
tick,0x7ff90cd6fb64,90420162,0,0x0,8
tick,0x7ff90cd6fb64,90435988,0,0x0,8
tick,0x7ff90cd6fb64,90451955,0,0x0,8
tick,0x7ff90cd6fb64,90468096,0,0x0,8
tick,0x7ff90cd6fb64,90484127,0,0x0,8
tick,0x7ff90cd6fb64,90499994,0,0x0,8
tick,0x7ff90cd6fb64,90515799,0,0x0,8
tick,0x7ff90cd6fb64,90531875,0,0x0,8
tick,0x7ff90cd6fb64,90547826,0,0x0,8
tick,0x7ff90cd6fb64,90563615,0,0x0,8
tick,0x7ff90cd6fb64,90579676,0,0x0,8
tick,0x7ff90cd6fb64,90595534,0,0x0,8
tick,0x7ff90cd6fb64,90611553,0,0x0,8
tick,0x7ff90cd6fb64,90627646,0,0x0,8
tick,0x7ff90cd6fb64,90643625,0,0x0,8
tick,0x7ff90cd6fb64,90659443,0,0x0,8
tick,0x7ff90cd6fb64,90675553,0,0x0,8
tick,0x7ff90cd6fb64,90691405,0,0x0,8
tick,0x7ff90cd6fb64,90706262,0,0x0,8
tick,0x7ff90cd6fb64,90721263,0,0x0,8
tick,0x7ff90cd6fb64,90736182,0,0x0,8
tick,0x7ff90cd6fb64,90752349,0,0x0,8
tick,0x7ff90cd6fb64,90768312,0,0x0,8
tick,0x7ff90cd6fb64,90784159,0,0x0,8
tick,0x7ff90cd6fb64,90800026,0,0x0,8
tick,0x7ff90cd6fb64,90816055,0,0x0,8
tick,0x7ff90cd6fb64,90831911,0,0x0,8
tick,0x7ff90cd6fb64,90847842,0,0x0,8
tick,0x7ff90cd6fb64,90863907,0,0x0,8
tick,0x7ff90cd6fb64,90879940,0,0x0,8
tick,0x7ff90cd6fb64,90895853,0,0x0,8
tick,0x7ff90cd6fb64,90911843,0,0x0,8
tick,0x7ff90cd6fb64,90927711,0,0x0,8
tick,0x7ff90cd6fb64,90943684,0,0x0,8
tick,0x7ff90cd6fb64,90959779,0,0x0,8
tick,0x7ff90cd6fb64,90975571,0,0x0,8
tick,0x7ff90cd6fb64,90990782,0,0x0,8
tick,0x7ff90cd6fb64,91006753,0,0x0,8
tick,0x7ff90cd6fb64,91021879,0,0x0,8
tick,0x7ff90cd6fb64,91036727,0,0x0,8
tick,0x7ff90cd6fb64,91052632,0,0x0,8
tick,0x7ff90cd6fb64,91068572,0,0x0,8
tick,0x7ff90cd6fb64,91084369,0,0x0,8
tick,0x7ff90cd6fb64,91100048,0,0x0,8
tick,0x7ff90cd6fb64,91116125,0,0x0,8
tick,0x7ff90cd6fb64,91132011,0,0x0,8
tick,0x7ff90cd6fb64,91147851,0,0x0,8
tick,0x7ff90cd6fb64,91163921,0,0x0,8
tick,0x7ff90cd6fb64,91179914,0,0x0,8
tick,0x7ff90cd6fb64,91195879,0,0x0,8
tick,0x7ff90cd6fb64,91211928,0,0x0,8
tick,0x7ff90cd6fb64,91227831,0,0x0,8
tick,0x7ff90cd6fb64,91243886,0,0x0,8
tick,0x7ff90cd6fb64,91259684,0,0x0,8
tick,0x7ff90cd6fb64,91275650,0,0x0,8
tick,0x7ff90cd6fb64,91291672,0,0x0,8
tick,0x7ff90cd6fb64,91307576,0,0x0,8
tick,0x7ff90cd6fb64,91323537,0,0x0,8
tick,0x7ff90cd6fb64,91339683,0,0x0,8
tick,0x7ff90cd6fb64,91355439,0,0x0,8
tick,0x7ff90cd6fb64,91370362,0,0x0,8
tick,0x7ff90cd6fb64,91386166,0,0x0,8
tick,0x7ff90cd6fb64,91402582,0,0x0,8
tick,0x7ff90cd6fb64,91418080,0,0x0,8
tick,0x7ff90cd6fb64,91434137,0,0x0,8
tick,0x7ff90cd6fb64,91449999,0,0x0,8
tick,0x7ff90cd6fb64,91465037,0,0x0,8
tick,0x7ff90cd6fb64,91480342,0,0x0,8
tick,0x7ff90cd6fb64,91496231,0,0x0,8
tick,0x7ff90cd6fb64,91512237,0,0x0,8
tick,0x7ff90cd6fb64,91528223,0,0x0,8
tick,0x7ff90cd6fb64,91544048,0,0x0,8
tick,0x7ff90cd6fb64,91560092,0,0x0,8
tick,0x7ff90cd6fb64,91576075,0,0x0,8
tick,0x7ff90cd6fb64,91591921,0,0x0,8
tick,0x7ff90cd6fb64,91608019,0,0x0,8
tick,0x7ff90cd6fb64,91622807,0,0x0,8
tick,0x7ff90cd6fb64,91638944,0,0x0,8
tick,0x7ff90cd6fb64,91653993,0,0x0,8
tick,0x7ff90cd6fb64,91669796,0,0x0,8
tick,0x7ff90cd6fb64,91685706,0,0x0,8
tick,0x7ff90cd6fb64,91701862,0,0x0,8
tick,0x7ff90cd6fb64,91717927,0,0x0,8
tick,0x7ff90cd6fb64,91733714,0,0x0,8
tick,0x7ff90cd6fb64,91749630,0,0x0,8
tick,0x7ff90cd6fb64,91765585,0,0x0,8
tick,0x7ff90cd6fb64,91781566,0,0x0,8
tick,0x7ff90cd6fb64,91796467,0,0x0,8
tick,0x7ff90cd6fb64,91812431,0,0x0,8
tick,0x7ff90cd6fb64,91828294,0,0x0,8
tick,0x7ff90cd6fb64,91843344,0,0x0,8
tick,0x7ff90cd6fb64,91859206,0,0x0,8
tick,0x7ff90cd6fb64,91875123,0,0x0,8
tick,0x7ff90cd6fb64,91891036,0,0x0,8
tick,0x7ff90cd6fb64,91907038,0,0x0,8
tick,0x7ff90cd6fb64,91923054,0,0x0,8
tick,0x7ff90cd6fb64,91939011,0,0x0,8
tick,0x7ff90cd6fb64,91954997,0,0x0,8
tick,0x7ff90cd6fb64,91971058,0,0x0,8
tick,0x7ff90cd6fb64,91985829,0,0x0,8
tick,0x7ff90cd6fb64,92001814,0,0x0,8
tick,0x7ff90cd6fb64,92016798,0,0x0,8
tick,0x7ff90cd6fb64,92032752,0,0x0,8
tick,0x7ff90cd6fb64,92048771,0,0x0,8
tick,0x7ff90cd6fb64,92064723,0,0x0,8
tick,0x7ff90cd6fb64,92079716,0,0x0,8
tick,0x7ff90cd6fb64,92095680,0,0x0,8
tick,0x7ff90cd6fb64,92111518,0,0x0,8
tick,0x7ff90cd6fb64,92127498,0,0x0,8
tick,0x7ff90cd6fb64,92143420,0,0x0,8
tick,0x7ff90cd6fb64,92159368,0,0x0,8
tick,0x7ff90cd6fb64,92175480,0,0x0,8
tick,0x7ff90cd6fb64,92191376,0,0x0,8
tick,0x7ff90cd6fb64,92206422,0,0x0,8
tick,0x7ff90cd6fb64,92221239,0,0x0,8
tick,0x7ff90cd6fb64,92236272,0,0x0,8
tick,0x7ff90cd6fb64,92252125,0,0x0,8
tick,0x7ff90cd6fb64,92268015,0,0x0,8
tick,0x7ff90cd6fb64,92284054,0,0x0,8
tick,0x7ff90cd6fb64,92300067,0,0x0,8
tick,0x7ff90cd6fb64,92316205,0,0x0,8
tick,0x7ff90cd6fb64,92331868,0,0x0,8
tick,0x7ff90cd6fb64,92346982,0,0x0,8
tick,0x7ff90cd6fb64,92362813,0,0x0,8
tick,0x7ff90cd6fb64,92377910,0,0x0,8
tick,0x7ff90cd6fb64,92393703,0,0x0,8
tick,0x7ff90cd6fb64,92409735,0,0x0,8
tick,0x7ff90cd6fb64,92425676,0,0x0,8
tick,0x7ff90cd6fb64,92441666,0,0x0,8
tick,0x7ff90cd6fb64,92457534,0,0x0,8
tick,0x7ff90cd6fb64,92472586,0,0x0,8
tick,0x7ff90cd6fb64,92488427,0,0x0,8
tick,0x7ff90cd6fb64,92504511,0,0x0,8
tick,0x7ff90cd6fb64,92519446,0,0x0,8
tick,0x7ff90cd6fb64,92535537,0,0x0,8
tick,0x7ff90cd6fb64,92551431,0,0x0,8
tick,0x7ff90cd6fb64,92567301,0,0x0,8
tick,0x7ff90cd6fb64,92582438,0,0x0,8
tick,0x7ff90cd6fb64,92598180,0,0x0,8
tick,0x7ff90cd6fb64,92614289,0,0x0,8
tick,0x7ff90cd6fb64,92630093,0,0x0,8
tick,0x7ff90cd6fb64,92646091,0,0x0,8
tick,0x7ff90cd6fb64,92661948,0,0x0,8
tick,0x7ff90cd6fb64,92677905,0,0x0,8
tick,0x7ff90cd6fb64,92693000,0,0x0,8
tick,0x7ff90cd6fb64,92708971,0,0x0,8
tick,0x7ff90cd6fb64,92724948,0,0x0,8
tick,0x7ff90cd6fb64,92739890,0,0x0,8
tick,0x7ff90cd6fb64,92755871,0,0x0,8
tick,0x7ff90cd6fb64,92771836,0,0x0,8
tick,0x7ff90cd6fb64,92787446,0,0x0,8
tick,0x7ff90cd6fb64,92803269,0,0x0,8
tick,0x7ff90cd6fb64,92819384,0,0x0,8
tick,0x7ff90cd6fb64,92835359,0,0x0,8
tick,0x7ff90cd6fb64,92851158,0,0x0,8
tick,0x7ff90cd6fb64,92867143,0,0x0,8
tick,0x7ff90cd6fb64,92882180,0,0x0,8
tick,0x7ff90cd6fb64,92898131,0,0x0,8
tick,0x7ff90cd6fb64,92913984,0,0x0,8
tick,0x7ff90cd6fb64,92930032,0,0x0,8
tick,0x7ff90cd6fb64,92945994,0,0x0,8
tick,0x7ff90cd6fb64,92961986,0,0x0,8
tick,0x7ff90cd6fb64,92977977,0,0x0,8
tick,0x7ff90cd6fb64,92993847,0,0x0,8
tick,0x7ff90cd6fb64,93009766,0,0x0,8
tick,0x7ff90cd6fb64,93025777,0,0x0,8
tick,0x7ff90cd6fb64,93041823,0,0x0,8
tick,0x7ff90cd6fb64,93057844,0,0x0,8
tick,0x7ff90cd6fb64,93072601,0,0x0,8
tick,0x7ff90cd6fb64,93087518,0,0x0,8
tick,0x7ff90cd6fb64,93103171,0,0x0,8
tick,0x7ff90cd6fb64,93119211,0,0x0,8
tick,0x7ff90cd6fb64,93135035,0,0x0,8
tick,0x7ff90cd6fb64,93151232,0,0x0,8
tick,0x7ff90cd6fb64,93166991,0,0x0,8
tick,0x7ff90cd6fb64,93183366,0,0x0,8
tick,0x7ff90cd6fb64,93199004,0,0x0,8
tick,0x7ff90cd6fb64,93214992,0,0x0,8
tick,0x7ff90cd6fb64,93230914,0,0x0,8
tick,0x7ff90cd6fb64,93246814,0,0x0,8
tick,0x7ff90cd6fb64,93262737,0,0x0,8
tick,0x7ff90cd6fb64,93278786,0,0x0,8
tick,0x7ff90cd6fb64,93294656,0,0x0,8
tick,0x7ff90cd6fb64,93310610,0,0x0,8
tick,0x7ff90cd6fb64,93326530,0,0x0,8
tick,0x7ff90cd6fb64,93341710,0,0x0,8
tick,0x7ff90cd6fb64,93357662,0,0x0,8
tick,0x7ff90cd6fb64,93372620,0,0x0,8
tick,0x7ff90cd6fb64,93387475,0,0x0,8
tick,0x7ff90cd6fb64,93403473,0,0x0,8
tick,0x7ff90cd6fb64,93419450,0,0x0,8
tick,0x7ff90cd6fb64,93435401,0,0x0,8
tick,0x7ff90cd6fb64,93451235,0,0x0,8
tick,0x7ff90cd6fb64,93467221,0,0x0,8
tick,0x7ff90cd6fb64,93483182,0,0x0,8
tick,0x7ff90cd6fb64,93499130,0,0x0,8
tick,0x7ff90cd6fb64,93515055,0,0x0,8
tick,0x7ff90cd6fb64,93531124,0,0x0,8
tick,0x7ff90cd6fb64,93547286,0,0x0,8
tick,0x7ff90cd6fb64,93563049,0,0x0,8
tick,0x7ff90cd6fb64,93578012,0,0x0,8
tick,0x7ff90cd6fb64,93593871,0,0x0,8
tick,0x7ff90cd6fb64,93609753,0,0x0,8
tick,0x7ff90cd6fb64,93625867,0,0x0,8
tick,0x7ff90cd6fb64,93641710,0,0x0,8
tick,0x7ff90cd6fb64,93657666,0,0x0,8
tick,0x7ff90cd6fb64,93673924,0,0x0,8
tick,0x7ff90cd6fb64,93689951,0,0x0,8
tick,0x7ff90cd6fb64,93704919,0,0x0,8
tick,0x7ff90cd6fb64,93719864,0,0x0,8
tick,0x7ff90cd6fb64,93735843,0,0x0,8
tick,0x7ff90cd6fb64,93750448,0,0x0,8
tick,0x7ff90cd6fb64,93766385,0,0x0,8
tick,0x7ff90cd6fb64,93782353,0,0x0,8
tick,0x7ff90cd6fb64,93798171,0,0x0,8
tick,0x7ff90cd6fb64,93814250,0,0x0,8
tick,0x7ff90cd6fb64,93830184,0,0x0,8
tick,0x7ff90cd6fb64,93846281,0,0x0,8
tick,0x7ff90cd6fb64,93862151,0,0x0,8
tick,0x7ff90cd6fb64,93878187,0,0x0,8
tick,0x7ff90cd6fb64,93894071,0,0x0,8
tick,0x7ff90cd6fb64,93910167,0,0x0,8
tick,0x7ff90cd6fb64,93926197,0,0x0,8
tick,0x7ff90cd6fb64,93942127,0,0x0,8
tick,0x7ff90cd6fb64,93957804,0,0x0,8
tick,0x7ff90cd6fb64,93973876,0,0x0,8
tick,0x7ff90cd6fb64,93989862,0,0x0,8
tick,0x7ff90cd6fb64,94005751,0,0x0,8
tick,0x7ff90cd6fb64,94020775,0,0x0,8
tick,0x7ff90cd6fb64,94036786,0,0x0,8
tick,0x7ff90cd6fb64,94051829,0,0x0,8
tick,0x7ff90cd6fb64,94067692,0,0x0,8
tick,0x7ff90cd6fb64,94083443,0,0x0,8
tick,0x7ff90cd6fb64,94099663,0,0x0,8
tick,0x7ff90cd6fb64,94115497,0,0x0,8
tick,0x7ff90cd6fb64,94131506,0,0x0,8
tick,0x7ff90cd6fb64,94147369,0,0x0,8
tick,0x7ff90cd6fb64,94163346,0,0x0,8
tick,0x7ff90cd6fb64,94178280,0,0x0,8
tick,0x7ff90cd6fb64,94194580,0,0x0,8
tick,0x7ff90cd6fb64,94210326,0,0x0,8
tick,0x7ff90cd6fb64,94226239,0,0x0,8
tick,0x7ff90cd6fb64,94242142,0,0x0,8
tick,0x7ff90cd6fb64,94257123,0,0x0,8
tick,0x7ff90cd6fb64,94272944,0,0x0,8
tick,0x7ff90cd6fb64,94288969,0,0x0,8
tick,0x7ff90cd6fb64,94303884,0,0x0,8
tick,0x7ff90cd6fb64,94319786,0,0x0,8
tick,0x7ff90cd6fb64,94335902,0,0x0,8
tick,0x7ff90cd6fb64,94351865,0,0x0,8
tick,0x7ff90cd6fb64,94367828,0,0x0,8
tick,0x7ff90cd6fb64,94384203,0,0x0,8
tick,0x7ff90cd6fb64,94399772,0,0x0,8
tick,0x7ff90cd6fb64,94415773,0,0x0,8
tick,0x7ff90cd6fb64,94431585,0,0x0,8
tick,0x7ff90cd6fb64,94447547,0,0x0,8
tick,0x7ff90cd6fb64,94463549,0,0x0,8
tick,0x7ff90cd6fb64,94479478,0,0x0,8
tick,0x7ff90cd6fb64,94495424,0,0x0,8
tick,0x7ff90cd6fb64,94511488,0,0x0,8
tick,0x7ff90cd6fb64,94527431,0,0x0,8
tick,0x7ff90cd6fb64,94543452,0,0x0,8
tick,0x7ff90cd6fb64,94559377,0,0x0,8
tick,0x7ff90cd6fb64,94575285,0,0x0,8
tick,0x7ff90cd6fb64,94591479,0,0x0,8
tick,0x7ff90cd6fb64,94607206,0,0x0,8
tick,0x7ff90cd6fb64,94623097,0,0x0,8
tick,0x7ff90cd6fb64,94639243,0,0x0,8
tick,0x7ff90cd6fb64,94654143,0,0x0,8
tick,0x7ff90cd6fb64,94669130,0,0x0,8
tick,0x7ff90cd6fb64,94684831,0,0x0,8
tick,0x7ff90cd6fb64,94701004,0,0x0,8
tick,0x7ff90cd6fb64,94717036,0,0x0,8
tick,0x7ff90cd6fb64,94732957,0,0x0,8
tick,0x7ff90cd6fb64,94748858,0,0x0,8
tick,0x7ff90cd6fb64,94764770,0,0x0,8
tick,0x7ff90cd6fb64,94780819,0,0x0,8
tick,0x7ff90cd6fb64,94796755,0,0x0,8
tick,0x7ff90cd6fb64,94811628,0,0x0,8
tick,0x7ff90cd6fb64,94827602,0,0x0,8
tick,0x7ff90cd6fb64,94843663,0,0x0,8
tick,0x7ff90cd6fb64,94859673,0,0x0,8
tick,0x7ff90cd6fb64,94874447,0,0x0,8
tick,0x7ff90cd6fb64,94890539,0,0x0,8
tick,0x7ff90cd6fb64,94906600,0,0x0,8
tick,0x7ff90cd6fb64,94922721,0,0x0,8
tick,0x7ff90cd6fb64,94937375,0,0x0,8
tick,0x7ff90cd6fb64,94953450,0,0x0,8
tick,0x7ff90cd6fb64,94969444,0,0x0,8
tick,0x7ff90cd6fb64,94985387,0,0x0,8
tick,0x7ff90cd6fb64,95001440,0,0x0,8
tick,0x7ff90cd6fb64,95017284,0,0x0,8
tick,0x7ff90cd6fb64,95033249,0,0x0,8
tick,0x7ff90cd6fb64,95049172,0,0x0,8
tick,0x7ff90cd6fb64,95065115,0,0x0,8
tick,0x7ff90cd6fb64,95081119,0,0x0,8
tick,0x7ff90cd6fb64,95097065,0,0x0,8
tick,0x7ff90cd6fb64,95112858,0,0x0,8
tick,0x7ff90cd6fb64,95128978,0,0x0,8
tick,0x7ff90cd6fb64,95144929,0,0x0,8
tick,0x7ff90cd6fb64,95159885,0,0x0,8
tick,0x7ff90cd6fb64,95175785,0,0x0,8
tick,0x7ff90cd6fb64,95191861,0,0x0,8
tick,0x7ff90cd6fb64,95207600,0,0x0,8
tick,0x7ff90cd6fb64,95223830,0,0x0,8
tick,0x7ff90cd6fb64,95238557,0,0x0,8
tick,0x7ff90cd6fb64,95253568,0,0x0,8
tick,0x7ff90cd6fb64,95269626,0,0x0,8
tick,0x7ff90cd6fb64,95285428,0,0x0,8
tick,0x7ff90cd6fb64,95301457,0,0x0,8
tick,0x7ff90cd6fb64,95316458,0,0x0,8
tick,0x7ff90cd6fb64,95332323,0,0x0,8
tick,0x7ff90cd6fb64,95347284,0,0x0,8
tick,0x7ff90cd6fb64,95363626,0,0x0,8
tick,0x7ff90cd6fb64,95379302,0,0x0,8
tick,0x7ff90cd6fb64,95395224,0,0x0,8
tick,0x7ff90cd6fb64,95411175,0,0x0,8
tick,0x7ff90cd6fb64,95427018,0,0x0,8
tick,0x7ff90cd6fb64,95443013,0,0x0,8
tick,0x7ff90cd6fb64,95459060,0,0x0,8
tick,0x7ff90cd6fb64,95475170,0,0x0,8
tick,0x7ff90cd6fb64,95491063,0,0x0,8
tick,0x7ff90cd6fb64,95505856,0,0x0,8
tick,0x7ff90cd6fb64,95521985,0,0x0,8
tick,0x7ff90cd6fb64,95536789,0,0x0,8
tick,0x7ff90cd6fb64,95552772,0,0x0,8
tick,0x7ff90cd6fb64,95568834,0,0x0,8
tick,0x7ff90cd6fb64,95584656,0,0x0,8
tick,0x7ff90cd6fb64,95600698,0,0x0,8
tick,0x7ff90cd6fb64,95616555,0,0x0,8
tick,0x7ff90cd6fb64,95632490,0,0x0,8
tick,0x7ff90cd6fb64,95648573,0,0x0,8
tick,0x7ff90cd6fb64,95664657,0,0x0,8
tick,0x7ff90cd6fb64,95680419,0,0x0,8
tick,0x7ff90cd6fb64,95696314,0,0x0,8
tick,0x7ff90cd6fb64,95712209,0,0x0,8
tick,0x7ff90cd6fb64,95728297,0,0x0,8
tick,0x7ff90cd6fb64,95744220,0,0x0,8
tick,0x7ff90cd6fb64,95760123,0,0x0,8
tick,0x7ff90cd6fb64,95776042,0,0x0,8
tick,0x7ff90cd6fb64,95792046,0,0x0,8
tick,0x7ff90cd6fb64,95808102,0,0x0,8
tick,0x7ff90cd6fb64,95823968,0,0x0,8
tick,0x7ff90cd6fb64,95840164,0,0x0,8
tick,0x7ff90cd6fb64,95855875,0,0x0,8
tick,0x7ff90cd6fb64,95872875,0,0x0,8
tick,0x7ff90cd6fb64,95887841,0,0x0,8
tick,0x7ff90cd6fb64,95903818,0,0x0,8
tick,0x7ff90cd6fb64,95919780,0,0x0,8
tick,0x7ff90cd6fb64,95935716,0,0x0,8
tick,0x7ff90cd6fb64,95951638,0,0x0,8
tick,0x7ff90cd6fb64,95967651,0,0x0,8
tick,0x7ff90cd6fb64,95983754,0,0x0,8
tick,0x7ff90cd6fb64,95999858,0,0x0,8
tick,0x7ff90cd6fb64,96015434,0,0x0,8
tick,0x7ff90cd6fb64,96031436,0,0x0,8
tick,0x7ff90cd6fb64,96047459,0,0x0,8
tick,0x7ff90cd6fb64,96062778,0,0x0,8
tick,0x7ff90cd6fb64,96078256,0,0x0,8
tick,0x7ff90cd6fb64,96094271,0,0x0,8
tick,0x7ff90cd6fb64,96110204,0,0x0,8
tick,0x7ff90cd6fb64,96126203,0,0x0,8
tick,0x7ff90cd6fb64,96142182,0,0x0,8
tick,0x7ff90cd6fb64,96158047,0,0x0,8
tick,0x7ff90cd6fb64,96172993,0,0x0,8
tick,0x7ff90cd6fb64,96189111,0,0x0,8
tick,0x7ff90cd6fb64,96205130,0,0x0,8
tick,0x7ff90cd6fb64,96220048,0,0x0,8
tick,0x7ff90cd6fb64,96234911,0,0x0,8
tick,0x7ff90cd6fb64,96251034,0,0x0,8
tick,0x7ff90cd6fb64,96265709,0,0x0,8
tick,0x7ff90cd6fb64,96281775,0,0x0,8
tick,0x7ff90cd6fb64,96297646,0,0x0,8
tick,0x7ff90cd6fb64,96313693,0,0x0,8
tick,0x7ff90cd6fb64,96329588,0,0x0,8
tick,0x7ff90cd6fb64,96345726,0,0x0,8
tick,0x7ff90cd6fb64,96361561,0,0x0,8
tick,0x7ff90cd6fb64,96377561,0,0x0,8
tick,0x7ff90cd6fb64,96393614,0,0x0,8
tick,0x7ff90cd6fb64,96409036,0,0x0,8
tick,0x7ff90cd6fb64,96425177,0,0x0,8
tick,0x7ff90cd6fb64,96440947,0,0x0,8
tick,0x7ff90cd6fb64,96456019,0,0x0,8
tick,0x7ff90cd6fb64,96470987,0,0x0,8
tick,0x7ff90cd6fb64,96485927,0,0x0,8
tick,0x7ff90cd6fb64,96501973,0,0x0,8
tick,0x7ff90cd6fb64,96517734,0,0x0,8
tick,0x7ff90cd6fb64,96533823,0,0x0,8
tick,0x7ff90cd6fb64,96549685,0,0x0,8
tick,0x7ff90cd6fb64,96565571,0,0x0,8
tick,0x7ff90cd6fb64,96581500,0,0x0,8
tick,0x7ff90cd6fb64,96597539,0,0x0,8
tick,0x7ff90cd6fb64,96613518,0,0x0,8
tick,0x7ff90cd6fb64,96629511,0,0x0,8
tick,0x7ff90cd6fb64,96645432,0,0x0,8
tick,0x7ff90cd6fb64,96661279,0,0x0,8
tick,0x7ff90cd6fb64,96677702,0,0x0,8
tick,0x7ff90cd6fb64,96693474,0,0x0,8
tick,0x7ff90cd6fb64,96707311,0,0x0,8
tick,0x7ff90cd6fb64,96722146,0,0x0,8
tick,0x7ff90cd6fb64,96737132,0,0x0,8
tick,0x7ff90cd6fb64,96753026,0,0x0,8
tick,0x7ff90cd6fb64,96769011,0,0x0,8
tick,0x7ff90cd6fb64,96784962,0,0x0,8
tick,0x7ff90cd6fb64,96800928,0,0x0,8
tick,0x7ff90cd6fb64,96816819,0,0x0,8
tick,0x7ff90cd6fb64,96832856,0,0x0,8
tick,0x7ff90cd6fb64,96847788,0,0x0,8
tick,0x7ff90cd6fb64,96863960,0,0x0,8
tick,0x7ff90cd6fb64,96879720,0,0x0,8
tick,0x7ff90cd6fb64,96895745,0,0x0,8
tick,0x7ff90cd6fb64,96911626,0,0x0,8
tick,0x7ff90cd6fb64,96927638,0,0x0,8
tick,0x7ff90cd6fb64,96943786,0,0x0,8
tick,0x7ff90cd6fb64,96959605,0,0x0,8
tick,0x7ff90cd6fb64,96975465,0,0x0,8
tick,0x7ff90cd6fb64,96991427,0,0x0,8
tick,0x7ff90cd6fb64,97007374,0,0x0,8
tick,0x7ff90cd6fb64,97023371,0,0x0,8
tick,0x7ff90cd6fb64,97039378,0,0x0,8
tick,0x7ff90cd6fb64,97054265,0,0x0,8
tick,0x7ff90cd6fb64,97069267,0,0x0,8
tick,0x7ff90cd6fb64,97085149,0,0x0,8
tick,0x7ff90cd6fb64,97101150,0,0x0,8
tick,0x7ff90cd6fb64,97117287,0,0x0,8
tick,0x7ff90cd6fb64,97132333,0,0x0,8
tick,0x7ff90cd6fb64,97148007,0,0x0,8
tick,0x7ff90cd6fb64,97163943,0,0x0,8
tick,0x7ff90cd6fb64,97179914,0,0x0,8
tick,0x7ff90cd6fb64,97195935,0,0x0,8
tick,0x7ff90cd6fb64,97211883,0,0x0,8
tick,0x7ff90cd6fb64,97227869,0,0x0,8
tick,0x7ff90cd6fb64,97243698,0,0x0,8
tick,0x7ff90cd6fb64,97259805,0,0x0,8
tick,0x7ff90cd6fb64,97275946,0,0x0,8
tick,0x7ff90cd6fb64,97291994,0,0x0,8
tick,0x7ff90cd6fb64,97307865,0,0x0,8
tick,0x7ff90cd6fb64,97323495,0,0x0,8
tick,0x7ff90cd6fb64,97339488,0,0x0,8
tick,0x7ff90cd6fb64,97355465,0,0x0,8
tick,0x7ff90cd6fb64,97370410,0,0x0,8
tick,0x7ff90cd6fb64,97386375,0,0x0,8
tick,0x7ff90cd6fb64,97402490,0,0x0,8
tick,0x7ff90cd6fb64,97418265,0,0x0,8
tick,0x7ff90cd6fb64,97434439,0,0x0,8
tick,0x7ff90cd6fb64,97450284,0,0x0,8
tick,0x7ff90cd6fb64,97466268,0,0x0,8
tick,0x7ff90cd6fb64,97482284,0,0x0,8
tick,0x7ff90cd6fb64,97498119,0,0x0,8
tick,0x7ff90cd6fb64,97512959,0,0x0,8
tick,0x7ff90cd6fb64,97529030,0,0x0,8
tick,0x7ff90cd6fb64,97545002,0,0x0,8
tick,0x7ff90cd6fb64,97561037,0,0x0,8
tick,0x7ff90cd6fb64,97576794,0,0x0,8
tick,0x7ff90cd6fb64,97592888,0,0x0,8
tick,0x7ff90cd6fb64,97608854,0,0x0,8
tick,0x7ff90cd6fb64,97624825,0,0x0,8
tick,0x7ff90cd6fb64,97640578,0,0x0,8
tick,0x7ff90cd6fb64,97656483,0,0x0,8
tick,0x7ff90cd6fb64,97671678,0,0x0,8
tick,0x7ff90cd6fb64,97686820,0,0x0,8
tick,0x7ff90cd6fb64,97702603,0,0x0,8
tick,0x7ff90cd6fb64,97718411,0,0x0,8
tick,0x7ff90cd6fb64,97734249,0,0x0,8
tick,0x7ff90cd6fb64,97750233,0,0x0,8
tick,0x7ff90cd6fb64,97766207,0,0x0,8
tick,0x7ff90cd6fb64,97782175,0,0x0,8
tick,0x7ff90cd6fb64,97798123,0,0x0,8
tick,0x7ff90cd6fb64,97814094,0,0x0,8
tick,0x7ff90cd6fb64,97830138,0,0x0,8
tick,0x7ff90cd6fb64,97846280,0,0x0,8
tick,0x7ff90cd6fb64,97862102,0,0x0,8
tick,0x7ff90cd6fb64,97877999,0,0x0,8
tick,0x7ff90cd6fb64,97894074,0,0x0,8
tick,0x7ff90cd6fb64,97909961,0,0x0,8
tick,0x7ff90cd6fb64,97926016,0,0x0,8
tick,0x7ff90cd6fb64,97942040,0,0x0,8
tick,0x7ff90cd6fb64,97957817,0,0x0,8
tick,0x7ff90cd6fb64,97972941,0,0x0,8
tick,0x7ff90cd6fb64,97988874,0,0x0,8
tick,0x7ff90cd6fb64,98005079,0,0x0,8
tick,0x7ff90cd6fb64,98019866,0,0x0,8
tick,0x7ff90cd6fb64,98035855,0,0x0,8
tick,0x7ff90cd6fb64,98050732,0,0x0,8
tick,0x7ff90cd6fb64,98066519,0,0x0,8
tick,0x7ff90cd6fb64,98082694,0,0x0,8
tick,0x7ff90cd6fb64,98098481,0,0x0,8
tick,0x7ff90cd6fb64,98114387,0,0x0,8
tick,0x7ff90cd6fb64,98130505,0,0x0,8
tick,0x7ff90cd6fb64,98146451,0,0x0,8
tick,0x7ff90cd6fb64,98162314,0,0x0,8
tick,0x7ff90cd6fb64,98177231,0,0x0,8
tick,0x7ff90cd6fb64,98193326,0,0x0,8
tick,0x7ff90cd6fb64,98209194,0,0x0,8
tick,0x7ff90cd6fb64,98224141,0,0x0,8
tick,0x7ff90cd6fb64,98240358,0,0x0,8
tick,0x7ff90cd6fb64,98256063,0,0x0,8
tick,0x7ff90cd6fb64,98271013,0,0x0,8
tick,0x7ff90cd6fb64,98286061,0,0x0,8
tick,0x7ff90cd6fb64,98302148,0,0x0,8
tick,0x7ff90cd6fb64,98317860,0,0x0,8
tick,0x7ff90cd6fb64,98333878,0,0x0,8
tick,0x7ff90cd6fb64,98349932,0,0x0,8
tick,0x7ff90cd6fb64,98365829,0,0x0,8
tick,0x7ff90cd6fb64,98381710,0,0x0,8
tick,0x7ff90cd6fb64,98397823,0,0x0,8
tick,0x7ff90cd6fb64,98413712,0,0x0,8
tick,0x7ff90cd6fb64,98429664,0,0x0,8
tick,0x7ff90cd6fb64,98444555,0,0x0,8
tick,0x7ff90cd6fb64,98460445,0,0x0,8
tick,0x7ff90cd6fb64,98476505,0,0x0,8
tick,0x7ff90cd6fb64,98492343,0,0x0,8
tick,0x7ff90cd6fb64,98508306,0,0x0,8
tick,0x7ff90cd6fb64,98524489,0,0x0,8
tick,0x7ff90cd6fb64,98540201,0,0x0,8
tick,0x7ff90cd6fb64,98556269,0,0x0,8
tick,0x7ff90cd6fb64,98572215,0,0x0,8
tick,0x7ff90cd6fb64,98588145,0,0x0,8
tick,0x7ff90cd6fb64,98604190,0,0x0,8
tick,0x7ff90cd6fb64,98620105,0,0x0,8
tick,0x7ff90cd6fb64,98636090,0,0x0,8
tick,0x7ff90cd6fb64,98651966,0,0x0,8
tick,0x7ff90cd6fb64,98667907,0,0x0,8
tick,0x7ff90cd6fb64,98683869,0,0x0,8
tick,0x7ff90cd6fb64,98699881,0,0x0,8
tick,0x7ff90cd6fb64,98714775,0,0x0,8
tick,0x7ff90cd6fb64,98730706,0,0x0,8
tick,0x7ff90cd6fb64,98745673,0,0x0,8
tick,0x7ff90cd6fb64,98761680,0,0x0,8
tick,0x7ff90cd6fb64,98777738,0,0x0,8
tick,0x7ff90cd6fb64,98793588,0,0x0,8
tick,0x7ff90cd6fb64,98809550,0,0x0,8
tick,0x7ff90cd6fb64,98825562,0,0x0,8
tick,0x7ff90cd6fb64,98841467,0,0x0,8
tick,0x7ff90cd6fb64,98856381,0,0x0,8
tick,0x7ff90cd6fb64,98872307,0,0x0,8
tick,0x7ff90cd6fb64,98888395,0,0x0,8
tick,0x7ff90cd6fb64,98903192,0,0x0,8
tick,0x7ff90cd6fb64,98919347,0,0x0,8
tick,0x7ff90cd6fb64,98935274,0,0x0,8
tick,0x7ff90cd6fb64,98951199,0,0x0,8
tick,0x7ff90cd6fb64,98967262,0,0x0,8
tick,0x7ff90cd6fb64,98983085,0,0x0,8
tick,0x7ff90cd6fb64,98999054,0,0x0,8
tick,0x7ff90cd6fb64,99015007,0,0x0,8
tick,0x7ff90cd6fb64,99030955,0,0x0,8
tick,0x7ff90cd6fb64,99046955,0,0x0,8
tick,0x7ff90cd6fb64,99062923,0,0x0,8
tick,0x7ff90cd6fb64,99077941,0,0x0,8
tick,0x7ff90cd6fb64,99093801,0,0x0,8
tick,0x7ff90cd6fb64,99109790,0,0x0,8
tick,0x7ff90cd6fb64,99125724,0,0x0,8
tick,0x7ff90cd6fb64,99140799,0,0x0,8
tick,0x7ff90cd6fb64,99155845,0,0x0,8
tick,0x7ff90cd6fb64,99171727,0,0x0,8
tick,0x7ff90cd6fb64,99186557,0,0x0,8
tick,0x7ff90cd6fb64,99202488,0,0x0,8
tick,0x7ff90cd6fb64,99218409,0,0x0,8
tick,0x7ff90cd6fb64,99234039,0,0x0,8
tick,0x7ff90cd6fb64,99250182,0,0x0,8
tick,0x7ff90cd6fb64,99266010,0,0x0,8
tick,0x7ff90cd6fb64,99281942,0,0x0,8
tick,0x7ff90cd6fb64,99297932,0,0x0,8
tick,0x7ff90cd6fb64,99314012,0,0x0,8
tick,0x7ff90cd6fb64,99329515,0,0x0,8
tick,0x7ff90cd6fb64,99345672,0,0x0,8
tick,0x7ff90cd6fb64,99361409,0,0x0,8
tick,0x7ff90cd6fb64,99376310,0,0x0,8
tick,0x7ff90cd6fb64,99392263,0,0x0,8
tick,0x7ff90cd6fb64,99408828,0,0x0,8
tick,0x7ff90cd6fb64,99424205,0,0x0,8
tick,0x7ff90cd6fb64,99439176,0,0x0,8
tick,0x7ff90cd6fb64,99455153,0,0x0,8
tick,0x7ff90cd6fb64,99470998,0,0x0,8
tick,0x7ff90cd6fb64,99486981,0,0x0,8
tick,0x7ff90cd6fb64,99503013,0,0x0,8
tick,0x7ff90cd6fb64,99518937,0,0x0,8
tick,0x7ff90cd6fb64,99533886,0,0x0,8
tick,0x7ff90cd6fb64,99549919,0,0x0,8
tick,0x7ff90cd6fb64,99565854,0,0x0,8
tick,0x7ff90cd6fb64,99581755,0,0x0,8
tick,0x7ff90cd6fb64,99597797,0,0x0,8
tick,0x7ff90cd6fb64,99612672,0,0x0,8
tick,0x7ff90cd6fb64,99628630,0,0x0,8
tick,0x7ff90cd6fb64,99644617,0,0x0,8
tick,0x7ff90cd6fb64,99660575,0,0x0,8
tick,0x7ff90cd6fb64,99676550,0,0x0,8
tick,0x7ff90cd6fb64,99692479,0,0x0,8
tick,0x7ff90cd6fb64,99708425,0,0x0,8
tick,0x7ff90cd6fb64,99724450,0,0x0,8
tick,0x7ff90cd6fb64,99739410,0,0x0,8
tick,0x7ff90cd6fb64,99755309,0,0x0,8
tick,0x7ff90cd6fb64,99771272,0,0x0,8
tick,0x7ff90cd6fb64,99787196,0,0x0,8
tick,0x7ff90cd6fb64,99803229,0,0x0,8
tick,0x7ff90cd6fb64,99819147,0,0x0,8
tick,0x7ff90cd6fb64,99835117,0,0x0,8
tick,0x7ff90cd6fb64,99851221,0,0x0,8
tick,0x7ff90cd6fb64,99866998,0,0x0,8
tick,0x7ff90cd6fb64,99883014,0,0x0,8
tick,0x7ff90cd6fb64,99898927,0,0x0,8
tick,0x7ff90cd6fb64,99914979,0,0x0,8
tick,0x7ff90cd6fb64,99930925,0,0x0,8
tick,0x7ff90cd6fb64,99945758,0,0x0,8
tick,0x7ff90cd6fb64,99961750,0,0x0,8
tick,0x7ff90cd6fb64,99977871,0,0x0,8
tick,0x7ff90cd6fb64,99993708,0,0x0,8
tick,0x7ff90cd6fb64,100009648,0,0x0,8
tick,0x7ff90cd6fb64,100025557,0,0x0,8
tick,0x7ff90cd6fb64,100041544,0,0x0,8
tick,0x7ff90cd6fb64,100057473,0,0x0,8
tick,0x7ff90cd6fb64,100072564,0,0x0,8
tick,0x7ff90cd6fb64,100088400,0,0x0,8
tick,0x7ff90cd6fb64,100103447,0,0x0,8
tick,0x7ff90cd6fb64,100119318,0,0x0,8
tick,0x7ff90cd6fb64,100135318,0,0x0,8
tick,0x7ff90cd6fb64,100151265,0,0x0,8
tick,0x7ff90cd6fb64,100167411,0,0x0,8
tick,0x7ff90cd6fb64,100183338,0,0x0,8
tick,0x7ff90cd6fb64,100199141,0,0x0,8
tick,0x7ff90cd6fb64,100215234,0,0x0,8
tick,0x7ff90cd6fb64,100230114,0,0x0,8
tick,0x7ff90cd6fb64,100246049,0,0x0,8
tick,0x7ff90cd6fb64,100261221,0,0x0,8
tick,0x7ff90cd6fb64,100277148,0,0x0,8
tick,0x7ff90cd6fb64,100292836,0,0x0,8
tick,0x7ff90cd6fb64,100307948,0,0x0,8
tick,0x7ff90cd6fb64,100323845,0,0x0,8
tick,0x7ff90cd6fb64,100339513,0,0x0,8
tick,0x7ff90cd6fb64,100355583,0,0x0,8
tick,0x7ff90cd6fb64,100371377,0,0x0,8
tick,0x7ff90cd6fb64,100388352,0,0x0,8
tick,0x7ff90cd6fb64,100413460,0,0x0,8
tick,0x7ff90cd6fb64,100423817,0,0x0,8
tick,0x7ff90cd6fb64,100436433,0,0x0,8
tick,0x7ff90cd6fb64,100453917,0,0x0,8
tick,0x7ff90cd6fb64,100468241,0,0x0,8
tick,0x7ff90cd6fb64,100482934,0,0x0,8
tick,0x7ff90cd6fb64,100505623,0,0x0,8
tick,0x7ff90cd6fb64,100526309,0,0x0,8
tick,0x7ff90cd6fb64,100537177,0,0x0,8
tick,0x7ff90cd6fb64,100551336,0,0x0,8
tick,0x7ff90cd6fb64,100568115,0,0x0,8
tick,0x7ff90cd6fb64,100586573,0,0x0,8
tick,0x7ff90cd6fb64,100618130,0,0x0,8
tick,0x7ff90cd6fb64,100627621,0,0x0,8
tick,0x7ff90cd6fb64,100642454,0,0x0,8
tick,0x7ff90cd6fb64,100658250,0,0x0,8
tick,0x7ff90cd6fb64,100672976,0,0x0,8
tick,0x7ff90cd6fb64,100686284,0,0x0,8
tick,0x7ff90cd6fb64,100701406,0,0x0,8
tick,0x7ff90cd6fb64,100722799,0,0x0,8
tick,0x7ff90cd6fb64,100756843,0,0x0,8
tick,0x7ff90cd6fb64,100769995,0,0x0,8
tick,0x7ff90cd6fb64,100788643,0,0x0,8
tick,0x7ff90cd6fb64,100797406,0,0x0,8
tick,0x7ff90cd6fb64,100832658,0,0x0,8
tick,0x7ff90cd6fb64,100847964,0,0x0,8
tick,0x7ff90cd6fb64,100860092,0,0x0,8
tick,0x7ff90cd6fb64,100875177,0,0x0,8
tick,0x7ff90cd6fb64,100891284,0,0x0,8
tick,0x7ff90cd6fb64,100907525,0,0x0,8
tick,0x7ff90cd6fb64,100923675,0,0x0,8
tick,0x7ff90cd6fb64,100940181,0,0x0,8
tick,0x7ff90cd6fb64,100955481,0,0x0,8
tick,0x7ff90cd6fb64,100970558,0,0x0,8
tick,0x7ff90cd6fb64,100986517,0,0x0,8
tick,0x7ff90cd6fb64,101005438,0,0x0,8
tick,0x7ff90cd6fb64,101016875,0,0x0,8
tick,0x7ff90cd6fb64,101032278,0,0x0,8
tick,0x7ff90cd6fb64,101048019,0,0x0,8
tick,0x7ff90cd6fb64,101064069,0,0x0,8
tick,0x7ff90cd6fb64,101080065,0,0x0,8
tick,0x7ff90cd6fb64,101096010,0,0x0,8
tick,0x7ff90cd6fb64,101111995,0,0x0,8
tick,0x7ff90cd6fb64,101127438,0,0x0,8
tick,0x7ff90cd6fb64,101143335,0,0x0,8
tick,0x7ff90cd6fb64,101158544,0,0x0,8
tick,0x7ff90cd6fb64,101174499,0,0x0,8
tick,0x7ff90cd6fb64,101190263,0,0x0,8
tick,0x7ff90cd6fb64,101205345,0,0x0,8
tick,0x7ff90cd6fb64,101220302,0,0x0,8
tick,0x7ff90cd6fb64,101235372,0,0x0,8
tick,0x7ff90cd6fb64,101253032,0,0x0,8
tick,0x7ff90cd6fb64,101269887,0,0x0,8
tick,0x7ff90cd6fb64,101284200,0,0x0,8
tick,0x7ff90cd6fb64,101301276,0,0x0,8
tick,0x7ff90cd6fb64,101314264,0,0x0,8
tick,0x7ff90cd6fb64,101329853,0,0x0,8
tick,0x7ff90cd6fb64,101345447,0,0x0,8
tick,0x7ff90cd6fb64,101360300,0,0x0,8
tick,0x7ff90cd6fb64,101375871,0,0x0,8
tick,0x7ff90cd6fb64,101392231,0,0x0,8
tick,0x7ff90cd6fb64,101408287,0,0x0,8
tick,0x7ff90cd6fb64,101424186,0,0x0,8
tick,0x7ff90cd6fb64,101438606,0,0x0,8
tick,0x7ff90cd6fb64,101453765,0,0x0,8
tick,0x7ff90cd6fb64,101470358,0,0x0,8
tick,0x7ff90cd6fb64,101485057,0,0x0,8
tick,0x7ff90cd6fb64,101500746,0,0x0,8
tick,0x7ff90cd6fb64,101515723,0,0x0,8
tick,0x7ff90cd6fb64,101531928,0,0x0,8
tick,0x7ff90cd6fb64,101547061,0,0x0,8
tick,0x7ff90cd6fb64,101562923,0,0x0,8
tick,0x7ff90cd6fb64,101577822,0,0x0,8
tick,0x7ff90cd6fb64,101593010,0,0x0,8
tick,0x7ff90cd6fb64,101608160,0,0x0,8
tick,0x7ff90cd6fb64,101623475,0,0x0,8
tick,0x7ff90cd6fb64,101638225,0,0x0,8
tick,0x7ff90cd6fb64,101653559,0,0x0,8
tick,0x7ff90cd6fb64,101670739,0,0x0,8
tick,0x7ff90cd6fb64,101685332,0,0x0,8
tick,0x7ff90cd6fb64,101702539,0,0x0,8
tick,0x7ff90cd6fb64,101719717,0,0x0,8
tick,0x7ff90cd6fb64,101732600,0,0x0,8
tick,0x7ff90cd6fb64,101747367,0,0x0,8
tick,0x7ff90cd6fb64,101764324,0,0x0,8
tick,0x7ff90cd6fb64,101779383,0,0x0,8
tick,0x7ff90cd6fb64,101794926,0,0x0,8
tick,0x7ff90cd6fb64,101809680,0,0x0,8
tick,0x7ff90cd6fb64,101825348,0,0x0,8
tick,0x7ff90cd6fb64,101841080,0,0x0,8
tick,0x7ff90cd6fb64,101856416,0,0x0,8
tick,0x7ff90cd6fb64,101871741,0,0x0,8
tick,0x7ff90cd6fb64,101887087,0,0x0,8
tick,0x7ff90cd6fb64,101903259,0,0x0,8
tick,0x7ff90cd6fb64,101923574,0,0x0,8
tick,0x7ff90cd6fb64,101935003,0,0x0,8
tick,0x7ff90cd6fb64,101975501,0,0x0,8
tick,0x7ff90cd6fb64,101995729,0,0x0,8
tick,0x7ff90cd6fb64,102011997,0,0x0,8
tick,0x7ff90cd6fb64,102026651,0,0x0,8
tick,0x7ff90cd6fb64,102042214,0,0x0,8
tick,0x7ff90cd6fb64,102056621,0,0x0,8
tick,0x7ff90cd6fb64,102073780,0,0x0,8
tick,0x7ff90cd6fb64,102108944,0,0x0,8
tick,0x7ff90cd6fb64,102119677,0,0x0,8
tick,0x7ff90cd6fb64,102135792,0,0x0,8
tick,0x7ff90cd6fb64,102150344,0,0x0,8
tick,0x7ff90cd6fb64,102167898,0,0x0,8
tick,0x7ff90cd6fb64,102182160,0,0x0,8
tick,0x7ff90cd6fb64,102197196,0,0x0,8
tick,0x7ff90cd6fb64,102212186,0,0x0,8
tick,0x7ff90cd6fb64,102227011,0,0x0,8
tick,0x7ff90cd6fb64,102243223,0,0x0,8
tick,0x7ff90cd6fb64,102259238,0,0x0,8
tick,0x7ff90cd6fb64,102274963,0,0x0,8
tick,0x7ff90cd6fb64,102289843,0,0x0,8
tick,0x7ff90cd6fb64,102304917,0,0x0,8
tick,0x7ff90cd6fb64,102321063,0,0x0,8
tick,0x7ff90cd6fb64,102339200,0,0x0,8
tick,0x7ff90cd6fb64,102352085,0,0x0,8
tick,0x7ff90cd6fb64,102367685,0,0x0,8
tick,0x7ff90cd6fb64,102383547,0,0x0,8
tick,0x7ff90cd6fb64,102399549,0,0x0,8
tick,0x7ff90cd6fb64,102414611,0,0x0,8
tick,0x7ff90cd6fb64,102430841,0,0x0,8
tick,0x7ff90cd6fb64,102446629,0,0x0,8
tick,0x7ff90cd6fb64,102462406,0,0x0,8
tick,0x7ff90cd6fb64,102478611,0,0x0,8
tick,0x7ff90cd6fb64,102494448,0,0x0,8
tick,0x7ff90cd6fb64,102509362,0,0x0,8
tick,0x7ff90cd6fb64,102524401,0,0x0,8
tick,0x7ff90cd6fb64,102540219,0,0x0,8
tick,0x7ff90cd6fb64,102555138,0,0x0,8
tick,0x7ff90cd6fb64,102571328,0,0x0,8
tick,0x7ff90cd6fb64,102585988,0,0x0,8
tick,0x7ff90cd6fb64,102601221,0,0x0,8
tick,0x7ff90cd6fb64,102617364,0,0x0,8
tick,0x7ff90cd6fb64,102631907,0,0x0,8
tick,0x7ff90cd6fb64,102646894,0,0x0,8
tick,0x7ff90cd6fb64,102663586,0,0x0,8
tick,0x7ff90cd6fb64,102678871,0,0x0,8
tick,0x7ff90cd6fb64,102694976,0,0x0,8
tick,0x7ff90cd6fb64,102710258,0,0x0,8
tick,0x7ff90cd6fb64,102725652,0,0x0,8
tick,0x7ff90cd6fb64,102741711,0,0x0,8
tick,0x7ff90cd6fb64,102758260,0,0x0,8
tick,0x7ff90cd6fb64,102773079,0,0x0,8
tick,0x7ff90cd6fb64,102789096,0,0x0,8
tick,0x7ff90cd6fb64,102804832,0,0x0,8
tick,0x7ff90cd6fb64,102819666,0,0x0,8
tick,0x7ff90cd6fb64,102836537,0,0x0,8
tick,0x7ff90cd6fb64,102851154,0,0x0,8
tick,0x7ff90cd6fb64,102865409,0,0x0,8
tick,0x7ff90cd6fb64,102881323,0,0x0,8
tick,0x7ff90cd6fb64,102896700,0,0x0,8
tick,0x7ff90cd6fb64,102912190,0,0x0,8
tick,0x7ff90cd6fb64,102927238,0,0x0,8
tick,0x7ff90cd6fb64,102942461,0,0x0,8
tick,0x7ff90cd6fb64,102958703,0,0x0,8
tick,0x7ff90cd6fb64,102974534,0,0x0,8
tick,0x7ff90cd6fb64,102989572,0,0x0,8
tick,0x7ff90cd6fb64,103004430,0,0x0,8
tick,0x7ff90cd6fb64,103020570,0,0x0,8
tick,0x7ff90cd6fb64,103036597,0,0x0,8
tick,0x7ff90cd6fb64,103051219,0,0x0,8
tick,0x7ff90cd6fb64,103067064,0,0x0,8
tick,0x7ff90cd6fb64,103083482,0,0x0,8
tick,0x7ff90cd6fb64,103099170,0,0x0,8
tick,0x7ff90cd6fb64,103115454,0,0x0,8
tick,0x7ff90cd6fb64,103130891,0,0x0,8
tick,0x7ff90cd6fb64,103170622,0,0x0,8
tick,0x7ff90cd6fb64,103178266,0,0x0,8
tick,0x7ff90cd6fb64,103195839,0,0x0,8
tick,0x7ff90cd6fb64,103208015,0,0x0,8
tick,0x7ff90cd6fb64,103223407,0,0x0,8
tick,0x7ff90cd6fb64,103238018,0,0x0,8
tick,0x7ff90cd6fb64,103253961,0,0x0,8
tick,0x7ff90cd6fb64,103269958,0,0x0,8
tick,0x7ff90cd6fb64,103284856,0,0x0,8
tick,0x7ff90cd6fb64,103299550,0,0x0,8
tick,0x7ff90cd6fb64,103314563,0,0x0,8
tick,0x7ff90cd6fb64,103329864,0,0x0,8
tick,0x7ff90cd6fb64,103345297,0,0x0,8
tick,0x7ff90cd6fb64,103361359,0,0x0,8
tick,0x7ff90cd6fb64,103377262,0,0x0,8
tick,0x7ff90cd6fb64,103393193,0,0x0,8
tick,0x7ff90cd6fb64,103409203,0,0x0,8
tick,0x7ff90cd6fb64,103424435,0,0x0,8
tick,0x7ff90cd6fb64,103440764,0,0x0,8
tick,0x7ff90cd6fb64,103455363,0,0x0,8
tick,0x7ff90cd6fb64,103471136,0,0x0,8
tick,0x7ff90cd6fb64,103485108,0,0x0,8
tick,0x7ff90cd6fb64,103501337,0,0x0,8
tick,0x7ff90cd6fb64,103516898,0,0x0,8
tick,0x7ff90cd6fb64,103532892,0,0x0,8
tick,0x7ff90cd6fb64,103548301,0,0x0,8
tick,0x7ff90cd6fb64,103563955,0,0x0,8
tick,0x7ff90cd6fb64,103580136,0,0x0,8
tick,0x7ff90cd6fb64,103595664,0,0x0,8
tick,0x7ff90cd6fb64,103610860,0,0x0,8
tick,0x7ff90cd6fb64,103626566,0,0x0,8
tick,0x7ff90cd6fb64,103641745,0,0x0,8
tick,0x7ff90cd6fb64,103656492,0,0x0,8
tick,0x7ff90cd6fb64,103672599,0,0x0,8
tick,0x7ff90cd6fb64,103687642,0,0x0,8
tick,0x7ff90cd6fb64,103703447,0,0x0,8
tick,0x7ff90cd6fb64,103719645,0,0x0,8
tick,0x7ff90cd6fb64,103735341,0,0x0,8
tick,0x7ff90cd6fb64,103751532,0,0x0,8
tick,0x7ff90cd6fb64,103767421,0,0x0,8
tick,0x7ff90cd6fb64,103784147,0,0x0,8
tick,0x7ff90cd6fb64,103799115,0,0x0,8
tick,0x7ff90cd6fb64,103814308,0,0x0,8
tick,0x7ff90cd6fb64,103830612,0,0x0,8
tick,0x7ff90cd6fb64,103845998,0,0x0,8
tick,0x7ff90cd6fb64,103862033,0,0x0,8
tick,0x7ff90cd6fb64,103878363,0,0x0,8
tick,0x7ff90cd6fb64,103893181,0,0x0,8
tick,0x7ff90cd6fb64,103907878,0,0x0,8
tick,0x7ff90cd6fb64,103922945,0,0x0,8
tick,0x7ff90cd6fb64,103937836,0,0x0,8
tick,0x7ff90cd6fb64,103952729,0,0x0,8
tick,0x7ff90cd6fb64,103968681,0,0x0,8
tick,0x7ff90cd6fb64,103984646,0,0x0,8
tick,0x7ff90cd6fb64,104000700,0,0x0,8
tick,0x7ff90cd6fb64,104016710,0,0x0,8
tick,0x7ff90cd6fb64,104032532,0,0x0,8
tick,0x7ff90cd6fb64,104047229,0,0x0,8
tick,0x7ff90cd6fb64,104063183,0,0x0,8
tick,0x7ff90cd6fb64,104078103,0,0x0,8
tick,0x7ff90cd6fb64,104094152,0,0x0,8
tick,0x7ff90cd6fb64,104110070,0,0x0,8
tick,0x7ff90cd6fb64,104125952,0,0x0,8
tick,0x7ff90cd6fb64,104141961,0,0x0,8
tick,0x7ff90cd6fb64,104158002,0,0x0,8
tick,0x7ff90cd6fb64,104173861,0,0x0,8
tick,0x7ff90cd6fb64,104189858,0,0x0,8
tick,0x7ff90cd6fb64,104205816,0,0x0,8
tick,0x7ff90cd6fb64,104221733,0,0x0,8
tick,0x7ff90cd6fb64,104237496,0,0x0,8
tick,0x7ff90cd6fb64,104253574,0,0x0,8
tick,0x7ff90cd6fb64,104268490,0,0x0,8
tick,0x7ff90cd6fb64,104283549,0,0x0,8
tick,0x7ff90cd6fb64,104299520,0,0x0,8
tick,0x7ff90cd6fb64,104315424,0,0x0,8
tick,0x7ff90cd6fb64,104331415,0,0x0,8
tick,0x7ff90cd6fb64,104347360,0,0x0,8
tick,0x7ff90cd6fb64,104363142,0,0x0,8
tick,0x7ff90cd6fb64,104379255,0,0x0,8
tick,0x7ff90cd6fb64,104394190,0,0x0,8
tick,0x7ff90cd6fb64,104410021,0,0x0,8
tick,0x7ff90cd6fb64,104425984,0,0x0,8
tick,0x7ff90cd6fb64,104441821,0,0x0,8
tick,0x7ff90cd6fb64,104457701,0,0x0,8
tick,0x7ff90cd6fb64,104472718,0,0x0,8
tick,0x7ff90cd6fb64,104488671,0,0x0,8
tick,0x7ff90cd6fb64,104503659,0,0x0,8
tick,0x7ff90cd6fb64,104519642,0,0x0,8
tick,0x7ff90cd6fb64,104535565,0,0x0,8
tick,0x7ff90cd6fb64,104551135,0,0x0,8
tick,0x7ff90cd6fb64,104567454,0,0x0,8
tick,0x7ff90cd6fb64,104583010,0,0x0,8
tick,0x7ff90cd6fb64,104598868,0,0x0,8
tick,0x7ff90cd6fb64,104614853,0,0x0,8
tick,0x7ff90cd6fb64,104630805,0,0x0,8
tick,0x7ff90cd6fb64,104646408,0,0x0,8
tick,0x7ff90cd6fb64,104662374,0,0x0,8
tick,0x7ff90cd6fb64,104678240,0,0x0,8
tick,0x7ff90cd6fb64,104694302,0,0x0,8
tick,0x7ff90cd6fb64,104710152,0,0x0,8
tick,0x7ff90cd6fb64,104726109,0,0x0,8
tick,0x7ff90cd6fb64,104741084,0,0x0,8
tick,0x7ff90cd6fb64,104756064,0,0x0,8
tick,0x7ff90cd6fb64,104771997,0,0x0,8
tick,0x7ff90cd6fb64,104786981,0,0x0,8
tick,0x7ff90cd6fb64,104802937,0,0x0,8
tick,0x7ff90cd6fb64,104818916,0,0x0,8
tick,0x7ff90cd6fb64,104834904,0,0x0,8
tick,0x7ff90cd6fb64,104850838,0,0x0,8
tick,0x7ff90cd6fb64,104866772,0,0x0,8
tick,0x7ff90cd6fb64,104882730,0,0x0,8
tick,0x7ff90cd6fb64,104898666,0,0x0,8
tick,0x7ff90cd6fb64,104913717,0,0x0,8
tick,0x7ff90cd6fb64,104929671,0,0x0,8
tick,0x7ff90cd6fb64,104945631,0,0x0,8
tick,0x7ff90cd6fb64,104961780,0,0x0,8
tick,0x7ff90cd6fb64,104976641,0,0x0,8
tick,0x7ff90cd6fb64,104991455,0,0x0,8
tick,0x7ff90cd6fb64,105007417,0,0x0,8
tick,0x7ff90cd6fb64,105023301,0,0x0,8
tick,0x7ff90cd6fb64,105039466,0,0x0,8
tick,0x7ff90cd6fb64,105054266,0,0x0,8
tick,0x7ff90cd6fb64,105070278,0,0x0,8
tick,0x7ff90cd6fb64,105086161,0,0x0,8
tick,0x7ff90cd6fb64,105102266,0,0x0,8
tick,0x7ff90cd6fb64,105118118,0,0x0,8
tick,0x7ff90cd6fb64,105134105,0,0x0,8
tick,0x7ff90cd6fb64,105150053,0,0x0,8
tick,0x7ff90cd6fb64,105166029,0,0x0,8
tick,0x7ff90cd6fb64,105181906,0,0x0,8
tick,0x7ff90cd6fb64,105197864,0,0x0,8
tick,0x7ff90cd6fb64,105213918,0,0x0,8
tick,0x7ff90cd6fb64,105229807,0,0x0,8
tick,0x7ff90cd6fb64,105245731,0,0x0,8
tick,0x7ff90cd6fb64,105261932,0,0x0,8
tick,0x7ff90cd6fb64,105277731,0,0x0,8
tick,0x7ff90cd6fb64,105293854,0,0x0,8
tick,0x7ff90cd6fb64,105309637,0,0x0,8
tick,0x7ff90cd6fb64,105325649,0,0x0,8
tick,0x7ff90cd6fb64,105341624,0,0x0,8
tick,0x7ff90cd6fb64,105357554,0,0x0,8
tick,0x7ff90cd6fb64,105373637,0,0x0,8
tick,0x7ff90cd6fb64,105388420,0,0x0,8
tick,0x7ff90cd6fb64,105403402,0,0x0,8
tick,0x7ff90cd6fb64,105419442,0,0x0,8
tick,0x7ff90cd6fb64,105435292,0,0x0,8
tick,0x7ff90cd6fb64,105450312,0,0x0,8
tick,0x7ff90cd6fb64,105466317,0,0x0,8
tick,0x7ff90cd6fb64,105482200,0,0x0,8
tick,0x7ff90cd6fb64,105498141,0,0x0,8
tick,0x7ff90cd6fb64,105514060,0,0x0,8
tick,0x7ff90cd6fb64,105529986,0,0x0,8
tick,0x7ff90cd6fb64,105546079,0,0x0,8
tick,0x7ff90cd6fb64,105562124,0,0x0,8
tick,0x7ff90cd6fb64,105577888,0,0x0,8
tick,0x7ff90cd6fb64,105594015,0,0x0,8
tick,0x7ff90cd6fb64,105610009,0,0x0,8
tick,0x7ff90cd6fb64,105625931,0,0x0,8
tick,0x7ff90cd6fb64,105642080,0,0x0,8
tick,0x7ff90cd6fb64,105657620,0,0x0,8
tick,0x7ff90cd6fb64,105672216,0,0x0,8
tick,0x7ff90cd6fb64,105688105,0,0x0,8
tick,0x7ff90cd6fb64,105703340,0,0x0,8
tick,0x7ff90cd6fb64,105719168,0,0x0,8
tick,0x7ff90cd6fb64,105734349,0,0x0,8
tick,0x7ff90cd6fb64,105749965,0,0x0,8
tick,0x7ff90cd6fb64,105766021,0,0x0,8
tick,0x7ff90cd6fb64,105781946,0,0x0,8
tick,0x7ff90cd6fb64,105797762,0,0x0,8
tick,0x7ff90cd6fb64,105813792,0,0x0,8
tick,0x7ff90cd6fb64,105828861,0,0x0,8
tick,0x7ff90cd6fb64,105843939,0,0x0,8
tick,0x7ff90cd6fb64,105859210,0,0x0,8
tick,0x7ff90cd6fb64,105874810,0,0x0,8
tick,0x7ff90cd6fb64,105890952,0,0x0,8
tick,0x7ff90cd6fb64,105906739,0,0x0,8
tick,0x7ff90cd6fb64,105921714,0,0x0,8
tick,0x7ff90cd6fb64,105936767,0,0x0,8
tick,0x7ff90cd6fb64,105952588,0,0x0,8
tick,0x7ff90cd6fb64,105968445,0,0x0,8
tick,0x7ff90cd6fb64,105984623,0,0x0,8
tick,0x7ff90cd6fb64,106000237,0,0x0,8
tick,0x7ff90cd6fb64,106016195,0,0x0,8
tick,0x7ff90cd6fb64,106032154,0,0x0,8
tick,0x7ff90cd6fb64,106048102,0,0x0,8
tick,0x7ff90cd6fb64,106064083,0,0x0,8
tick,0x7ff90cd6fb64,106079975,0,0x0,8
tick,0x7ff90cd6fb64,106096024,0,0x0,8
tick,0x7ff90cd6fb64,106111866,0,0x0,8
tick,0x7ff90cd6fb64,106127819,0,0x0,8
tick,0x7ff90cd6fb64,106143848,0,0x0,8
tick,0x7ff90cd6fb64,106159761,0,0x0,8
tick,0x7ff90cd6fb64,106175701,0,0x0,8
tick,0x7ff90cd6fb64,106191798,0,0x0,8
tick,0x7ff90cd6fb64,106207631,0,0x0,8
tick,0x7ff90cd6fb64,106222619,0,0x0,8
tick,0x7ff90cd6fb64,106237611,0,0x0,8
tick,0x7ff90cd6fb64,106252160,0,0x0,8
tick,0x7ff90cd6fb64,106268110,0,0x0,8
tick,0x7ff90cd6fb64,106284204,0,0x0,8
tick,0x7ff90cd6fb64,106299996,0,0x0,8
tick,0x7ff90cd6fb64,106315939,0,0x0,8
tick,0x7ff90cd6fb64,106331967,0,0x0,8
tick,0x7ff90cd6fb64,106347895,0,0x0,8
tick,0x7ff90cd6fb64,106362848,0,0x0,8
tick,0x7ff90cd6fb64,106378838,0,0x0,8
tick,0x7ff90cd6fb64,106394823,0,0x0,8
tick,0x7ff90cd6fb64,106410730,0,0x0,8
tick,0x7ff90cd6fb64,106426690,0,0x0,8
tick,0x7ff90cd6fb64,106442771,0,0x0,8
tick,0x7ff90cd6fb64,106457655,0,0x0,8
tick,0x7ff90cd6fb64,106473635,0,0x0,8
tick,0x7ff90cd6fb64,106489533,0,0x0,8
tick,0x7ff90cd6fb64,106505534,0,0x0,8
tick,0x7ff90cd6fb64,106520386,0,0x0,8
tick,0x7ff90cd6fb64,106536330,0,0x0,8
tick,0x7ff90cd6fb64,106551380,0,0x0,8
tick,0x7ff90cd6fb64,106567302,0,0x0,8
tick,0x7ff90cd6fb64,106583482,0,0x0,8
tick,0x7ff90cd6fb64,106599274,0,0x0,8
tick,0x7ff90cd6fb64,106615416,0,0x0,8
tick,0x7ff90cd6fb64,106631121,0,0x0,8
tick,0x7ff90cd6fb64,106647110,0,0x0,8
tick,0x7ff90cd6fb64,106663054,0,0x0,8
tick,0x7ff90cd6fb64,106679013,0,0x0,8
tick,0x7ff90cd6fb64,106694941,0,0x0,8
tick,0x7ff90cd6fb64,106711110,0,0x0,8
tick,0x7ff90cd6fb64,106726829,0,0x0,8
tick,0x7ff90cd6fb64,106743216,0,0x0,8
tick,0x7ff90cd6fb64,106757927,0,0x0,8
tick,0x7ff90cd6fb64,106772770,0,0x0,8
tick,0x7ff90cd6fb64,106787759,0,0x0,8
tick,0x7ff90cd6fb64,106803737,0,0x0,8
tick,0x7ff90cd6fb64,106819791,0,0x0,8
tick,0x7ff90cd6fb64,106835572,0,0x0,8
tick,0x7ff90cd6fb64,106850560,0,0x0,8
tick,0x7ff90cd6fb64,106866623,0,0x0,8
tick,0x7ff90cd6fb64,106882523,0,0x0,8
tick,0x7ff90cd6fb64,106898429,0,0x0,8
tick,0x7ff90cd6fb64,106914343,0,0x0,8
tick,0x7ff90cd6fb64,106930321,0,0x0,8
tick,0x7ff90cd6fb64,106946306,0,0x0,8
tick,0x7ff90cd6fb64,106962240,0,0x0,8
tick,0x7ff90cd6fb64,106978156,0,0x0,8
tick,0x7ff90cd6fb64,106994173,0,0x0,8
tick,0x7ff90cd6fb64,107010222,0,0x0,8
tick,0x7ff90cd6fb64,107026099,0,0x0,8
tick,0x7ff90cd6fb64,107042209,0,0x0,8
tick,0x7ff90cd6fb64,107057061,0,0x0,8
tick,0x7ff90cd6fb64,107072936,0,0x0,8
tick,0x7ff90cd6fb64,107088262,0,0x0,8
tick,0x7ff90cd6fb64,107102854,0,0x0,8
tick,0x7ff90cd6fb64,107118864,0,0x0,8
tick,0x7ff90cd6fb64,107134970,0,0x0,8
tick,0x7ff90cd6fb64,107150776,0,0x0,8
tick,0x7ff90cd6fb64,107166831,0,0x0,8
tick,0x7ff90cd6fb64,107182703,0,0x0,8
tick,0x7ff90cd6fb64,107197640,0,0x0,8
tick,0x7ff90cd6fb64,107213641,0,0x0,8
tick,0x7ff90cd6fb64,107229537,0,0x0,8
tick,0x7ff90cd6fb64,107244554,0,0x0,8
tick,0x7ff90cd6fb64,107259464,0,0x0,8
tick,0x7ff90cd6fb64,107274432,0,0x0,8
tick,0x7ff90cd6fb64,107290363,0,0x0,8
tick,0x7ff90cd6fb64,107306362,0,0x0,8
tick,0x7ff90cd6fb64,107322328,0,0x0,8
tick,0x7ff90cd6fb64,107349245,0,0x0,8
tick,0x7ff90cd6fb64,107353174,0,0x0,8
tick,0x7ff90cd6fb64,107368134,0,0x0,8
tick,0x7ff90cd6fb64,107384167,0,0x0,8
tick,0x7ff90cd6fb64,107400144,0,0x0,8
tick,0x7ff90cd6fb64,107416100,0,0x0,8
tick,0x7ff90cd6fb64,107431955,0,0x0,8
tick,0x7ff90cd6fb64,107447895,0,0x0,8
tick,0x7ff90cd6fb64,107463992,0,0x0,8
tick,0x7ff90cd6fb64,107478855,0,0x0,8
tick,0x7ff90cd6fb64,107494816,0,0x0,8
tick,0x7ff90cd6fb64,107511048,0,0x0,8
tick,0x7ff90cd6fb64,107525711,0,0x0,8
tick,0x7ff90cd6fb64,107541679,0,0x0,8
tick,0x7ff90cd6fb64,107557881,0,0x0,8
tick,0x7ff90cd6fb64,107573657,0,0x0,8
tick,0x7ff90cd6fb64,107589720,0,0x0,8
tick,0x7ff90cd6fb64,107605857,0,0x0,8
tick,0x7ff90cd6fb64,107621699,0,0x0,8
tick,0x7ff90cd6fb64,107637833,0,0x0,8
tick,0x7ff90cd6fb64,107652608,0,0x0,8
tick,0x7ff90cd6fb64,107667924,0,0x0,8
tick,0x7ff90cd6fb64,107684040,0,0x0,8
tick,0x7ff90cd6fb64,107698871,0,0x0,8
tick,0x7ff90cd6fb64,107714831,0,0x0,8
tick,0x7ff90cd6fb64,107730835,0,0x0,8
tick,0x7ff90cd6fb64,107746812,0,0x0,8
tick,0x7ff90cd6fb64,107762783,0,0x0,8
tick,0x7ff90cd6fb64,107777646,0,0x0,8
tick,0x7ff90cd6fb64,107793490,0,0x0,8
tick,0x7ff90cd6fb64,107808505,0,0x0,8
tick,0x7ff90cd6fb64,107823439,0,0x0,8
tick,0x7ff90cd6fb64,107839471,0,0x0,8
tick,0x7ff90cd6fb64,107855444,0,0x0,8
tick,0x7ff90cd6fb64,107871355,0,0x0,8
tick,0x7ff90cd6fb64,107887321,0,0x0,8
tick,0x7ff90cd6fb64,107902362,0,0x0,8
tick,0x7ff90cd6fb64,107917302,0,0x0,8
tick,0x7ff90cd6fb64,107933254,0,0x0,8
tick,0x7ff90cd6fb64,107949163,0,0x0,8
tick,0x7ff90cd6fb64,107965176,0,0x0,8
tick,0x7ff90cd6fb64,107981390,0,0x0,8
tick,0x7ff90cd6fb64,107997037,0,0x0,8
tick,0x7ff90cd6fb64,108012958,0,0x0,8
tick,0x7ff90cd6fb64,108028937,0,0x0,8
tick,0x7ff90cd6fb64,108044934,0,0x0,8
tick,0x7ff90cd6fb64,108060857,0,0x0,8
tick,0x7ff90cd6fb64,108076920,0,0x0,8
tick,0x7ff90cd6fb64,108092832,0,0x0,8
tick,0x7ff90cd6fb64,108107816,0,0x0,8
tick,0x7ff90cd6fb64,108122705,0,0x0,8
tick,0x7ff90cd6fb64,108138811,0,0x0,8
tick,0x7ff90cd6fb64,108154782,0,0x0,8
tick,0x7ff90cd6fb64,108170626,0,0x0,8
tick,0x7ff90cd6fb64,108186689,0,0x0,8
tick,0x7ff90cd6fb64,108202791,0,0x0,8
